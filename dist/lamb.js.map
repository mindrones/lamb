{"version":3,"file":"lamb.js","sources":["../src/privates/currying.js","../src/math/clamp.js","../src/utils.js","../src/privates/array/_toArrayLength.js","../src/privates/number.js","../src/privates/array/_toNaturalIndex.js","../src/accessors/getIndex.js","../src/accessors/getAt.js","../src/accessors/getIn.js","../src/accessors/getKey.js","../src/lamb.js","../src/privates/placeholders.js","../src/core/partial.js","../src/function/binary.js","../src/privates/partial.js","../src/array_basics/forEach.js","../src/array_basics/map.js","../src/privates/array/_makeReducer.js","../src/array_basics/reduce.js","../src/array_basics/slice.js","../src/core/identity.js","../src/core/compose.js","../src/core/generic.js","../src/type/isNull.js","../src/type/isUndefined.js","../src/type/isNil.js","../src/privates/args/_argsToArrayFrom.js","../src/privates/args/_argsTail.js","../src/privates/array/_isArrayIndex.js","../src/privates/array/_setIndex.js","../src/type/type.js","../src/privates/type.js","../src/privates/object.js","../src/privates/string.js","../src/accessors/getPathIn.js","../src/accessors/getPath.js","../src/accessors/head.js","../src/accessors/last.js","../src/accessors/setAt.js","../src/accessors/setIn.js","../src/array_basics/list.js","../src/function/aritize.js","../src/accessors/setIndex.js","../src/accessors/setKey.js","../src/core/partialRight.js","../src/accessors/setPathIn.js","../src/accessors/setPath.js","../src/accessors/updateAt.js","../src/object/enumerables.js","../src/accessors/updateIn.js","../src/accessors/updateIndex.js","../src/accessors/updateKey.js","../src/accessors/updatePathIn.js","../src/accessors/updatePath.js","../src/array/appendTo.js","../src/array/append.js","../src/array_basics/filter.js","../src/logic/areSVZ.js","../src/array_basics/isIn.js","../src/logic/not.js","../src/array/uniquesBy.js","../src/array/uniques.js","../src/array/difference.js","../src/array/dropFrom.js","../src/array/drop.js","../src/privates/array/_getNumConsecutiveHits.js","../src/array/dropWhile.js","../src/array/flatMap.js","../src/array/flatMapWith.js","../src/privates/array/_flatten.js","../src/privates/array/_makeArrayFlattener.js","../src/array/flatten.js","../src/array/init.js","../src/array/insert.js","../src/array/insertAt.js","../src/array_basics/contains.js","../src/privates/array/_makeArrayChecker.js","../src/array_basics/everyIn.js","../src/array/intersection.js","../src/array/partition.js","../src/array/partitionWith.js","../src/array/pluck.js","../src/array_basics/mapWith.js","../src/array/pluckKey.js","../src/array/pullFrom.js","../src/array/pull.js","../src/array/shallowFlatten.js","../src/array/tail.js","../src/array/takeFrom.js","../src/array/take.js","../src/array/takeWhile.js","../src/array/transpose.js","../src/array/unionBy.js","../src/array/union.js","../src/array/zip.js","../src/array/zipWithIndex.js","../src/array_basics/every.js","../src/array_basics/filterWith.js","../src/array_basics/findIndex.js","../src/array_basics/find.js","../src/array_basics/findIndexWhere.js","../src/array_basics/findWhere.js","../src/array_basics/reduceRight.js","../src/array_basics/reduceRightWith.js","../src/array_basics/reduceWith.js","../src/array_basics/reverse.js","../src/array_basics/sliceAt.js","../src/array_basics/someIn.js","../src/array_basics/some.js","../src/core/always.js","../src/function/application.js","../src/function/apply.js","../src/function/applyTo.js","../src/function/asPartial.js","../src/function/collect.js","../src/function/curry.js","../src/function/curryRight.js","../src/function/curryable.js","../src/function/curryableRight.js","../src/function/debounce.js","../src/function/flip.js","../src/function/getArgAt.js","../src/function/invoker.js","../src/function/invokerOn.js","../src/function/mapArgs.js","../src/function/pipe.js","../src/function/tapArgs.js","../src/function/throttle.js","../src/function/unary.js","../src/privates/array/_groupWith.js","../src/grouping/count.js","../src/grouping/countBy.js","../src/grouping/group.js","../src/grouping/groupBy.js","../src/grouping/index.js","../src/grouping/indexBy.js","../src/logic/adapter.js","../src/logic/allOf.js","../src/logic/anyOf.js","../src/logic/areSame.js","../src/logic/case.js","../src/logic/condition.js","../src/logic/gt.js","../src/logic/gte.js","../src/logic/is.js","../src/logic/isGT.js","../src/logic/isGTE.js","../src/logic/lt.js","../src/logic/isLT.js","../src/logic/lte.js","../src/logic/isLTE.js","../src/logic/isSVZ.js","../src/logic/unless.js","../src/logic/when.js","../src/math/sum.js","../src/math/add.js","../src/math/clampWithin.js","../src/math/subtract.js","../src/math/deduct.js","../src/math/divide.js","../src/math/divideBy.js","../src/math/generate.js","../src/math/isFinite.js","../src/math/isInteger.js","../src/math/isSafeInteger.js","../src/math/modulo.js","../src/math/multiply.js","../src/math/multiplyBy.js","../src/math/randomInt.js","../src/math/range.js","../src/math/remainder.js","../src/object/fromPairs.js","../src/object/immutable.js","../src/object/keys.js","../src/object/make.js","../src/object/mapValues.js","../src/object/mapValuesWith.js","../src/object/merge.js","../src/object/mergeOwn.js","../src/object/ownPairs.js","../src/object/ownValues.js","../src/object/pairs.js","../src/object_checking/has.js","../src/object/pick.js","../src/object/pickIf.js","../src/object/pickKeys.js","../src/object/rename.js","../src/object/renameKeys.js","../src/object/renameWith.js","../src/object/skip.js","../src/object/skipIf.js","../src/object/skipKeys.js","../src/object/tear.js","../src/object/tearOwn.js","../src/object/values.js","../src/object_checking/checker.js","../src/object_checking/hasKey.js","../src/object_checking/hasKeyValue.js","../src/object_checking/hasOwn.js","../src/object_checking/hasOwnKey.js","../src/object_checking/hasPathValue.js","../src/object_checking/keySatisfies.js","../src/object_checking/pathExistsIn.js","../src/object_checking/pathExists.js","../src/object_checking/pathSatisfies.js","../src/object_checking/validate.js","../src/object_checking/validateWith.js","../src/privates/comparison/_compareWith.js","../src/privates/comparison/_comparer.js","../src/privates/sorting.js","../src/sort/sort.js","../src/sort/sortWith.js","../src/privates/array/_getInsertionIndex.js","../src/sort/sortedInsert.js","../src/sort/sorter.js","../src/sort/sorterDesc.js","../src/string/padLeft.js","../src/string/padRight.js","../src/string/repeat.js","../src/string/testWith.js","../src/type/isInstanceOf.js","../src/type/isType.js","../index.js"],"sourcesContent":["/**\n * Used by curry functions to collect arguments until the arity is consumed,\n * then applies the original function.\n * @private\n * @param {Function} fn\n * @param {Number} arity\n * @param {Boolean} isRightCurry\n * @param {Boolean} isAutoCurry\n * @param {Array} argsHolder\n * @returns {Function}\n */\nexport function _currier (fn, arity, isRightCurry, isAutoCurry, argsHolder) {\n    return function () {\n        var holderLen = argsHolder.length;\n        var argsLen = arguments.length;\n        var newArgsLen = holderLen + (argsLen > 1 && isAutoCurry ? argsLen : 1);\n        var newArgs = Array(newArgsLen);\n\n        for (var i = 0; i < holderLen; i++) {\n            newArgs[i] = argsHolder[i];\n        }\n\n        for (; i < newArgsLen; i++) {\n            newArgs[i] = arguments[i - holderLen];\n        }\n\n        if (newArgsLen >= arity) {\n            return fn.apply(this, isRightCurry ? newArgs.reverse() : newArgs);\n        } else {\n            return _currier(fn, arity, isRightCurry, isAutoCurry, newArgs);\n        }\n    };\n}\n\n/**\n * Prepares a function for currying. If it's not auto-currying and the arity\n * is 2 or 3 returns optimized functions, otherwise delegates the currying\n * to the <code>_currier</code> function.<br/>\n * If the desumed arity isn't greater than one, it will return the received\n * function itself, instead.\n * @private\n * @param {Function} fn\n * @param {Number} [arity=fn.length]\n * @param {Boolean} [isRightCurry=false]\n * @param {Boolean} [isAutoCurry=false]\n * @returns {Function}\n */\nexport function _curry (fn, arity, isRightCurry, isAutoCurry) {\n    if (arity >>> 0 !== arity) {\n        arity = fn.length;\n    }\n\n    if (isAutoCurry && arity > 1 || arity > 3) {\n        return _currier(fn, arity, isRightCurry, isAutoCurry, []);\n    } else if (arity === 2) {\n        return _curry2(fn, isRightCurry);\n    } else if (arity === 3) {\n        return _curry3(fn, isRightCurry);\n    } else {\n        return fn;\n    }\n}\n\n/**\n * Curries a function of arity 2.\n * @private\n * @param {Function} fn\n * @param {Boolean} [isRightCurry=false]\n * @returns {Function}\n */\nexport function _curry2 (fn, isRightCurry) {\n    return function (a) {\n        return function (b) {\n            return isRightCurry ? fn.call(this, b, a) : fn.call(this, a, b);\n        };\n    };\n}\n\n/**\n * Curries a function of arity 3.\n * @private\n * @param {Function} fn\n * @param {Boolean} [isRightCurry=false]\n * @returns {Function}\n */\nexport function _curry3 (fn, isRightCurry) {\n    return function (a) {\n        return function (b) {\n            return function (c) {\n                return isRightCurry ? fn.call(this, c, b, a) : fn.call(this, a, b, c);\n            };\n        };\n    };\n}\n","/**\n * \"Clamps\" a number within the given limits, both included.<br/>\n * The function will convert to number all its parameters before starting any\n * evaluation, and will return <code>NaN</code> if <code>min</code> is greater\n * than <code>max</code>.\n * @example\n * _.clamp(-5, 0, 10) // => 0\n * _.clamp(5, 0, 10) // => 5\n * _.clamp(15, 0, 10) // => 10\n * _.clamp(0, 0, 10) // => 0\n * _.clamp(10, 0, 10) // => 10\n * _.is(_.clamp(-0, 0, 10), -0) // => true\n * _.clamp(10, 20, 15) // => NaN\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.clampWithin|clampWithin}\n * @since 0.13.0\n * @param {Number} n\n * @param {Number} min\n * @param {Number} max\n * @returns {Number}\n */\nexport default function clamp (n, min, max) {\n    n = +n;\n    min = +min;\n    max = +max;\n\n    if (min > max) {\n        return NaN;\n    } else {\n        return n < min ? min : n > max ? max : n;\n    }\n}\n","import {version} from \"../package.json\";\n\n// prototype shortcuts\nexport var _objectProto = Object.prototype;\nexport var _stringProto = String.prototype;\n\n// varants\nexport var MAX_ARRAY_LENGTH = 4294967295;\n\n// version\nexport var versionObj = {value: version};\n","import clamp from \"@math/clamp\";\nimport {MAX_ARRAY_LENGTH} from \"@src/utils\";\n\n/**\n * Converts a value to a valid array length, thus an integer within\n * <code>0</code> and <code>2<sup>32</sup> - 1</code> (both included).\n * @private\n * @param {*} value\n * @returns {Number}\n */\nexport default function _toArrayLength (value) {\n    return clamp(value, 0, MAX_ARRAY_LENGTH) >>> 0;\n}\n","/**\n * Converts a value to a number and returns it if it's not NaN, otherwise\n * returns zero.\n * @private\n * @param {*} value\n * @returns {Number}\n */\nexport function _forceToNumber (value) {\n    var n = +value;\n\n    return n === n ? n : 0; // eslint-disable-line no-self-compare\n}\n\n/**\n * Converts a value to an integer.\n * @private\n * @param {*} value\n * @returns {Number}\n */\nexport function _toInteger (value) {\n    var n = +value;\n\n    if (n !== n) { // eslint-disable-line no-self-compare\n        return 0;\n    } else if (n % 1 === 0) {\n        return n;\n    } else {\n        return Math.floor(Math.abs(n)) * (n < 0 ? -1 : 1);\n    }\n}\n","import {_toInteger} from \"../number\";\n\n/**\n * Checks if the given number, even negative, represents an array-like index\n * within the provided length. If so returns its natural number equivalent.<br/>\n * Returns <code>NaN<code> otherwise.\n * @private\n * @param {Number} idx\n * @param {Number} len\n * @returns {Number}\n */\nexport default function _toNaturalIndex (idx, len) {\n    idx = _toInteger(idx);\n\n    return idx >= -len && idx < len ? idx < 0 ? idx + len : idx : NaN;\n}\n","import _toArrayLength from \"@privates/array/_toArrayLength\";\nimport _toNaturalIndex from \"@privates/array/_toNaturalIndex\";\n\n/**\n * Retrieves the element at the given index in an array-like object.<br/>\n * Like {@link module:lamb.slice|slice} the index can be negative.<br/>\n * If the index isn't supplied, or if its value isn't an integer within the array-like bounds,\n * the function will return <code>undefined</code>.<br/>\n * <code>getIndex</code> will throw an exception when receives <code>null</code> or\n * <code>undefined</code> in place of an array-like object, but returns <code>undefined</code>\n * for any other value.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.getIndex(arr, 1) // => 2\n * _.getIndex(arr, -1) // => 5\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.getAt|getAt}\n * @see {@link module:lamb.head|head} and {@link module:lamb.last|last} for common use cases shortcuts.\n * @since 0.23.0\n * @param {ArrayLike} arrayLike\n * @param {Number} index\n * @returns {*}\n */\nexport default function getIndex (arrayLike, index) {\n    var idx = _toNaturalIndex(index, _toArrayLength(arrayLike.length));\n\n    return idx === idx ? arrayLike[idx] : void 0; // eslint-disable-line no-self-compare\n}\n","import {_curry2} from \"@privates/currying\";\nimport getIndex from \"./getIndex\";\n\n/**\n * A curried version of {@link module:lamb.getIndex|getIndex} that uses the provided index\n * to build a function expecting the array-like object holding the element we want to retrieve.\n * @example\n * var getFifthElement = _.getAt(4);\n *\n * getFifthElement([1, 2, 3, 4, 5]) // => 5\n * getFifthElement(\"foo bar\") // => \"b\"\n * getFifthElement([]) // => undefined\n * getFifthElement(\"foo\") // => undefined\n *\n * @example <caption>Using negative indexes:</caption>\n * _.getAt(-2)([1, 2, 3]) // => 2\n * _.getAt(-3)(\"foo\") // => \"f\"\n *\n * @memberof module:lamb\n * @category Array\n * @function getAt\n * @since 0.16.0\n * @see {@link module:lamb.getIndex|getIndex}\n * @see {@link module:lamb.head|head} and {@link module:lamb.last|last} for common use cases shortcuts.\n * @param {Number} index\n * @returns {Function}\n */\nexport default _curry2(getIndex, true);\n","/**\n * Returns the value of the object property with the given key.\n * @example\n * var user = {name: \"John\"};\n *\n * _.getIn(user, \"name\") // => \"John\";\n * _.getIn(user, \"surname\") // => undefined\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.getKey|getKey}\n * @see {@link module:lamb.getPath|getPath}, {@link module:lamb.getPathIn|getPathIn}\n * @since 0.18.0\n * @param {Object} obj\n * @param {String} key\n * @returns {*}\n */\nexport default function getIn (obj, key) {\n    return obj[key];\n}\n","import {_curry2} from \"@privates/currying\";\nimport getIn from \"./getIn\";\n\n/**\n * A curried version of {@link module:lamb.getIn|getIn}.<br/>\n * Receives a property name and builds a function expecting the object from which we want to retrieve\n * the property.\n * @example\n * var user1 = {name: \"john\"};\n * var user2 = {name: \"jane\"};\n * var getName = _.getKey(\"name\");\n *\n * getName(user1) // => \"john\"\n * getName(user2) // => \"jane\"\n *\n * @memberof module:lamb\n * @category Object\n * @function getKey\n * @see {@link module:lamb.getIn|getIn}\n * @see {@link module:lamb.getPath|getPath}, {@link module:lamb.getPathIn|getPathIn}\n * @since 0.1.0\n * @param {String} key\n * @returns {Function}\n */\nexport default _curry2(getIn, true);\n","import {versionObj} from \"@src/utils\";\n\nvar lamb = Object.create(null);\n\nexport var _placeholder = lamb; // default value for public placeholder\n\nObject.defineProperties(lamb, {\n    /**\n     * The object used as a placeholder in partial application. Its default value is\n     * the <code>lamb</code> object itself.<br/>\n     * The property is public so that you can make Lamb use your own placeholder, however\n     * you can't change it at will or the partially applied functions you defined before the\n     * change won't recognize the former placeholder.\n     * @memberof module:lamb\n     * @category Special properties\n     * @alias @@lamb/placeholder\n     * @see {@link module:lamb.partial|partial}, {@link module:lamb.partialRight|partialRight}\n     * @see {@link module:lamb.asPartial|asPartial}\n     * @since 0.53.0\n     * @type Object\n     */\n    \"@@lamb/placeholder\": {\n        get: function () {\n            return _placeholder;\n        },\n        set: function (value) {\n            _placeholder = value;\n        }\n    },\n\n    /**\n     * The current library version.\n     * @memberof module:lamb\n     * @category Special properties\n     * @alias @@lamb/version\n     * @readonly\n     * @since 0.53.0\n     * @type String\n     */\n    \"@@lamb/version\": versionObj\n});\n\nexport default lamb;\n","import {_placeholder} from \"@src/lamb\";\n\nexport var _ = {}; // internal placeholder for partial application\n\n/**\n * Checks whether the given value is the internal or the public placeholder.\n * @private\n * @param {*} value\n * @returns {Boolean}\n */\nexport function _isPlaceholder (value) {\n    return value === _ || value === _placeholder;\n}\n","import {_isPlaceholder} from \"@privates/placeholders\";\n\n/**\n * Builds a partially applied function. The <code>lamb</code> object itself can be\n * used as a placeholder argument and it's useful to alias it with a short symbol\n * such as <code>_</code>.<br/>\n * You can use a custom placeholder by setting the\n * {@link module:lamb.@@lamb/placeholder|@@lamb/placeholder} property.\n * @example\n * var users = [\n *     {id: 1, name: \"John\", active: true, confirmedMail: true},\n *     {id: 2, name: \"Jane\", active: true, confirmedMail: false},\n *     {id: 3, name: \"Mario\", active: false, confirmedMail: false}\n * ];\n * var isKeyTrue = _.partial(_.hasKeyValue, [_, true]);\n * var isActive = isKeyTrue(\"active\");\n * var hasConfirmedMail = isKeyTrue(\"confirmedMail\");\n *\n * _.map(users, isActive) // => [true, true, false]\n * _.map(users, hasConfirmedMail) // => [true, false, false]\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.partialRight|partialRight}\n * @see {@link module:lamb.asPartial|asPartial}\n * @see {@link module:lamb.curry|curry}, {@link module:lamb.curryRight|curryRight}\n * @see {@link module:lamb.curryable|curryable}, {@link module:lamb.curryableRight|curryableRight}\n * @see {@link module:lamb.@@lamb/placeholder|@@lamb/placeholder}\n * @since 0.1.0\n * @param {Function} fn\n * @param {Array} args\n * @returns {Function}\n */\nexport default function partial (fn, args) {\n    return function () {\n        if (!Array.isArray(args)) {\n            return fn.apply(this, arguments);\n        }\n\n        var lastIdx = 0;\n        var newArgs = [];\n        var argsLen = args.length;\n\n        for (var i = 0, boundArg; i < argsLen; i++) {\n            boundArg = args[i];\n            newArgs[i] = _isPlaceholder(boundArg) ? arguments[lastIdx++] : boundArg;\n        }\n\n        for (var len = arguments.length; lastIdx < len; lastIdx++) {\n            newArgs[i++] = arguments[lastIdx];\n        }\n\n        return fn.apply(this, newArgs);\n    };\n}\n","/**\n * Builds a function that passes only two arguments to the given function.<br/>\n * It's simply a shortcut for a common use case of {@link module:lamb.aritize|aritize},\n * exposed for convenience.\n * @example\n * _.list(1, 2, 3, 4, 5) // => [1, 2, 3, 4, 5]\n * _.binary(_.list)(1, 2, 3, 4, 5) // => [1, 2]\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.aritize|aritize}\n * @see {@link module:lamb.unary|unary}\n * @since 0.10.0\n * @param {Function} fn\n * @returns {Function}\n */\nexport default function binary (fn) {\n    return function (a, b) {\n        return fn.call(this, a, b);\n    };\n}\n","import partial from \"@core/partial\";\nimport binary from \"@function/binary\";\nimport {_} from \"@privates/placeholders\";\nimport {_placeholder} from \"@src/lamb\";\n\n/**\n * Keeps building a partial application of the received function as long\n * as it's called with placeholders; applies the original function to\n * the collected parameters otherwise.<br/>\n * The function checks only the public placeholder to gain a little performance\n * as no function in Lamb is built with {@link module:lamb.asPartial|asPartial}.\n * @private\n * @param {Function} fn\n * @param {Array} argsHolder\n * @returns {Function|*}\n */\nexport function _asPartial (fn, argsHolder) {\n    return function () {\n        var argsLen = arguments.length;\n        var lastIdx = 0;\n        var newArgs = [];\n\n        for (var i = 0, len = argsHolder.length, boundArg; i < len; i++) {\n            boundArg = argsHolder[i];\n            newArgs[i] = boundArg === _placeholder && lastIdx < argsLen ? arguments[lastIdx++] : boundArg;\n        }\n\n        while (lastIdx < argsLen) {\n            newArgs[i++] = arguments[lastIdx++];\n        }\n\n        for (i = 0; i < argsLen; i++) {\n            if (arguments[i] === _placeholder) {\n                return _asPartial(fn, newArgs);\n            }\n        }\n\n        for (i = 0, len = newArgs.length; i < len; i++) {\n            if (newArgs[i] === _placeholder) {\n                newArgs[i] = void 0;\n            }\n        }\n\n        return fn.apply(this, newArgs);\n    };\n}\n\n/**\n * Builds a partial application of a ternary function so that its first parameter\n * is expected as the last one.<br/>\n * The <code>shouldAritize</code> parameter is for the \"reduce\" functions, where\n * the absence of the <code>initialValue</code> transforms a \"fold\" operation into a\n * \"reduce\" one.\n * @private\n * @param {Function} fn\n * @param {Boolean} shouldAritize\n * @returns {Function}\n */\nexport function _makePartial3 (fn, shouldAritize) {\n    return function (a, b) {\n        var f = shouldAritize && arguments.length !== 2 ? binary(fn) : fn;\n\n        return partial(f, [_, a, b]);\n    };\n}\n","import _toArrayLength from \"@privates/array/_toArrayLength\";\n\n/**\n * Executes the provided <code>iteratee</code> for each element of the given array-like object.<br/>\n * Note that unlike the native array method this function doesn't skip unassigned or deleted indexes.\n * @example <caption>Adding a CSS class to all elements of a NodeList in a browser environment:</caption>\n * var addClass = _.curry(function (className, element) {\n *     element.classList.add(className);\n * });\n * var paragraphs = document.querySelectorAll(\"#some-container p\");\n *\n * _.forEach(paragraphs, addClass(\"main\"));\n * // each \"p\" element in the container will have the \"main\" class now\n *\n * @memberof module:lamb\n * @category Array\n * @since 0.1.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} iteratee\n * @returns {Undefined}\n */\nexport default function forEach (arrayLike, iteratee) {\n    for (var i = 0, len = _toArrayLength(arrayLike.length); i < len; i++) {\n        iteratee(arrayLike[i], i, arrayLike);\n    }\n}\n","import _toArrayLength from \"@privates/array/_toArrayLength\";\n\n/**\n * Builds a new array by applying the iteratee function to each element of the\n * received array-like object.<br/>\n * Note that unlike the native array method this function doesn't skip unassigned or deleted indexes.\n * @example\n * _.map([\"Joe\", \"Mario\", \"Jane\"], _.invoker(\"toUpperCase\")) // => [\"JOE\", \"MARIO\", \"JANE\"]\n *\n * _.map([4, 9, 16], Math.sqrt); // => [2, 3, 4]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.mapWith|mapWith}\n * @see {@link module:lamb.flatMap|flatMap}, {@link module:lamb.flatMapWith|flatMapWith}\n * @since 0.1.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} iteratee\n * @returns {Array}\n */\nexport default function map (arrayLike, iteratee) {\n    var len = _toArrayLength(arrayLike.length);\n    var result = Array(len);\n\n    for (var i = 0; i < len; i++) {\n        result[i] = iteratee(arrayLike[i], i, arrayLike);\n    }\n\n    return result;\n}\n","import _toArrayLength from \"./_toArrayLength\";\n\n/**\n * Builds a reduce function. The <code>step</code> parameter must be <code>1</code>\n * to build  {@link module:lamb.reduce|reduce} and <code>-1</code> to build\n * {@link module:lamb.reduceRight|reduceRight}.\n * @private\n * @param {Number} step\n * @returns {Function}\n */\nexport default function _makeReducer (step) {\n    return function (arrayLike, accumulator, initialValue) {\n        var len = _toArrayLength(arrayLike.length);\n        var idx = step === 1 ? 0 : len - 1;\n        var nCalls;\n        var result;\n\n        if (arguments.length === 3) {\n            nCalls = len;\n            result = initialValue;\n        } else {\n            if (len === 0) {\n                throw new TypeError(\"Reduce of empty array-like with no initial value\");\n            }\n\n            result = arrayLike[idx];\n            idx += step;\n            nCalls = len - 1;\n        }\n\n        for (; nCalls--; idx += step) {\n            result = accumulator(result, arrayLike[idx], idx, arrayLike);\n        }\n\n        return result;\n    };\n}\n","import _makeReducer from \"@privates/array/_makeReducer\";\n\n/**\n * Reduces (or folds) the values of an array-like object, starting from the first, to a new\n * value using the provided <code>accumulator</code> function.<br/>\n * Note that unlike the native array method this function doesn't skip unassigned or deleted indexes.\n * @example\n * _.reduce([1, 2, 3, 4], _.sum) // => 10\n *\n * @memberof module:lamb\n * @category Array\n * @function reduce\n * @see {@link module:lamb.reduceRight|reduceRight}\n * @see {@link module:lamb.reduceWith|reduceWith}, {@link module:lamb.reduceRightWith|reduceRightWith}\n * @since 0.1.0\n * @param {ArrayLike} arrayLike\n * @param {AccumulatorCallback} accumulator\n * @param {*} [initialValue]\n * @returns {*}\n */\nexport default _makeReducer(1);\n","import _toArrayLength from \"@privates/array/_toArrayLength\";\nimport {_toInteger} from \"@privates/number\";\n\n/**\n * Builds an array by extracting a portion of an array-like object.<br/>\n * Note that unlike the native array method this function ensures that dense\n * arrays are returned.<br/>\n * Also, unlike the native method, the <code>start</code> and <code>end</code>\n * parameters aren't optional and will be simply converted to integer.<br/>\n * See {@link module:lamb.dropFrom|dropFrom} and {@link module:lamb.drop|drop} if you want a\n * slice to the end of the array-like.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.slice(arr, 0, 2) // => [1, 2]\n * _.slice(arr, 2, -1) // => [3, 4]\n * _.slice(arr, -3, 5) // => [3, 4, 5]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.sliceAt|sliceAt}\n * @see {@link module:lamb.dropFrom|dropFrom}, {@link module:lamb.drop|drop}\n * @since 0.1.0\n * @param {ArrayLike} arrayLike - Any array like object.\n * @param {Number} start - Index at which to begin extraction.\n * @param {Number} end - Index at which to end extraction. Extracts up to but not including end.\n * @returns {Array}\n */\nexport default function slice (arrayLike, start, end) {\n    var len = _toArrayLength(arrayLike.length);\n    var begin = _toInteger(start);\n    var upTo = _toInteger(end);\n\n    if (begin < 0) {\n        begin = begin < -len ? 0 : begin + len;\n    }\n\n    if (upTo < 0) {\n        upTo = upTo < -len ? 0 : upTo + len;\n    } else if (upTo > len) {\n        upTo = len;\n    }\n\n    var resultLen = upTo - begin;\n    var result = resultLen > 0 ? Array(resultLen) : [];\n\n    for (var i = 0; i < resultLen; i++) {\n        result[i] = arrayLike[begin + i];\n    }\n\n    return result;\n}\n","/**\n * The I combinator. Any value passed to the function is simply returned as it is.\n * @example\n * var foo = {bar: \"baz\"};\n *\n * _.identity(foo) === foo // true\n *\n * @memberof module:lamb\n * @category Function\n * @see [SKI combinator calculus]{@link https://en.wikipedia.org/wiki/SKI_combinator_calculus}\n * @since 0.1.0\n * @param {*} value\n * @returns {*} The value passed as parameter.\n */\nexport default function identity (value) {\n    return value;\n}\n","import identity from \"./identity\";\n\n/**\n * Returns a function that is the composition of the functions given as parameters.\n * Each function consumes the result of the function that follows.\n * @example\n * var sayHi = function (name) { return \"Hi, \" + name; };\n * var capitalize = function (s) {\n *     return s[0].toUpperCase() + s.substr(1).toLowerCase();\n * };\n * var fixNameAndSayHi = _.compose(sayHi, capitalize);\n *\n * sayHi(\"bOb\") // => \"Hi, bOb\"\n * fixNameAndSayHi(\"bOb\") // \"Hi, Bob\"\n *\n * var users = [{name: \"fred\"}, {name: \"bOb\"}];\n * var sayHiToUser = _.compose(fixNameAndSayHi, _.getKey(\"name\"));\n *\n * _.map(users, sayHiToUser) // [\"Hi, Fred\", \"Hi, Bob\"]\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.pipe|pipe}\n * @since 0.1.0\n * @param {...Function} fn\n * @returns {Function}\n */\nexport default function compose () {\n    var functions = arguments;\n    var len = functions.length;\n\n    return len ? function () {\n        var idx = len - 1;\n        var result = functions[idx].apply(this, arguments);\n\n        while (idx--) {\n            result = functions[idx].call(this, result);\n        }\n\n        return result;\n    } : identity;\n}\n","/**\n * Creates generic functions out of methods.\n * @author A very little change on a great idea by [Irakli Gozalishvili]{@link https://github.com/Gozala/}.\n * Thanks for this *beautiful* one-liner (never liked your \"unbind\" naming choice, though).\n * @example\n * var join = _.generic(Array.prototype.join);\n *\n * join([1, 2, 3, 4, 5], \"-\") // => \"1-2-3-4-5\"\n *\n * // the function will work with any array-like object\n * join(\"hello\", \"-\") // => \"h-e-l-l-o\"\n *\n * @memberof module:lamb\n * @category Function\n * @function generic\n * @since 0.1.0\n * @param {Function} method\n * @returns {Function}\n */\nexport default Function.bind.bind(Function.call);\n","/**\n * Verifies if a value is <code>null</code>.\n * @example\n * _.isNull(null) // => true\n * _.isNull(void 0) // => false\n * _.isNull(false) // => false\n *\n * @memberof module:lamb\n * @category Type\n * @see {@link module:lamb.isNil|isNil} if you want to check for <code>undefined</code> too.\n * @since 0.1.0\n * @param {*} value\n * @returns {Boolean}\n */\nexport default function isNull (value) {\n    return value === null;\n}\n","/**\n * Verifies if a value is <code>undefined</code>.\n * @example\n * _.isUndefined(null) // => false\n * _.isUndefined(void 0) // => true\n * _.isUndefined(false) // => false\n *\n * @memberof module:lamb\n * @category Type\n * @see {@link module:lamb.isNil|isNil} if you want to check for <code>null</code> too.\n * @since 0.1.0\n * @param {*} value\n * @returns {Boolean}\n */\nexport default function isUndefined (value) {\n    return value === void 0;\n}\n","import isNull from \"./isNull\";\nimport isUndefined from \"./isUndefined\";\n\n/**\n * Verifies if a value is <code>null</code> or <code>undefined</code>.\n * @example\n * _.isNil(NaN) // => false\n * _.isNil({}) // => false\n * _.isNil(null) // => true\n * _.isNil(void 0) // => true\n * _.isNil() // => true\n *\n * @memberof module:lamb\n * @category Type\n * @since 0.1.0\n * @see {@link module:lamb.isNull|isNull}\n * @see {@link module:lamb.isUndefined|isUndefined}\n * @param {*} value\n * @returns {Boolean}\n */\nexport default function isNil (value) {\n    return isNull(value) || isUndefined(value);\n}\n","/**\n * Builds helper functions to extract portions of the arguments\n * object rather efficiently without having to write for loops\n * manually for each case.<br/>\n * The arguments object needs to be passed to the apply method\n * of the generated function.\n * @private\n * @param {Number} idx\n * @returns {Function}\n */\nexport default function _argsToArrayFrom (idx) {\n    return function () {\n        var argsLen = arguments.length || idx;\n        var len = argsLen - idx;\n        var result = Array(len);\n\n        for (var i = 0; i < len; i++) {\n            result[i] = arguments[i + idx];\n        }\n\n        return result;\n    };\n}\n","import _argsToArrayFrom from \"./_argsToArrayFrom\";\n\n/**\n * Builds an array with the received arguments excluding the first one.<br/>\n * To be used with the arguments object, which needs to be passed to the apply\n * method of this function.\n * @private\n * @function _argsTail\n * @param {...*} value\n * @returns {Array}\n */\nexport default _argsToArrayFrom(1);\n","import {_isEnumerable} from \"../object\";\n\n/**\n * Accepts a target object and a key name and verifies that the target is an array and that\n * the key is an existing index.\n * @private\n * @param {Object} target\n * @param {String|Number} key\n * @returns {Boolean}\n */\nexport default function _isArrayIndex (target, key) {\n    var n = +key;\n\n    return Array.isArray(target) && n % 1 === 0 && !(n < 0 && _isEnumerable(target, key));\n}\n","import slice from \"@array_basics/slice\";\nimport _toNaturalIndex from \"./_toNaturalIndex\";\n\n/**\n * Sets an index in an array-like object.<br/>\n * If provided with an updater function it will use it to update the current value,\n * otherwise sets the index to the specified value.\n * @private\n * @param {ArrayLike} arrayLike\n * @param {Number} idx\n * @param {*} [value]\n * @param {Function} [updater]\n * @returns {Array}\n */\nexport default function _setIndex (arrayLike, idx, value, updater) {\n    var result = slice(arrayLike, 0, arrayLike.length);\n    var n = _toNaturalIndex(idx, result.length);\n\n    if (n === n) { // eslint-disable-line no-self-compare\n        result[n] = arguments.length === 4 ? updater(arrayLike[n]) : value;\n    }\n\n    return result;\n}\n","import {_objectProto} from \"@src/utils\";\n\n/**\n * Retrieves the \"type tag\" from the given value.\n * @example\n * var x = 5;\n * var y = new Number(5);\n *\n * typeof x // => \"number\"\n * typeof y // => \"object\"\n * _.type(x) // => \"Number\"\n * _.type(y) // => \"Number\"\n *\n * _.type(Object.prototype.toString) // => \"Function\"\n * _.type(/a/) // => \"RegExp\"\n *\n * @memberof module:lamb\n * @category Type\n * @see {@link module:lamb.isType|isType}\n * @since 0.9.0\n * @param {*} value\n * @returns {String}\n */\nexport default function type (value) {\n    return _objectProto.toString.call(value).slice(8, -1);\n}\n","import type from \"@type/type\";\n\n/**\n * Builds a TypeError stating that it's not possible to convert the given value to the\n * desired type.\n * @private\n * @param {*} value\n * @param {String} desiredType\n * @returns {TypeError}\n */\nexport function _makeTypeErrorFor (value, desiredType) {\n    return new TypeError(\"Cannot convert \" + type(value).toLowerCase() + \" to \" + desiredType);\n}\n","import {_objectProto} from \"@src/utils\";\nimport getIn from \"@accessors/getIn\";\nimport forEach from \"@array_basics/forEach\";\nimport map from \"@array_basics/map\";\nimport reduce from \"@array_basics/reduce\";\nimport slice from \"@array_basics/slice\";\nimport compose from \"@core/compose\";\nimport generic from \"@core/generic\";\nimport partial from \"@core/partial\";\nimport isNil from \"@type/isNil\";\nimport isNull from \"@type/isNull\";\nimport isUndefined from \"@type/isUndefined\";\nimport _argsTail from \"./args/_argsTail\";\nimport _isArrayIndex from \"./array/_isArrayIndex\";\nimport _setIndex from \"./array/_setIndex\";\nimport {_curry2} from \"./currying\";\nimport {_makeTypeErrorFor} from \"./type\";\n\n/**\n * Checks whether the specified key is an enumerable property of the given object or not.\n * @private\n * @param {Object} obj\n * @param {String} key\n * @returns {Boolean}\n */\nexport function _isEnumerable (obj, key) {\n    return key in Object(obj) && (_isOwnEnumerable(obj, key) || ~_safeEnumerables(obj).indexOf(key));\n}\n\n/**\n * Checks if a path is valid in the given object and retrieves the path target.\n * @private\n * @param {Object} obj\n * @param {String[]} parts\n * @param {Boolean} walkNonEnumerables\n * @returns {Object}\n */\nexport function _getPathInfo (obj, parts, walkNonEnumerables) {\n    if (isNil(obj)) {\n        throw _makeTypeErrorFor(obj, \"object\");\n    }\n\n    var target = obj;\n    var i = -1;\n    var len = parts.length;\n    var key;\n\n    while (++i < len) {\n        key = _getPathKey(target, parts[i], walkNonEnumerables);\n\n        if (isUndefined(key)) {\n            break;\n        }\n\n        target = target[key];\n    }\n\n    return i === len ? {isValid: true, target: target} : {isValid: false, target: void 0};\n}\n\n/**\n * Helper to retrieve the correct key while evaluating a path.\n * @private\n * @param {Object} target\n * @param {String} key\n * @param {Boolean} includeNonEnumerables\n * @returns {String|Number|Undefined}\n */\nexport function _getPathKey (target, key, includeNonEnumerables) {\n    if (includeNonEnumerables && key in Object(target) || _isEnumerable(target, key)) {\n        return key;\n    }\n\n    var n = +key;\n    var len = target && target.length;\n\n    return n >= -len && n < len ? n < 0 ? n + len : n : void 0;\n}\n\n/**\n * Makes an object immutable by recursively calling <code>Object.freeze</code>\n * on its members.\n * @private\n * @param {Object} obj\n * @param {Array} seen\n * @returns {Object} The obj parameter itself, not a copy.\n */\nexport function _immutable (obj, seen) {\n    if (seen.indexOf(obj) === -1) {\n        seen.push(Object.freeze(obj));\n\n        forEach(Object.getOwnPropertyNames(obj), function (key) {\n            var value = obj[key];\n\n            if (typeof value === \"object\" && !isNull(value)) {\n                _immutable(value, seen);\n            }\n        });\n    }\n\n    return obj;\n}\n\n/**\n * If a method with the given name exists on the target, applies it to the provided\n * arguments and returns the result. Returns <code>undefined</code> otherwise.<br/>\n * The arguments for the method are built by concatenating the array of bound arguments,\n * optionally received by {@link module:lamb.invoker|invoker}, with the final set of, also\n * optional, <code>args</code>.\n * @private\n * @param {Array} boundArgs\n * @param {String} methodName\n * @param {Object} target\n * @param {...*} [args]\n * @returns {*}\n */\nexport function _invoker (boundArgs, methodName, target) {\n    var method = target[methodName];\n\n    if (typeof method !== \"function\") {\n        return void 0;\n    }\n\n    var boundArgsLen = boundArgs.length;\n    var ofs = 3 - boundArgsLen;\n    var len = arguments.length - ofs;\n    var args = Array(len);\n\n    for (var i = 0; i < boundArgsLen; i++) {\n        args[i] = boundArgs[i];\n    }\n\n    for (; i < len; i++) {\n        args[i] = arguments[i + ofs];\n    }\n\n    return method.apply(target, args);\n}\n\n/**\n * Checks whether the specified key is a own enumerable property of the given object or not.\n * @private\n * @function\n * @param {Object} obj\n * @param {String} key\n * @returns {Boolean}\n */\nexport var _isOwnEnumerable = generic(_objectProto.propertyIsEnumerable);\n\n/**\n * Accepts an object and build a function expecting a key to create a \"pair\" with the key\n * and its value.\n * @private\n * @function\n * @param {Object} obj\n * @returns {Function}\n */\nexport var _keyToPairIn = _curry2(function (obj, key) {\n    return [key, obj[key]];\n});\n\n/**\n * Merges the received objects using the provided function to retrieve their keys.\n * @private\n * @param {Function} getKeys\n * @param {...Object} source\n * @returns {Object}\n */\nexport function _merge (getKeys) {\n    return reduce(_argsTail.apply(null, arguments), function (result, source) {\n        forEach(getKeys(source), function (key) {\n            result[key] = source[key];\n        });\n\n        return result;\n    }, {});\n}\n\n/**\n * Using the provided function to retrieve the keys, builds a new function\n * expecting an object to create a list of key / value pairs.\n * @private\n * @function\n * @param {Function} getKeys\n * @returns {Function}\n */\nexport var _pairsFrom = _curry2(function (getKeys, obj) {\n    return map(getKeys(obj), _keyToPairIn(obj));\n});\n\n/**\n * Builds a list of the enumerable properties of an object.\n * The function is null-safe, unlike the public one.\n * @private\n * @param {Object} obj\n * @returns {String[]}\n */\nexport function _safeEnumerables (obj) {\n    var result = [];\n\n    for (var key in obj) {\n        result.push(key);\n    }\n\n    return result;\n}\n\n/**\n * A null-safe version of <code>Object.keys</code>.\n * @private\n * @function\n * @param {Object} obj\n * @returns {String[]}\n */\nexport var _safeKeys = compose(Object.keys, Object);\n\n/**\n * Sets, or creates, a property in a copy of the provided object to the desired value.\n * @private\n * @param {Object} source\n * @param {String} key\n * @param {*} value\n * @returns {Object}\n */\nexport function _setIn (source, key, value) {\n    var result = {};\n\n    for (var prop in source) {\n        result[prop] = source[prop];\n    }\n\n    result[key] = value;\n\n    return result;\n}\n\n/**\n * Sets the object's property targeted by the given path to the desired value.<br/>\n * Works with arrays and is able to set their indexes, even negative ones.\n * @private\n * @param {Object|Array} obj\n * @param {String[]} parts\n * @param {*} value\n * @returns {Object|Array}\n */\nexport function _setPathIn (obj, parts, value) {\n    var key = parts[0];\n    var partsLen = parts.length;\n    var v;\n\n    if (partsLen === 1) {\n        v = value;\n    } else {\n        var targetKey = _getPathKey(obj, key, false);\n\n        v = _setPathIn(\n            isUndefined(targetKey) ? targetKey : obj[targetKey],\n            slice(parts, 1, partsLen),\n            value\n        );\n    }\n\n    return _isArrayIndex(obj, key) ? _setIndex(obj, key, v) : _setIn(obj, key, v);\n}\n\n/**\n * Using the provided function to retrieve the keys of an object, builds\n * a function expecting an object to create an array containing a list\n * of the keys in its first index and the corresponding list of values\n * in the second one.\n * @private\n * @function\n * @param {Function} getKeys\n * @returns {Function}\n */\nexport var _tearFrom = _curry2(function (getKeys, obj) {\n    return reduce(getKeys(obj), function (result, key) {\n        result[0].push(key);\n        result[1].push(obj[key]);\n\n        return result;\n    }, [[], []]);\n});\n\n/**\n * Creates a non-null-safe version of the provided \"getKeys\" function.\n * @private\n * @function\n * @param {Function} getKeys\n * @returns {Function}\n */\nexport var _unsafeKeyListFrom = _curry2(function (getKeys, obj) {\n    if (isNil(obj)) {\n        throw _makeTypeErrorFor(obj, \"object\");\n    }\n\n    return getKeys(obj);\n});\n\n/**\n * Using the provided function to retrieve the keys of an object, builds\n * a function expecting an object to create the list of values for such keys.\n * @private\n * @function\n * @param {Function} getKeys\n * @returns {Function}\n */\nexport var _valuesFrom = _curry2(function (getKeys, obj) {\n    return map(getKeys(obj), partial(getIn, [obj]));\n});\n","import isNil from \"@type/isNil\";\nimport type from \"@type/type\";\nimport generic from \"@core/generic\";\nimport {_stringProto} from \"@src/utils\";\n\n/**\n * Builds the prefix or suffix to be used when padding a string.\n * @private\n * @param {String} source\n * @param {String} char\n * @param {Number} len\n * @returns {String}\n */\nexport function _getPadding (source, char, len) {\n    if (!isNil(source) && type(source) !== \"String\") {\n        source = String(source);\n    }\n\n    return _repeat(String(char)[0] || \"\", Math.ceil(len - source.length));\n}\n\n/**\n * A null-safe function to repeat the source string the desired amount of times.\n * @private\n * @param {String} source\n * @param {Number} times\n * @returns {String}\n */\nexport function _repeat (source, times) {\n    var result = \"\";\n\n    for (var i = 0; i < times; i++) {\n        result += source;\n    }\n\n    return result;\n}\n\n/**\n * A generic version of <code>String.prototype.search</code>\n * @private\n * @function\n * @param {String} s\n * @param {RegExp} pattern\n * @return {Number}\n */\nexport var _search = generic(_stringProto.search);\n\n/**\n * Splits a string path using the provided separator and returns an array\n * of path parts.\n * @private\n * @param {String} path\n * @param {String} separator\n * @returns {String[]}\n */\nexport function _toPathParts (path, separator) {\n    return String(path).split(separator || \".\");\n}\n","import {_getPathInfo} from \"@privates/object\";\nimport {_toPathParts} from \"@privates/string\";\n\n/**\n * Gets a nested property value from an object using the given path.<br/>\n * The path is a string with property names separated by dots by default, but\n * it can be customised with the optional third parameter.<br/>\n * You can use integers in the path, even negative ones, to refer to array-like\n * object indexes, but the priority will be given to existing object keys:\n * the last example explains this particular case.\n * @example\n * var user = {\n *     name: \"John\",\n *     surname: \"Doe\",\n *     login: {\n *         \"user.name\": \"jdoe\",\n *         password: \"abc123\"\n *     },\n *     scores: [\n *         {id: 1, value: 10},\n *         {id: 2, value: 20},\n *         {id: 3, value: 30}\n *     ]\n * };\n *\n * _.getPathIn(user, \"name\") // => \"John\"\n * _.getPathIn(user, \"login.password\") // => \"abc123\";\n * _.getPathIn(user, \"login/user.name\", \"/\") // => \"jdoe\"\n * _.getPathIn(user, \"name.foo\") // => undefined\n * _.getPathIn(user, \"name.foo.bar\") // => undefined\n *\n * @example <caption>Accessing array-like objects indexes:</caption>\n * _.getPathIn(user, \"login.password.1\") // => \"b\"\n * _.getPathIn(user, \"scores.0\") // => {id: 1, value: 10}\n * _.getPathIn(user, \"scores.-1.value\") // => 30\n *\n * @example <caption>Priority will be given to existing object keys over indexes:</caption>\n * _.getPathIn(user, \"scores.-1\") // => {id: 3, value: 30}\n *\n * // let's do something funny\n * user.scores[\"-1\"] = \"foo bar\";\n *\n * _.getPathIn(user, \"scores.-1\") // => \"foo bar\";\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.getPath|getPath}\n * @see {@link module:lamb.getIn|getIn}, {@link module:lamb.getKey|getKey}\n * @since 0.19.0\n * @param {Object|ArrayLike} obj\n * @param {String} path\n * @param {String} [separator=\".\"]\n * @returns {*}\n */\nexport default function getPathIn (obj, path, separator) {\n    return _getPathInfo(obj, _toPathParts(path, separator), true).target;\n}\n","import {_makePartial3} from \"@privates/partial\";\nimport getPathIn from \"./getPathIn\";\n\n/**\n * Builds a partial application of {@link module:lamb.getPathIn|getPathIn} with the given\n * path and separator, expecting the object to act upon.<br/>\n * @example\n *  var user = {\n *     name: \"John\",\n *     surname: \"Doe\",\n *     login: {\n *         \"user.name\": \"jdoe\",\n *         password: \"abc123\"\n *     }\n * };\n *\n * var getPwd = _.getPath(\"login.password\");\n * var getUsername = _.getPath(\"login/user.name\", \"/\");\n *\n * getPwd(user) // => \"abc123\";\n * getUsername(user) // => \"jdoe\"\n *\n * @memberof module:lamb\n * @category Object\n * @function getPath\n * @see {@link module:lamb.getPathIn|getPathIn}\n * @see {@link module:lamb.getIn|getIn}, {@link module:lamb.getKey|getKey}\n * @since 0.19.0\n * @param {String} path\n * @param {String} [separator=\".\"]\n * @returns {Function}\n */\nexport default _makePartial3(getPathIn);\n","import getAt from \"./getAt\";\n\n/**\n * Retrieves the first element of an array-like object.<br/>\n * Just a common use case of {@link module:lamb.getAt|getAt} exposed for convenience.\n * @example\n * _.head([1, 2, 3]) // => 1\n * _.head(\"hello\") // => \"h\"\n * _.head([]) // => undefined\n *\n * @memberof module:lamb\n * @category Array\n * @function head\n * @see {@link module:lamb.last|last}\n * @see {@link module:lamb.getIndex|getIndex}, {@link module:lamb.getAt|getAt}\n * @since 0.16.0\n * @param {ArrayLike} arrayLike\n * @returns {*}\n */\nexport default getAt(0);\n","import getAt from \"./getAt\";\n\n/**\n * Retrieves the last element of an array-like object.<br/>\n * Just a common use case of {@link module:lamb.getAt|getAt} exposed for convenience.\n * @example\n * _.last([1, 2, 3]) // => 3\n * _.last(\"hello\") // => \"o\"\n * _.last([]) // => undefined\n *\n * @memberof module:lamb\n * @category Array\n * @function last\n * @see {@link module:lamb.head|head}\n * @see {@link module:lamb.getIndex|getIndex}, {@link module:lamb.getAt|getAt}\n * @since 0.16.0\n * @param {ArrayLike} arrayLike\n * @returns {*}\n */\nexport default getAt(-1);\n","import {_makePartial3} from \"@privates/partial\";\nimport _setIndex from \"@privates/array/_setIndex\";\n\n/**\n * Builds a function that creates a copy of an array-like object with the given\n * index changed to the desired value.<br/>\n * If the index is not an integer or if it's out of bounds, the function\n * will return a copy of the original array.<br/>\n * Negative indexes are allowed.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.setAt(2, 99)(arr) // => [1, 2, 99, 4, 5]\n * arr // => [1, 2, 3, 4, 5]\n *\n * _.setAt(10, 99)(arr) // => [1, 2, 3, 4, 5] (not a reference to `arr`)\n *\n * @example <caption>Using negative indexes:</caption>\n * _.setAt(-1, 99)(arr) // => [1, 2, 3, 4, 99]\n *\n * @memberof module:lamb\n * @category Array\n * @function setAt\n * @see {@link module:lamb.setIndex|setIndex}\n * @since 0.17.0\n * @param {Number} index\n * @param {*} value\n * @returns {Function}\n */\nexport default _makePartial3(_setIndex);\n","import {_makeTypeErrorFor} from \"@privates/type\";\nimport {_setIn} from \"@privates/object\";\nimport isNil from \"@type/isNil\";\n\n/**\n * Sets the specified key to the given value in a copy of the provided object.<br/>\n * All the remaining enumerable keys of the source object will be simply copied in the\n * result object without breaking references.<br/>\n * If the specified key is not part of the source object, it will be added to the\n * result.<br/>\n * The main purpose of the function is to work on simple plain objects used as\n * data structures, such as JSON objects, and makes no effort to play nice with\n * objects created from an OOP perspective (it's not worth it).<br/>\n * For example the prototype of the result will be <code>Object</code>'s regardless\n * of the <code>source</code>'s one.\n * @example\n * var user = {name: \"John\", surname: \"Doe\", age: 30};\n *\n * _.setIn(user, \"name\", \"Jane\") // => {name: \"Jane\", surname: \"Doe\", age: 30}\n * _.setIn(user, \"gender\", \"male\") // => {name: \"John\", surname: \"Doe\", age: 30, gender: \"male\"}\n *\n * // `user` still is {name: \"John\", surname: \"Doe\", age: 30}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.setKey|setKey}\n * @see {@link module:lamb.setPath|setPath}, {@link module:lamb.setPathIn|setPathIn}\n * @since 0.18.0\n * @param {Object} source\n * @param {String} key\n * @param {*} value\n * @returns {Object}\n */\nexport default function setIn (source, key, value) {\n    if (isNil(source)) {\n        throw _makeTypeErrorFor(source, \"object\");\n    }\n\n    return _setIn(source, key, value);\n}\n","import _argsToArrayFrom from \"@privates/args/_argsToArrayFrom\";\n\n/**\n * Generates an array with the values passed as arguments.<br/>\n * Behaves like ES6's [Array.of]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of}.\n * @example\n * _.list(1, 2, 3) // => [1, 2, 3]\n *\n * @memberof module:lamb\n * @category Array\n * @function list\n * @since 0.1.0\n * @param {...*} value\n * @returns {Array}\n */\nexport default _argsToArrayFrom(0);\n","import {_toInteger} from \"@privates/number\";\nimport list from \"@array_basics/list\";\n\n/**\n * Builds a new function that passes only the specified amount of arguments to the original one.<br/>\n * As {@link module:lamb.slice|slice} is used to extract the arguments, you can also\n * pass a negative arity.\n * @example\n * Math.max(10, 11, 45, 99) // => 99\n * _.aritize(Math.max, 2)(10, 11, 45, 99) // => 11\n *\n * @example <caption>Using a negative arity:</caption>\n * _.aritize(Math.max, -1)(10, 11, 45, 99) // => 45\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.binary|binary}, {@link module:lamb.unary|unary} for common use cases shortcuts\n * @since 0.1.0\n * @param {Function} fn\n * @param {Number} arity\n * @returns {Function}\n */\nexport default function aritize (fn, arity) {\n    return function () {\n        var n = _toInteger(arity);\n        var args = list.apply(null, arguments).slice(0, n);\n\n        for (var i = args.length; i < n; i++) {\n            args[i] = void 0;\n        }\n\n        return fn.apply(this, args);\n    };\n}\n","import _setIndex from \"@privates/array/_setIndex\";\nimport aritize from \"@function/aritize\";\n\n/**\n * Creates a copy of an array-like object with the given index changed to\n * the desired value.<br/>\n * If the index is not an integer or if it's out of bounds, the function\n * will return a copy of the original array.<br/>\n * Negative indexes are allowed.\n * @example\n * var arr = [1, 2, 3];\n *\n * _.setIndex(arr, 1, 99) // => [1, 99, 3]\n * _.setIndex(arr, -1, 99) // => [1, 2, 99]\n * _.setIndex(arr, 10, 99) // => [1, 2, 3] (not a reference to `arr`)\n *\n * @memberof module:lamb\n * @category Array\n * @function setIndex\n * @see {@link module:lamb.setAt|setAt}\n * @since 0.23.0\n * @param {ArrayLike} arrayLike\n * @param {Number} index\n * @param {*} value\n * @returns {Array}\n */\nexport default aritize(_setIndex, 3);\n","import {_makePartial3} from \"@privates/partial\";\nimport setIn from \"./setIn\";\n\n/**\n * Builds a partial application of {@link module:lamb.setIn|setIn} with the provided\n * <code>key</code> and <code>value</code>.<br/>\n * The resulting function expects the object to act upon.<br/>\n * Please refer to {@link module:lamb.setIn|setIn}'s description for explanations about\n * how the copy of the source object is made.\n * @example\n * var user = {name: \"John\", surname: \"Doe\", age: 30};\n * var setAgeTo40 = _.setKey(\"age\", 40);\n *\n * setAgeTo40(user) // => {name: \"john\", surname: \"doe\", age: 40}\n *\n * // `user` still is {name: \"John\", surname: \"Doe\", age: 30}\n *\n * @memberof module:lamb\n * @category Object\n * @function setKey\n * @see {@link module:lamb.setIn|setIn}\n * @see {@link module:lamb.setPath|setPath}, {@link module:lamb.setPathIn|setPathIn}\n * @since 0.18.0\n * @param {String} key\n * @param {*} value\n * @returns {Function}\n */\nexport default _makePartial3(setIn);\n","import {_isPlaceholder} from \"@privates/placeholders\";\n\n/**\n * Like {@link module:lamb.partial|partial} will build a partially applied function and\n * it will accept placeholders.<br/>\n * The difference is that the bound arguments will be appended to the ones received by\n * the resulting function.\n * @example\n * <caption>Explaining the difference with <code>partial</code>:</caption>\n * var f1 = _.partial(_.list, [\"a\", \"b\", \"c\"]);\n * var f2 = _.partialRight(_.list, [\"a\", \"b\", \"c\"]);\n *\n * f1(\"d\", \"e\") // => [\"a\", \"b\", \"c\", \"d\", \"e\"]\n * f2(\"d\", \"e\") // => [\"d\", \"e\", \"a\", \"b\", \"c\"]\n *\n * @example\n * <caption>Explaining placeholder substitutions:</caption>\n * var f1 = _.partial(_.list, [\"a\", _, _, \"d\"]);\n * var f2 = _.partialRight(_.list, [\"a\", _, _, \"d\"]);\n *\n * f1(\"b\", \"c\", \"e\") // => [\"a\", \"b\", \"c\", \"d\", \"e\"]\n * f2(\"b\", \"c\", \"e\") // => [\"b\", \"a\", \"c\", \"e\", \"d\"]\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.partial|partial}\n * @see {@link module:lamb.asPartial|asPartial}\n * @see {@link module:lamb.curry|curry}, {@link module:lamb.curryRight|curryRight}\n * @see {@link module:lamb.curryable|curryable}, {@link module:lamb.curryableRight|curryableRight}\n * @see {@link module:lamb.@@lamb/placeholder|@@lamb/placeholder}\n * @param {Function} fn\n * @param {Array} args\n * @since 0.52.0\n * @returns {Function}\n */\nexport default function partialRight (fn, args) {\n    return function () {\n        if (!Array.isArray(args)) {\n            return fn.apply(this, arguments);\n        }\n\n        var lastIdx = arguments.length - 1;\n        var argsLen = args.length;\n        var boundArgs = Array(argsLen);\n        var newArgs = [];\n\n        for (var i = argsLen - 1, boundArg; i > -1; i--) {\n            boundArg = args[i];\n            boundArgs[i] = _isPlaceholder(boundArg) ? arguments[lastIdx--] : boundArg;\n        }\n\n        for (i = 0; i <= lastIdx; i++) {\n            newArgs[i] = arguments[i];\n        }\n\n        for (var j = 0; j < argsLen; j++) {\n            newArgs[i++] = boundArgs[j];\n        }\n\n        return fn.apply(this, newArgs);\n    };\n}\n","import {_setPathIn} from \"@privates/object\";\nimport {_toPathParts} from \"@privates/string\";\nimport {_makeTypeErrorFor} from \"@privates/type\";\nimport isNil from \"@type/isNil\";\n\n/**\n * Allows to change a nested value in a copy of the provided object.<br/>\n * The function will delegate the \"set action\" to {@link module:lamb.setIn|setIn} or\n * {@link module:lamb.setAt|setAt} depending on the value encountered in the path,\n * so please refer to the documentation of those functions for specifics about the\n * implementation.<br/>\n * Note anyway that the distinction will be between <code>Array</code>s, delegated\n * to {@link module:lamb.setAt|setAt}, and everything else (including array-like objects),\n * which will be delegated to {@link module:lamb.setIn|setIn}.<br/>\n * As a result of that, array-like objects will be converted to objects having numbers as keys\n * and paths targeting non-object values will be converted to empty objects.<br/>\n * You can anyway target array elements using integers in the path, even negative ones, but\n * the priority will be given to existing, and enumerable, object keys.<br/>\n * Non-enumerable properties encountered in the path will be considered as non-existent properties.<br/>\n * Like {@link module:lamb.getPathIn|getPathIn} or {@link module:lamb.getPath|getPath} you can\n * use custom path separators.\n * @example\n * var user = {id: 1, status: {active : false, scores: [2, 4, 6]}};\n *\n * _.setPathIn(user, \"status.active\", true) // => {id: 1, status: {active : true, scores: [2, 4, 6]}}\n *\n * @example <caption>Targeting arrays:</caption>\n * _.setPathIn(user, \"status.scores.0\", 8) // => {id: 1, status: {active : false, scores: [8, 4, 6]}}\n *\n * // you can use negative indexes as well\n * _.setPathIn(user, \"status.scores.-1\", 8) // => {id: 1, status: {active : false, scores: [2, 4, 8]}}\n *\n * @example <caption>Arrays can also be part of the path and not necessarily its target:</caption>\n * var user = {id: 1, scores: [\n *     {value: 2, year: \"2000\"},\n *     {value: 4, year: \"2001\"},\n *     {value: 6, year: \"2002\"}\n * ]};\n *\n * var newUser = _.setPathIn(user, \"scores.0.value\", 8);\n * // \"newUser\" holds:\n * // {id: 1, scores: [\n * //     {value: 8, year: \"2000\"},\n * //     {value: 4, year: \"2001\"},\n * //     {value: 6, year: \"2002\"}\n * // ]}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.setPath|setPath}\n * @see {@link module:lamb.setIn|setIn}, {@link module:lamb.setKey|setKey}\n * @since 0.20.0\n * @param {Object|Array} source\n * @param {String} path\n * @param {*} value\n * @param {String} [separator=\".\"]\n * @returns {Object|Array}\n */\nexport default function setPathIn (source, path, value, separator) {\n    if (isNil(source)) {\n        throw _makeTypeErrorFor(source, \"object\");\n    }\n\n    return _setPathIn(source, _toPathParts(path, separator), value);\n}\n","import partialRight from \"@core/partialRight\";\nimport setPathIn from \"./setPathIn\";\n\n/**\n * Builds a partial application of {@link module:lamb.setPathIn|setPathIn} expecting the\n * object to act upon.<br/>\n * See {@link module:lamb.setPathIn|setPathIn} for more details and examples.\n * @example\n * var user = {id: 1, status: {active: false}};\n * var activate = _.setPath(\"status.active\", true);\n *\n * activate(user) // => {id: 1, status: {active: true}}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.setPathIn|setPathIn}\n * @see {@link module:lamb.setIn|setIn}, {@link module:lamb.setKey|setKey}\n * @since 0.20.0\n * @param {String} path\n * @param {*} value\n * @param {String} [separator=\".\"]\n * @returns {Function}\n */\nexport default function setPath (path, value, separator) {\n    return partialRight(setPathIn, [path, value, separator]);\n}\n","import _setIndex from \"@privates/array/_setIndex\";\n\n/**\n * Builds a function that creates a copy of an array-like object with the given index\n * changed by applying the provided function to its value.<br/>\n * If the index is not an integer or if it's out of bounds, the function will return\n * a copy of the original array.<br/>\n * Negative indexes are allowed.\n * @example\n * var arr = [\"a\", \"b\", \"c\"];\n * var toUpperCase = _.invoker(\"toUpperCase\");\n *\n * _.updateAt(1, toUpperCase)(arr) // => [\"a\", \"B\", \"c\"]\n * _.updateAt(-1, toUpperCase)(arr) // => [\"a\", \"b\", \"C\"]\n * _.updateAt(10, toUpperCase)(arr) // => [\"a\", \"b\", \"c\"] (not a reference to `arr`)\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.updateIndex|updateIndex}\n * @since 0.22.0\n * @param {Number} index\n * @param {Function} updater\n * @returns {Function}\n */\nexport default function updateAt (index, updater) {\n    return function (arrayLike) {\n        return _setIndex(arrayLike, index, null, updater);\n    };\n}\n","import {_safeEnumerables, _unsafeKeyListFrom} from \"@privates/object\";\n\n/**\n * Creates an array with all the enumerable properties of the given object.\n * @example <caption>Showing the difference with {@link module:lamb.keys|keys}:</caption>\n * var baseFoo = Object.create({a: 1}, {b: {value: 2}});\n * var foo = Object.create(baseFoo, {\n *     c: {value: 3},\n *     d: {value: 4, enumerable: true}\n * });\n *\n * _.keys(foo) // => [\"d\"]\n * _.enumerables(foo) // => [\"d\", \"a\"]\n *\n * @memberof module:lamb\n * @category Object\n * @function enumerables\n * @see {@link module:lamb.keys|keys}\n * @since 0.12.0\n * @param {Object} obj\n * @returns {String[]}\n */\nexport default _unsafeKeyListFrom(_safeEnumerables);\n","import enumerables from \"@object/enumerables\";\nimport {_isEnumerable, _merge, _setIn} from \"@privates/object\";\n\n/**\n * Creates a copy of the given object having the desired key value updated by applying\n * the provided function to it.<br/>\n * This function is meant for updating existing enumerable properties, and for those it\n * will delegate the \"set action\" to {@link module:lamb.setIn|setIn}; a copy of the\n * <code>source</code> is returned otherwise.\n * @example\n * var user = {name: \"John\", visits: 2};\n * var toUpperCase = _.invoker(\"toUpperCase\");\n *\n * _.updateIn(user, \"name\", toUpperCase) // => {name: \"JOHN\", visits: 2}\n * _.updateIn(user, \"surname\", toUpperCase) // => {name: \"John\", visits: 2}\n *\n * @example <caption>Non-enumerable properties will be treated as non-existent:</caption>\n * var user = Object.create({name: \"John\"}, {visits: {value: 2}});\n *\n * _.updateIn(user, \"visits\", _.add(1)) // => {name: \"John\", visits: 2}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.updateKey|updateKey}\n * @see {@link module:lamb.updatePath|updatePath}, {@link module:lamb.updatePathIn|updatePathIn}\n * @since 0.22.0\n * @param {Object} source\n * @param {String} key\n * @param {Function} updater\n * @returns {Object}\n */\nexport default function updateIn (source, key, updater) {\n    return _isEnumerable(source, key) ?\n        _setIn(source, key, updater(source[key])) :\n        _merge(enumerables, source);\n}\n","import partial from \"@core/partial\";\nimport _setIndex from \"@privates/array/_setIndex\";\nimport {_} from \"@privates/placeholders\";\n\n/**\n * Creates a copy of an array-like object with the given index changed by applying the\n * provided function to its value.<br/>\n * If the index is not an integer or if it's out of bounds, the function will return\n * a copy of the original array.<br/>\n * Negative indexes are allowed.\n * @example\n * var arr = [\"a\", \"b\", \"c\"];\n * var toUpperCase = _.invoker(\"toUpperCase\");\n *\n * _.updateIndex(arr, 1, toUpperCase) // => [\"a\", \"B\", \"c\"]\n * _.updateIndex(arr, -1, toUpperCase) // => [\"a\", \"b\", \"C\"]\n * _.updateIndex(arr, 10, toUpperCase) // => [\"a\", \"b\", \"c\"] (not a reference to `arr`)\n *\n * @memberof module:lamb\n * @category Array\n * @function updateIndex\n * @see {@link module:lamb.updateAt|updateAt}\n * @since 0.23.0\n * @param {ArrayLike} arrayLike\n * @param {Number} index\n * @param {Function} updater\n * @returns {Array}\n */\nexport default partial(_setIndex, [_, _, null, _]);\n","import {_makePartial3} from \"@privates/partial\";\nimport updateIn from \"./updateIn\";\n\n/**\n * Builds a partial application of {@link module:lamb.updateIn|updateIn} with the provided\n * <code>key</code> and <code>updater</code>, expecting the object to act upon.<br/>\n * This function is meant for updating existing enumerable properties, and for those it\n * will delegate the \"set action\" to {@link module:lamb.setIn|setIn}; a copy of the\n * <code>source</code> is returned otherwise.\n * @example\n * var user = {name: \"John\", visits: 2};\n * var incrementVisits = _.updateKey(\"visits\", _.add(1));\n *\n * incrementVisits(user) // => {name: \"John\", visits: 3}\n *\n * @memberof module:lamb\n * @category Object\n * @function updateKey\n * @see {@link module:lamb.updateIn|updateIn}\n * @see {@link module:lamb.updatePath|updatePath}, {@link module:lamb.updatePathIn|updatePathIn}\n * @since 0.22.0\n * @param {String} key\n * @param {Function} updater\n * @returns {Function}\n */\nexport default _makePartial3(updateIn);\n","import {_toPathParts} from \"@privates/string\";\nimport {_getPathInfo, _merge, _setPathIn} from \"@privates/object\";\nimport enumerables from \"@object/enumerables\";\nimport slice from \"@array_basics/slice\";\n\n/**\n * Allows to change a nested value in a copy of the given object by applying the provided\n * function to it.<br/>\n * This function is meant for updating existing enumerable properties, and for those it\n * will delegate the \"set action\" to {@link module:lamb.setPathIn|setPathIn}; a copy of the\n * <code>source</code> is returned otherwise.<br/>\n * Like the other \"path\" functions, negative indexes can be used to access array elements, but\n * the priority will be given to existing, and enumerable, object keys.\n * @example\n * var user = {id: 1, status: {scores: [2, 4, 6], visits: 0}};\n * var inc = _.add(1);\n *\n * _.updatePathIn(user, \"status.visits\", inc) // => {id: 1, status: {scores: [2, 4, 6]}, visits: 1}\n *\n * @example <caption>Targeting arrays:</caption>\n * _.updatePathIn(user, \"status.scores.0\", inc) // => {id: 1, status: {scores: [3, 4, 6], visits: 0}}\n *\n * // you can use negative indexes as well\n * _.updatePathIn(user, \"status.scores.-1\", inc) // => {id: 1, status: {scores: [2, 4, 7], visits: 0}}\n *\n * @example <caption>Arrays can also be part of the path and not necessarily its target:</caption>\n * var user = {id: 1, scores: [\n *     {value: 2, year: \"2000\"},\n *     {value: 4, year: \"2001\"},\n *     {value: 6, year: \"2002\"}\n * ]};\n *\n * var newUser = _.updatePathIn(user, \"scores.0.value\", increment);\n * // \"newUser\" holds:\n * // {id: 1, scores: [\n * //     {value: 3, year: \"2000\"},\n * //     {value: 4, year: \"2001\"},\n * //     {value: 6, year: \"2002\"}\n * // ]}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.updatePath|updatePath}\n * @see {@link module:lamb.updateIn|updateIn}, {@link module:lamb.updateKey|updateKey}\n * @since 0.24.0\n * @param {Object|Array} source\n * @param {String} path\n * @param {Function} updater\n * @param {String} [separator=\".\"]\n * @returns {Object|Array}\n */\nexport default function updatePathIn (source, path, updater, separator) {\n    var parts = _toPathParts(path, separator);\n    var pathInfo = _getPathInfo(source, parts, false);\n\n    if (pathInfo.isValid) {\n        return _setPathIn(source, parts, updater(pathInfo.target));\n    } else {\n        return Array.isArray(source) ? slice(source, 0, source.length) : _merge(enumerables, source);\n    }\n}\n","import partialRight from \"@core/partialRight\";\nimport updatePathIn from \"./updatePathIn\";\n\n/**\n * Builds a partial application of {@link module:lamb.updatePathIn|updatePathIn}\n * expecting the object to act upon.<br/>\n * This function is meant for updating existing enumerable properties, and for those it\n * will delegate the \"set action\" to {@link module:lamb.setPathIn|setPathIn}; a copy of the\n * <code>source</code> is returned otherwise.<br/>\n * Like the other \"path\" functions, negative indexes can be used to access array elements, but\n * the priority will be given to existing, and enumerable, object keys.\n * @example\n * var user = {id: 1, status: {scores: [2, 4, 6], visits: 0}};\n * var incrementScores = _.updatePath(\"status.scores\", _.mapWith(_.add(1)))\n *\n * incrementScores(user) // => {id: 1, status: {scores: [3, 5, 7], visits: 0}}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.updatePathIn|updatePathIn}\n * @see {@link module:lamb.updateIn|updateIn}, {@link module:lamb.updateKey|updateKey}\n * @since 0.24.0\n * @param {String} path\n * @param {Function} updater\n * @param {String} [separator=\".\"]\n * @returns {Function}\n */\nexport default function updatePath (path, updater, separator) {\n    return partialRight(updatePathIn, [path, updater, separator]);\n}\n","import slice from \"@array_basics/slice\";\n\n/**\n * Appends the given value at the end of a copy of the provided array-like object.\n * @example\n * var arr = [1, 2, 3, 4];\n *\n * _.appendTo(arr, 5) // => [1, 2, 3, 4, 5]\n * _.appendTo(arr, [5]) // => [1, 2, 3, 4, [5]]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.append|append}\n * @see {@link module:lamb.insert|insert}, {@link module:lamb.insertAt|insertAt}\n * @since 0.44.0\n * @param {ArrayLike} arrayLike\n * @param {*} value\n * @returns {Array}\n */\nexport default function appendTo (arrayLike, value) {\n    return slice(arrayLike, 0, arrayLike.length).concat([value]);\n}\n","import {_curry2} from \"@privates/currying\";\nimport appendTo from \"./appendTo\";\n\n/**\n * A curried version of {@link module:lamb.appendTo|appendTo} that uses the value to append\n * to build a function expecting the array-like object to act upon.\n * @example\n * var arr = [1, 2, 3, 4];\n *\n * _.append(5)(arr) // => [1, 2, 3, 4, 5]\n * _.append([5])(arr) // => [1, 2, 3, 4, [5]]\n *\n * @memberof module:lamb\n * @category Array\n * @function append\n * @see {@link module:lamb.appendTo|appendTo}\n * @see {@link module:lamb.insert|insert}, {@link module:lamb.insertAt|insertAt}\n * @since 0.44.0\n * @param {*} value\n * @returns {Function}\n */\nexport default _curry2(appendTo, true);\n","/**\n * Builds an array comprised of all values of the array-like object passing the <code>predicate</code>\n * test.<br/>\n * Note that unlike the native array method this function doesn't skip unassigned or deleted indexes.\n * @example\n * var isLowerCase = function (s) { return s.toLowerCase() === s; };\n *\n * _.filter([\"Foo\", \"bar\", \"baZ\"], isLowerCase) // => [\"bar\"]\n *\n * // the function will work with any array-like object\n * _.filter(\"fooBAR\", isLowerCase) // => [\"f\", \"o\", \"o\"]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.filterWith|filterWith}\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} predicate\n * @since 0.1.0\n * @returns {Array}\n */\nexport default function filter (arrayLike, predicate) {\n    var len = arrayLike.length;\n    var result = [];\n\n    for (var i = 0; i < len; i++) {\n        predicate(arrayLike[i], i, arrayLike) && result.push(arrayLike[i]);\n    }\n\n    return result;\n}\n","/**\n * Verifies that the two supplied values are the same value using the \"SameValueZero\" comparison.<br/>\n * With this comparison <code>NaN</code> is equal to itself, but <code>0</code> and <code>-0</code> are\n * considered the same value.<br/>\n * See also {@link module:lamb.isSVZ|isSVZ} for a curried version building a predicate and\n * {@link module:lamb.areSame|areSame} and {@link module:lamb.is|is} to perform a \"SameValue\" comparison.\n * @example\n * var testObject = {};\n *\n * _.areSVZ({}, testObject) // => false\n * _.areSVZ(testObject, testObject) // => true\n * _.areSVZ(\"foo\", \"foo\") // => true\n * _.areSVZ(0, -0) // => true\n * _.areSVZ(0 / 0, NaN) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.isSVZ|isSVZ}\n * @see {@link module:lamb.areSame|areSame}, {@link module:lamb.is|is}\n * @see [SameValue comparison]{@link https://www.ecma-international.org/ecma-262/7.0/#sec-samevalue}\n * @see [SameValueZero comparison]{@link https://www.ecma-international.org/ecma-262/7.0/#sec-samevaluezero}\n * @since 0.50.0\n * @param {*} a\n * @param {*} b\n * @returns {Boolean}\n */\nexport default function areSVZ (a, b) {\n    return a !== a ? b !== b : a === b; // eslint-disable-line no-self-compare\n}\n","import areSVZ from \"@logic/areSVZ\";\n\n/**\n * Checks if an array-like object contains the given value.<br/>\n * Please note that the equality test is made with {@link module:lamb.areSVZ|areSVZ}; so you can\n * check for <code>NaN</code>, but <code>0</code> and <code>-0</code> are the same value.<br/>\n * See also {@link module:lamb.contains|contains} for a curried version building a predicate.\n * @example\n * var numbers = [0, 1, 2, 3, NaN];\n *\n * _.isIn(numbers, 1) // => true\n * _.isIn(numbers, 0) // => true\n * _.isIn(numbers, -0) // => true\n * _.isIn(numbers, NaN) // => true\n * _.isIn(numbers, 5) // => false\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.contains|contains}\n * @since 0.13.0\n * @param {ArrayLike} arrayLike\n * @param {*} value\n * @returns {Boolean}\n */\nexport default function isIn (arrayLike, value) {\n    var result = false;\n\n    for (var i = 0, len = arrayLike.length; i < len; i++) {\n        if (areSVZ(value, arrayLike[i])) {\n            result = true;\n            break;\n        }\n    }\n\n    return result;\n}\n","/**\n * Returns a predicate that negates the given one.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var isOdd = _.not(isEven);\n *\n * isOdd(5) // => true\n * isOdd(4) // => false\n *\n * @memberof module:lamb\n * @category Logic\n * @since 0.1.0\n * @param {Function} predicate\n * @returns {Function}\n */\nexport default function not (predicate) {\n    return function () {\n        return !predicate.apply(this, arguments);\n    };\n}\n","/**\n * Using the provided iteratee, builds a function that will return an array comprised of the\n * unique elements of an array-like object. The values being compared are the ones returned by\n * the iteratee.<br/>\n * The equality test is made with the [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}.<br/>\n * When two values are considered equal, the first occurence will be the one included\n * in the result array.<br/>\n * See also {@link module:lamb.uniques|uniques} if you don't need to transform your values before the\n * comparison.\n * @example\n * var data  = [\n *     {id: \"1\", name: \"John\"},\n *     {id: \"4\", name: \"Jane\"},\n *     {id: \"5\", name: \"Joe\"},\n *     {id: \"1\", name: \"Mario\"},\n *     {id: \"5\", name: \"Paolo\"},\n * ];\n * var uniquesById = _.uniquesBy(_.getKey(\"id\"));\n *\n * uniquesById(data) // => [{id: \"1\", name: \"John\"}, {id: \"4\", name: \"Jane\"}, {id: \"5\", name: \"Joe\"}]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.uniques|uniques}\n * @since 0.51.0\n * @param {ListIteratorCallback} iteratee\n * @returns {Function}\n */\nexport default function uniquesBy (iteratee) {\n    return function (arrayLike) {\n        var result = [];\n        var len = arrayLike.length;\n\n        for (var i = 0, seen = [], hasNaN = false, value; i < len; i++) {\n            value = iteratee(arrayLike[i], i, arrayLike);\n\n            if (value === value) { // eslint-disable-line no-self-compare\n                if (seen.indexOf(value) === -1) {\n                    seen[seen.length] = value;\n                    result[result.length] = arrayLike[i];\n                }\n            } else if (!hasNaN) {\n                hasNaN = true;\n                result[result.length] = arrayLike[i];\n            }\n        }\n\n        return result;\n    };\n}\n","import identity from \"@core/identity\";\nimport uniquesBy from \"./uniquesBy\";\n\n/**\n * Returns an array comprised of the unique elements of the given array-like object.<br/>\n * Note that this function uses the [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}\n * to test the equality of values.<br/>\n * When two values are considered equal, the first occurence will be the one included\n * in the result array.<br/>\n * See also {@link module:lamb.uniquesBy|uniquesBy} if you need to transform your values before\n * the comparison or if you have to extract them from complex ones.\n * @example\n * _.uniques([-0, 1, 2, 0, 2, 3, 4, 3, 5, 1]) // => [-0, 1, 2, 3, 4, 5]\n *\n * @memberof module:lamb\n * @category Array\n * @function uniques\n * @see {@link module:lamb.uniquesBy|uniquesBy}\n * @since 0.1.0\n * @param {ArrayLike} arrayLike\n * @returns {Array}\n */\nexport default uniquesBy(identity);\n","import filter from \"@array_basics/filter\";\nimport isIn from \"@array_basics/isIn\";\nimport partial from \"@core/partial\";\nimport not from \"@logic/not\";\nimport uniques from \"./uniques\";\n\n/**\n * Returns an array of unique items present only in the first of the two given\n * array-like objects. To determine uniqueness the function uses the\n * [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}.\n * @example\n * var a1 = [1, 2, 1, 3, 4];\n * var a2 = [2, 4, 5, 6];\n * var a3 = [3, 4, 5, 2, 1];\n *\n * _.difference(a1, a2) // => [1, 3]\n * _.difference(a2, a3) // => [6]\n * _.difference(a1, a3) // => []\n *\n * @memberof module:lamb\n * @category Array\n * @since 0.6.0\n * @param {ArrayLike} arrayLike\n * @param {ArrayLike} other\n * @returns {Array}\n */\nexport default function difference (arrayLike, other) {\n    var isNotInOther = partial(not(isIn), [other]);\n\n    return uniques(filter(arrayLike, isNotInOther));\n}\n","import slice from \"@array_basics/slice\";\n\n/**\n * Builds an array without the first <code>n</code> elements of the given array or array-like object.\n * Note that, being this only a shortcut for a specific use case of {@link module:lamb.slice|slice},\n * <code>n</code> can be a negative number.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.dropFrom(arr, 2) // => [3, 4, 5]\n * _.dropFrom(arr, -1) // => [5]\n * _.dropFrom(arr, -10) // => [1, 2, 3, 4, 5]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.drop|drop}\n * @see {@link module:lamb.takeFrom|takeFrom}, {@link module:lamb.take|take}\n * @see {@link module:lamb.takeWhile|takeWhile}, {@link module:lamb.dropWhile|dropWhile}\n * @since 0.51.0\n * @param {ArrayLike} arrayLike\n * @param {Number} n\n * @returns {Array}\n */\nexport default function dropFrom (arrayLike, n) {\n    return slice(arrayLike, n, arrayLike.length);\n}\n","import {_curry2} from \"@privates/currying\";\nimport dropFrom from \"./dropFrom\";\n\n/**\n * A curried version of {@link module:lamb.dropFrom|dropFrom} that expects the number of elements\n * to drop to build a function waiting for the list to take the elements from.<br/>\n * See the note and examples for {@link module:lamb.dropFrom|dropFrom} about passing a\n * negative <code>n</code>.\n * @example\n * var drop2 = _.drop(2);\n *\n * drop2([1, 2, 3, 4, 5]) // => [3, 4, 5]\n *\n * @memberof module:lamb\n * @category Array\n * @function drop\n * @since 0.5.0\n * @see {@link module:lamb.dropFrom|dropFrom}\n * @see {@link module:lamb.takeFrom|takeFrom}, {@link module:lamb.take|take}\n * @see {@link module:lamb.takeWhile|takeWhile}, {@link module:lamb.dropWhile|dropWhile}\n * @param {Number} n\n * @returns {Function}\n */\nexport default _curry2(dropFrom, true);\n","/**\n * Gets the number of consecutive elements satisfying a predicate in an array-like object.\n * @private\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} predicate\n * @returns {Number}\n */\nexport default function _getNumConsecutiveHits (arrayLike, predicate) {\n    var idx = 0;\n    var len = arrayLike.length;\n\n    while (idx < len && predicate(arrayLike[idx], idx, arrayLike)) {\n        idx++;\n    }\n\n    return idx;\n}\n","import _getNumConsecutiveHits from \"@privates/array/_getNumConsecutiveHits\";\nimport slice from \"@array_basics/slice\";\n\n/**\n * Builds a function that drops the first <code>n</code> elements satisfying a predicate\n * from an array or array-like object.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var dropWhileIsEven = _.dropWhile(isEven);\n *\n * dropWhileIsEven([2, 4, 6, 8]) // => []\n * dropWhileIsEven([2, 4, 7, 8]) // => [7, 8]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.takeWhile|takeWhile}\n * @see {@link module:lamb.dropFrom|dropFrom}, {@link module:lamb.drop|drop}\n * @see {@link module:lamb.takeFrom|takeFrom}, {@link module:lamb.take|take}\n * @since 0.5.0\n * @param {ListIteratorCallback} predicate\n * @returns {Function}\n */\nexport default function dropWhile (predicate) {\n    return function (arrayLike) {\n        return slice(arrayLike, _getNumConsecutiveHits(arrayLike, predicate), arrayLike.length);\n    };\n}\n","import reduce from \"@array_basics/reduce\";\n\n/**\n * Similar to {@link module:lamb.map|map}, but if the mapping function returns an array this will\n * be concatenated, rather than pushed, to the final result.\n * @example <caption>Showing the difference with <code>map</code>:</caption>\n * var words = [\"foo\", \"bar\"];\n * var toCharArray = function (s) { return s.split(\"\"); };\n *\n * _.map(words, toCharArray) // => [[\"f\", \"o\", \"o\"], [\"b\", \"a\", \"r\"]]\n * _.flatMap(words, toCharArray) // => [\"f\", \"o\", \"o\", \"b\", \"a\", \"r\"]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.flatMapWith|flatMapWith}\n * @see {@link module:lamb.map|map}, {@link module:lamb.mapWith|mapWith}\n * @since 0.1.0\n * @param {Array} array\n * @param {ListIteratorCallback} iteratee\n * @returns {Array}\n */\nexport default function flatMap (array, iteratee) {\n    return reduce(array, function (result, el, idx, arr) {\n        var v = iteratee(el, idx, arr);\n\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        for (var i = 0, len = v.length, rLen = result.length; i < len; i++) {\n            result[rLen + i] = v[i];\n        }\n\n        return result;\n    }, []);\n}\n","import {_curry2} from \"@privates/currying\";\nimport flatMap from \"./flatMap\";\n\n/**\n * A curried version of {@link module:lamb.flatMap|flatMap} that uses provided iteratee\n * to build a function expecting the array to act upon.\n * @example\n * var toCharArray = function (s) { return s.split(\"\"); };\n * var wordsToCharArray = _.flatMapWith(toCharArray);\n *\n * wordsToCharArray([\"foo\", \"bar\"]) // => [\"f\", \"o\", \"o\", \"b\", \"a\", \"r\"]\n *\n * @memberof module:lamb\n * @category Array\n * @function flatMapWith\n * @see {@link module:lamb.flatMap|flatMap}\n * @see {@link module:lamb.map|map}, {@link module:lamb.mapWith|mapWith}\n * @since 0.11.0\n * @param {ListIteratorCallback} iteratee\n * @returns {Function}\n */\nexport default _curry2(flatMap, true);\n","/**\n * Flattens an array.\n * @private\n * @param {Array} array - The source array\n * @param {Boolean} isDeep - Whether to perform a deep flattening or not\n * @param {Array} output - An array to collect the result\n * @param {Number} idx - The next index to be filled in the output\n * @returns {Array} The output array filled with the results\n */\nexport default function _flatten (array, isDeep, output, idx) {\n    for (var i = 0, len = array.length, value, j, vLen; i < len; i++) {\n        value = array[i];\n\n        if (!Array.isArray(value)) {\n            output[idx++] = value;\n        } else if (isDeep) {\n            _flatten(value, true, output, idx);\n            idx = output.length;\n        } else {\n            vLen = value.length;\n            output.length += vLen;\n\n            for (j = 0; j < vLen; j++) {\n                output[idx++] = value[j];\n            }\n        }\n    }\n\n    return output;\n}\n","import slice from \"@array_basics/slice\";\nimport {_curry2} from \"../currying\";\nimport _flatten from \"./_flatten\";\n\n/**\n * Helper to build the {@link module:lamb.flatten|flatten} and\n * {@link module:lamb.shallowFlatten|shallowFlatten} functions.\n * @private\n * @function _makeArrayFlattener\n * @param {Boolean} isDeep\n * @returns {Function}\n */\nexport default _curry2(function (isDeep, array) {\n    return Array.isArray(array) ? _flatten(array, isDeep, [], 0) : slice(array, 0, array.length);\n});\n","import _makeArrayFlattener from \"@privates/array/_makeArrayFlattener\";\n\n/**\n * Flattens an array.\n * @example <caption>Showing the difference with <code>shallowFlatten</code>:</caption>\n * var arr = [1, 2, [3, 4, [5, 6]], 7, 8];\n *\n * _.flatten(arr) // => [1, 2, 3, 4, 5, 6, 7, 8]\n * _.shallowFlatten(arr) // => [1, 2, 3, 4, [5, 6], 7, 8]\n *\n * @memberof module:lamb\n * @category Array\n * @function flatten\n * @see {@link module:lamb.shallowFlatten|shallowFlatten}\n * @since 0.1.0\n * @param {Array} array\n * @returns {Array}\n */\nexport default _makeArrayFlattener(true);\n","import partial from \"@core/partial\";\nimport slice from \"@array_basics/slice\";\nimport {_} from \"@privates/placeholders\";\n\n/**\n * Returns a copy of the given array-like object without the last element.\n * @example\n * _.init([1, 2, 3, 4]) // => [1, 2, 3]\n * _.init([1]) // => []\n * _.init([]) // => []\n *\n * @memberof module:lamb\n * @category Array\n * @function init\n * @see {@link module:lamb.tail|tail}\n * @see {@link module:lamb.head|head}, {@link module:lamb.last|last}\n * @since 0.16.0\n * @param {ArrayLike} arrayLike\n * @returns {Array}\n */\nexport default partial(slice, [_, 0, -1]);\n","import slice from \"@array_basics/slice\";\n\n/**\n * Inserts the provided element in a copy of an array-like object at the\n * specified index.<br/>\n * If the index is greater than the length of the array-like, the element\n * will be appended at the end.<br/>\n * Negative indexes are allowed; when a negative index is out of bounds\n * the element will be inserted at the start of the resulting array.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.insert(arr, 3, 99) // => [1, 2, 3, 99, 4, 5]\n * _.insert(arr, -2, 99) // => [1, 2, 3, 99, 4, 5]\n * _.insert(arr, 10, 99) // => [1, 2, 3, 4, 5, 99]\n * _.insert(arr, -10, 99) // => [99, 1, 2, 3, 4, 5]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.insertAt|insertAt}\n * @see {@link module:lamb.sortedInsert|sortedInsert}\n * @see {@link module:lamb.append|append}, {@link module:lamb.appendTo|appendTo}\n * @since 0.1.0\n * @param {ArrayLike} arrayLike\n * @param {Number} index\n * @param {*} element\n * @returns {Array}\n */\nexport default function insert (arrayLike, index, element) {\n    var result = slice(arrayLike, 0, arrayLike.length);\n\n    result.splice(index, 0, element);\n\n    return result;\n}\n","import {_makePartial3} from \"@privates/partial\";\nimport insert from \"./insert\";\n\n/**\n * Builds a partial application of {@link module:lamb.insert|insert}\n * expecting the array-like object to act upon.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.insertAt(3, 99)(arr) // => [1, 2, 3, 99, 4, 5]\n * _.insertAt(-2, 99)(arr) // => [1, 2, 3, 99, 4, 5]\n * _.insertAt(10, 99)(arr) // => [1, 2, 3, 4, 5, 99]\n * _.insertAt(-10, 99)(arr) // => [99, 1, 2, 3, 4, 5]\n *\n * @memberof module:lamb\n * @category Array\n * @function insertAt\n * @see {@link module:lamb.insert|insert}\n * @see {@link module:lamb.sortedInsert|sortedInsert}\n * @see {@link module:lamb.append|append}, {@link module:lamb.appendTo|appendTo}\n * @since 0.27.0\n * @param {Number} index\n * @param {*} element\n * @returns {Function}\n */\nexport default _makePartial3(insert);\n","import {_curry2} from \"@privates/currying\";\nimport isIn from \"./isIn\";\n\n/**\n * Builds a predicate to check if an array-like object contains the given value.<br/>\n * Please note that the equality test is made with {@link module:lamb.areSVZ|areSVZ}; so you can\n * check for <code>NaN</code>, but <code>0</code> and <code>-0</code> are the same value.<br/>\n * See also {@link module:lamb.isIn|isIn} for an uncurried version.\n * @example\n * var containsNaN = _.contains(NaN);\n *\n * containsNaN([0, 1, 2, 3, NaN]) // => true\n *\n * @memberof module:lamb\n * @category Array\n * @function contains\n * @see {@link module:lamb.isIn|isIn}\n * @since 0.13.0\n * @param {*} value\n * @returns {Function}\n */\nexport default _curry2(isIn, true);\n","/**\n * Helper to build the {@link module:lamb.everyIn|everyIn} or the\n * {@link module:lamb.someIn|someIn} function.\n * @private\n * @param {Boolean} defaultResult\n * @returns {Function}\n */\nexport default function _makeArrayChecker (defaultResult) {\n    return function (arrayLike, predicate) {\n        for (var i = 0, len = arrayLike.length; i < len; i++) {\n            if (defaultResult ^ !!predicate(arrayLike[i], i, arrayLike)) {\n                return !defaultResult;\n            }\n        }\n\n        return defaultResult;\n    };\n}\n","import _makeArrayChecker from \"@privates/array/_makeArrayChecker\";\n\n/**\n * Checks if all the elements in an array-like object satisfy the given predicate.<br/>\n * The function will stop calling the predicate as soon as it returns a <em>falsy</em> value.<br/>\n * Note that an empty array-like will always produce a <code>true</code> result regardless of the\n * predicate because of [vacuous truth]{@link https://en.wikipedia.org/wiki/Vacuous_truth}.<br/>\n * Also note that unlike the native\n * [Array.prototype.every]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every},\n * this function won't skip deleted or unassigned indexes.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"age\": 12, active: true},\n *     {\"name\": \"John\", \"age\": 40, active: true},\n *     {\"name\": \"Mario\", \"age\": 17, active: true},\n *     {\"name\": \"Paolo\", \"age\": 15, active: true}\n * ];\n * var isAdult = _.keySatisfies(_.isGTE(18), \"age\");\n * var isActive = _.hasKeyValue(\"active\", true);\n *\n * _.everyIn(persons, isAdult) // => false\n * _.everyIn(persons, isActive) // => true\n *\n * @example <caption>Showing the difference with <code>Array.prototype.every</code>:</caption>\n * var isDefined = _.not(_.isUndefined);\n * var arr = new Array(5);\n * arr[3] = 99;\n *\n * arr.every(isDefined) // => true\n * _.everyIn(arr, isDefined) // => false\n *\n * @memberof module:lamb\n * @category Array\n * @function everyIn\n * @see {@link module:lamb.every|every}\n * @see {@link module:lamb.some|some}, {@link module:lamb.someIn|someIn}\n * @since 0.39.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} predicate\n * @returns {Boolean}\n */\nexport default _makeArrayChecker(true);\n","import contains from \"@array_basics/contains\";\nimport everyIn from \"@array_basics/everyIn\";\nimport filter from \"@array_basics/filter\";\nimport _argsTail from \"@privates/args/_argsTail\";\nimport uniques from \"./uniques\";\n\n/**\n * Returns an array of every unique item that is included in all given arrays or array-like objects.<br/>\n * Note that this function uses the [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}.\n * @example\n * var a1 = [1, 2, 3, 4];\n * var a2 = [2, 5, 4, 2, 6];\n * var a3 = [5, 6, 7];\n *\n * _.intersection(a1, a2) // => [2, 4]\n * _.intersection(a2, a3) // => [5, 6]\n * _.intersection(a1, a3) // => []\n *\n * @memberof module:lamb\n * @category Array\n * @since 0.5.0\n * @param {...ArrayLike} arrayLike\n * @returns {Array}\n */\nexport default function intersection () {\n    if (arguments.length === 0) {\n        return [];\n    }\n\n    var rest = _argsTail.apply(null, arguments);\n\n    return filter(uniques(arguments[0]), function (item) {\n        return everyIn(rest, contains(item));\n    });\n}\n","/**\n * Splits an array-like object in two lists: the first with the elements satisfying the given predicate,\n * the others with the remaining elements.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n *\n * _.partition(numbers, isEven) // => [[2, 4, 6, 8, 10], [1, 3, 5, 7, 9]]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.partitionWith|partitionWith}\n * @since 0.11.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} predicate\n * @returns {Array<Array, Array>}\n */\nexport default function partition (arrayLike, predicate) {\n    var result = [[], []];\n    var len = arrayLike.length;\n\n    for (var i = 0, el; i < len; i++) {\n        el = arrayLike[i];\n        result[predicate(el, i, arrayLike) ? 0 : 1].push(el);\n    }\n\n    return result;\n}\n","import {_curry2} from \"@privates/currying\";\nimport partition from \"./partition\";\n\n/**\n * A curried version of {@link module:lamb.partition|partition} that uses the provided\n * predicate to build a function expecting the array-like object to act upon.\n * @example\n * var users = [\n *     {\"name\": \"Jane\", \"surname\": \"Doe\", \"active\": false},\n *     {\"name\": \"John\", \"surname\": \"Doe\", \"active\": true},\n *     {\"name\": \"Mario\", \"surname\": \"Rossi\", \"active\": true},\n *     {\"name\": \"Paolo\", \"surname\": \"Bianchi\", \"active\": false}\n * ];\n * var isActive = _.hasKeyValue(\"active\", true);\n * var splitByActiveStatus = _.partitionWith(isActive);\n *\n * splitByActiveStatus(users) // =>\n * // [[\n * //     {\"name\": \"John\", \"surname\": \"Doe\", \"active\": true},\n * //     {\"name\": \"Mario\", \"surname\": \"Rossi\", \"active\": true}\n * // ], [\n * //     {\"name\": \"Jane\", \"surname\": \"Doe\", \"active\": false},\n * //     {\"name\": \"Paolo\", \"surname\": \"Bianchi\", \"active\": false}\n * // ]]\n *\n * @memberof module:lamb\n * @category Array\n * @function partitionWith\n * @see {@link module:lamb.partition|partition}\n * @since 0.11.0\n * @param {ListIteratorCallback} predicate\n * @returns {Function}\n */\nexport default _curry2(partition, true);\n","import map from \"@array_basics/map\";\nimport getKey from \"@accessors/getKey\";\n\n/**\n * \"Plucks\" the values of the specified key from a list of objects.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"surname\": \"Doe\", \"age\": 12},\n *     {\"name\": \"John\", \"surname\": \"Doe\", \"age\": 40},\n *     {\"name\": \"Mario\", \"surname\": \"Rossi\", \"age\": 18},\n *     {\"name\": \"Paolo\", \"surname\": \"Bianchi\", \"age\": 15}\n * ];\n *\n * _.pluck(persons, \"age\") // => [12, 40, 18, 15]\n *\n * var lists = [\n *     [1, 2],\n *     [3, 4, 5],\n *     [6]\n * ];\n *\n * _.pluck(lists, \"length\") // => [2, 3, 1]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.pluckKey|pluckKey}\n * @since 0.1.0\n * @param {ArrayLike} arrayLike\n * @param {String} key\n * @returns {Array}\n */\nexport default function pluck (arrayLike, key) {\n    return map(arrayLike, getKey(key));\n}\n","import {_curry2} from \"@privates/currying\";\nimport map from \"./map\";\n\n/**\n * A curried version of {@link module:lamb.map|map} that uses the provided iteratee to\n * build a function expecting the array-like object to act upon.\n * @example\n * var square = function (n) { return n * n; };\n * var getSquares = _.mapWith(square);\n *\n * getSquares([1, 2, 3, 4, 5]) // => [1, 4, 9, 16, 25]\n *\n * @memberof module:lamb\n * @category Array\n * @function mapWith\n * @see {@link module:lamb.map|map}\n * @see {@link module:lamb.flatMap|flatMap}, {@link module:lamb.flatMapWith|flatMapWith}\n * @since 0.1.0\n * @param {ListIteratorCallback} iteratee\n * @returns {function}\n */\nexport default _curry2(map, true);\n","import getKey from \"@accessors/getKey\";\nimport mapWith from \"@array_basics/mapWith\";\nimport compose from \"@core/compose\";\n\n/**\n * A curried version of {@link module:lamb.pluck|pluck} expecting the key to retrieve to\n * build a function waiting for the array-like object to act upon.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"surname\": \"Doe\", \"age\": 12},\n *     {\"name\": \"John\", \"surname\": \"Doe\", \"age\": 40},\n *     {\"name\": \"Mario\", \"surname\": \"Rossi\", \"age\": 18},\n *     {\"name\": \"Paolo\", \"surname\": \"Bianchi\", \"age\": 15}\n * ];\n * var getAges = _.pluckKey(\"age\");\n *\n * getAges(persons) // => [12, 40, 18, 15]\n *\n * @memberof module:lamb\n * @category Array\n * @function pluckKey\n * @see {@link module:lamb.pluck|pluck}\n * @since 0.12.0\n * @param {String} key\n * @returns {Function}\n */\nexport default compose(mapWith, getKey);\n","import filter from \"@array_basics/filter\";\nimport isIn from \"@array_basics/isIn\";\nimport slice from \"@array_basics/slice\";\n\n/**\n * Creates an array copy of the given array-like object without the\n * specified values.<br/>\n * The equality test is made with the [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.pullFrom(arr, [2, 5]) // => [1, 3, 4]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.pull|pull}\n * @since 0.45.0\n * @param {ArrayLike} arrayLike\n * @param {ArrayLike} values\n * @returns {Array}\n */\nexport default function pullFrom (arrayLike, values) {\n    return values ? filter(arrayLike, function (element) {\n        return !isIn(values, element);\n    }) : slice(arrayLike, 0, arrayLike.length);\n}\n","import {_curry2} from \"@privates/currying\";\nimport pullFrom from \"./pullFrom\";\n\n/**\n * A curried version of {@link module:lamb.pullFrom|pullFrom} expecting\n * a list of values to build a function waiting for an array-like object.<br/>\n * The new function will create an array copy of the array-like without\n * the specified values.<br/>\n * The equality test is made with the [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}.\n * @example\n * var scores = [40, 20, 30, 10];\n * var newScores = [30, 10];\n * var pullNewScores = _.pull(newScores);\n *\n * pullNewScores(scores) // => [40, 20]\n *\n * @memberof module:lamb\n * @category Array\n * @function pull\n * @see {@link module:lamb.pullFrom|pullFrom}\n * @since 0.45.0\n * @param {ArrayLike} values\n * @returns {Function}\n */\nexport default _curry2(pullFrom, true);\n","import _makeArrayFlattener from \"@privates/array/_makeArrayFlattener\";\n\n/**\n * Flattens the \"first level\" of an array.\n * @example <caption>Showing the difference with <code>flatten</code>:</caption>\n * var arr = [1, 2, [3, 4, [5, 6]], 7, 8];\n *\n * _.flatten(arr) // => [1, 2, 3, 4, 5, 6, 7, 8]\n * _.shallowFlatten(arr) // => [1, 2, 3, 4, [5, 6], 7, 8]\n *\n * @memberof module:lamb\n * @category Array\n * @function shallowFlatten\n * @see {@link module:lamb.flatten|flatten}\n * @since 0.9.0\n * @param {Array} array\n * @returns {Array}\n */\nexport default _makeArrayFlattener(false);\n","import drop from \"./drop\";\n\n/**\n * Returns a copy of the given array-like object without the first element.\n * @example\n * _.tail([1, 2, 3, 4]) // => [2, 3, 4]\n * _.tail([1]) // => []\n * _.tail([]) // => []\n *\n * @memberof module:lamb\n * @category Array\n * @function tail\n * @see {@link module:lamb.init|init}\n * @see {@link module:lamb.head|head}, {@link module:lamb.last|last}\n * @since 0.16.0\n * @param {ArrayLike} arrayLike\n * @returns {Array}\n */\nexport default drop(1);\n","import slice from \"@array_basics/slice\";\n\n/**\n * Retrieves the first <code>n</code> elements from an array or array-like object.<br/>\n * Note that, being this a shortcut for a common use case of {@link module:lamb.slice|slice},\n * <code>n</code> can be a negative number.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.takeFrom(arr, 3) // => [1, 2, 3]\n * _.takeFrom(arr, -1) // => [1, 2, 3, 4]\n * _.takeFrom(arr, -10) // => []\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.take|take}\n * @see {@link module:lamb.dropFrom|dropFrom}, {@link module:lamb.drop|drop}\n * @see {@link module:lamb.takeWhile|takeWhile}, {@link module:lamb.dropWhile|dropWhile}\n * @since 0.51.0\n * @param {ArrayLike} arrayLike\n * @param {Number} n\n * @returns {Array}\n */\nexport default function takeFrom (arrayLike, n) {\n    return slice(arrayLike, 0, n);\n}\n","import {_curry2} from \"@privates/currying\";\nimport takeFrom from \"./takeFrom\";\n\n/**\n * A curried version of {@link module:lamb.takeFrom|takeFrom} that expects the number of elements\n * to retrieve to build a function waiting for the list to take the elements from.<br/>\n * See the note and examples for {@link module:lamb.takeFrom|takeFrom} about passing a\n * negative <code>n</code>.\n * @example\n * var take2 = _.take(2);\n *\n * take2([1, 2, 3, 4, 5]) // => [1, 2]\n *\n * @memberof module:lamb\n * @category Array\n * @function take\n * @see {@link module:lamb.takeFrom|takeFrom}\n * @see {@link module:lamb.dropFrom|dropFrom}, {@link module:lamb.drop|drop}\n * @see {@link module:lamb.takeWhile|takeWhile}, {@link module:lamb.dropWhile|dropWhile}\n * @since 0.5.0\n * @param {Number} n\n * @returns {Function}\n */\nexport default _curry2(takeFrom, true);\n","import slice from \"@array_basics/slice\";\nimport _getNumConsecutiveHits from \"@privates/array/_getNumConsecutiveHits\";\n\n/**\n * Builds a function that takes the first <code>n</code> elements satisfying a predicate from\n * an array or array-like object.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var takeWhileIsEven = _.takeWhile(isEven);\n *\n * takeWhileIsEven([1, 2, 4, 6, 8]) // => []\n * takeWhileIsEven([2, 4, 7, 8]) // => [2, 4]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.dropWhile|dropWhile}\n * @see {@link module:lamb.takeFrom|takeFrom}, {@link module:lamb.take|take}\n * @see {@link module:lamb.dropFrom|dropFrom}, {@link module:lamb.drop|drop}\n * @since 0.5.0\n * @param {ListIteratorCallback} predicate\n * @returns {Function}\n */\nexport default function takeWhile (predicate) {\n    return function (arrayLike) {\n        return slice(arrayLike, 0, _getNumConsecutiveHits(arrayLike, predicate));\n    };\n}\n","import _toArrayLength from \"@privates/array/_toArrayLength\";\nimport {MAX_ARRAY_LENGTH} from \"@src/utils\";\n\n/**\n * Transposes a matrix. Can also be used to reverse a {@link module:lamb.zip|zip} operation.<br/>\n * Just like {@link module:lamb.zip|zip}, the received array-like objects will be truncated to the\n * shortest length.\n * @example <caption>Transposing a matrix:</caption>\n * _.transpose([\n *     [1, 2, 3],\n *     [4, 5, 6],\n *     [7, 8, 9]\n * ]) // =>\n * // [\n * //     [1, 4, 7],\n * //     [2, 5, 8],\n * //     [3, 6, 9]\n * // ]\n *\n * @example <caption>Showing the relationship with <code>zip</code>:</caption>\n * var zipped = _.zip([\"a\", \"b\", \"c\"], [1, 2, 3]); // => [[\"a\", 1], [\"b\", 2], [\"c\", 3]]\n *\n * _.transpose(zipped) // => [[\"a\", \"b\", \"c\"], [1, 2, 3]]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.zip|zip}\n * @since 0.14.0\n * @param {ArrayLike<ArrayLike>} arrayLike\n * @returns {Array<Array>}\n */\nexport default function transpose (arrayLike) {\n    var minLen = MAX_ARRAY_LENGTH;\n    var len = _toArrayLength(arrayLike.length);\n\n    if (len === 0) {\n        return [];\n    }\n\n    for (var j = 0, elementLen; j < len; j++) {\n        elementLen = _toArrayLength(arrayLike[j].length);\n\n        if (elementLen < minLen) {\n            minLen = elementLen;\n        }\n    }\n\n    var result = Array(minLen);\n\n    for (var i = 0, el; i < minLen; i++) {\n        el = result[i] = Array(len);\n\n        for (j = 0; j < len; j++) {\n            el[j] = arrayLike[j][i];\n        }\n    }\n\n    return result;\n}\n","import list from \"@array_basics/list\";\nimport compose from \"@core/compose\";\nimport drop from \"./drop\";\nimport flatMapWith from \"./flatMapWith\";\nimport uniquesBy from \"./uniquesBy\";\n\n/**\n * Using the provided iteratee, builds a function that will return an array of the unique elements\n * in the provided array-like objects.<br/>\n * Uses the [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}\n * to test the equality of values.<br/>\n * When two values are considered equal, the first occurence will be the one included\n * in the result array.<br/>\n * See also {@link module:lamb.union|union} if you don't need to transform the values.\n * @example\n * var unionByFloor = _.unionBy(Math.floor);\n *\n * unionByFloor([2.8, 3.2, 1.5], [3.5, 1.2, 4]) // => [2.8, 3.2, 1.5, 4]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.union|union}\n * @since 0.51.0\n * @param {ListIteratorCallback} iteratee\n * @returns {Function}\n */\nexport default function unionBy (iteratee) {\n    return compose(uniquesBy(iteratee), flatMapWith(drop(0)), list);\n}\n","import identity from \"@core/identity\";\nimport unionBy from \"./unionBy\";\n\n/**\n * Returns a list of every unique element present in the given array-like objects.<br/>\n * Uses the [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}\n * to test the equality of values.<br/>\n * When two values are considered equal, the first occurence will be the one included\n * in the result array.<br/>\n * See also {@link module:lamb.unionBy|unionBy} if you need to transform the values before\n * the comparison or if you have to extract them from complex ones.\n * @example\n * _.union([1, 2, 3, 2], [3, 4], [1, 5]) // => [1, 2, 3, 4, 5]\n * _.union(\"abc\", \"bcd\", \"cde\") // => [\"a\", \"b\", \"c\", \"d\", \"e\"]\n *\n * @memberof module:lamb\n * @category Array\n * @function union\n * @see {@link module:lamb.unionBy|unionBy}\n * @since 0.5.0\n * @param {...ArrayLike} arrayLike\n * @returns {Array}\n */\nexport default unionBy(identity);\n","import list from \"@array_basics/list\";\nimport compose from \"@core/compose\";\nimport transpose from \"./transpose\";\n\n/**\n * Builds a list of arrays out of the given array-like objects by pairing items with the same index.<br/>\n * The received array-like objects will be truncated to the shortest length.\n * @example\n * _.zip(\n *     [\"a\", \"b\", \"c\"],\n *     [1, 2, 3],\n *     [true, false, true]\n * ) // => [[\"a\", 1, true], [\"b\", 2, false], [\"c\", 3, true]]\n *\n * _.zip([1, 2, 3, 4], [5, 6, 7]) // => [[1, 5], [2, 6], [3, 7]]\n *\n * @memberof module:lamb\n * @category Array\n * @function zip\n * @see {@link module:lamb.transpose|transpose} for the reverse operation\n * @see {@link module:lamb.zipWithIndex|zipWithIndex}\n * @since 0.14.0\n * @param {...ArrayLike} arrayLike\n * @returns {Array<Array>}\n */\nexport default compose(transpose, list);\n","import list from \"@array_basics/list\";\nimport mapWith from \"@array_basics/mapWith\";\nimport binary from \"@function/binary\";\n\n/**\n * \"{@link module:lamb.zip|Zips}\" an array-like object by pairing its values with their index.\n * @example\n * _.zipWithIndex([\"a\", \"b\", \"c\"]) // => [[\"a\", 0], [\"b\", 1], [\"c\", 2]]\n *\n * @memberof module:lamb\n * @category Array\n * @function zipWithIndex\n * @see {@link module:lamb.zip|zip}\n * @since 0.14.0\n * @param {ArrayLike} arrayLike\n * @returns {Array<Array<*, Number>>}\n */\nexport default mapWith(binary(list));\n","import {_curry2} from \"@privates/currying\";\nimport everyIn from \"./everyIn\";\n\n/**\n * A curried version of {@link module:lamb.everyIn|everyIn} that expects a predicate\n * to build a function waiting for the array-like to act upon.\n * @example\n * var data = [2, 3, 5, 6, 8];\n * var isEven = function (n) { return n % 2 === 0; };\n * var allEvens = _.every(isEven);\n * var allIntegers = _.every(_.isInteger);\n *\n * allEvens(data) // => false\n * allIntegers(data) // => true\n *\n * @memberof module:lamb\n * @category Array\n * @function every\n * @see {@link module:lamb.everyIn|everyIn}\n * @see {@link module:lamb.some|some}, {@link module:lamb.someIn|someIn}\n * @since 0.39.0\n * @param {ListIteratorCallback} predicate\n * @returns {Function}\n */\nexport default _curry2(everyIn, true);\n","import {_curry2} from \"@privates/currying\";\nimport filter from \"./filter\";\n\n/**\n * A curried version of {@link module:lamb.filter|filter} that uses the given predicate\n * to build a function expecting the array-like object to act upon.\n * @example\n * var isLowerCase = function (s) { return s.toLowerCase() === s; };\n * var getLowerCaseEntries = _.filterWith(isLowerCase);\n *\n * getLowerCaseEntries([\"Foo\", \"bar\", \"baZ\"]) // => [\"bar\"]\n *\n * // array-like objects can be used as well\n * getLowerCaseEntries(\"fooBAR\") // => [\"f\", \"o\", \"o\"]\n *\n * @memberof module:lamb\n * @category Array\n * @function filterWith\n * @see {@link module:lamb.filter|filter}\n * @since 0.9.0\n * @param {ListIteratorCallback} predicate\n * @returns {Function}\n */\nexport default _curry2(filter, true);\n","/**\n * Searches for an element satisfying the predicate in the given array-like object and returns its\n * index if the search is successful. Returns <code>-1</code> otherwise.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"surname\": \"Doe\", \"age\": 12},\n *     {\"name\": \"John\", \"surname\": \"Doe\", \"age\": 40},\n *     {\"name\": \"Mario\", \"surname\": \"Rossi\", \"age\": 18},\n *     {\"name\": \"Paolo\", \"surname\": \"Bianchi\", \"age\": 40}\n * ];\n *\n * _.findIndex(persons, _.hasKeyValue(\"age\", 40)) // => 1\n * _.findIndex(persons, _.hasKeyValue(\"age\", 41)) // => -1\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.findIndexWhere|findIndexWhere}\n * @see {@link module:lamb.find|find}, {@link module:lamb.findWhere|findWhere}\n * @since 0.7.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} predicate\n * @returns {Number}\n */\nexport default function findIndex (arrayLike, predicate) {\n    var result = -1;\n\n    for (var i = 0, len = arrayLike.length; i < len; i++) {\n        if (predicate(arrayLike[i], i, arrayLike)) {\n            result = i;\n            break;\n        }\n    }\n\n    return result;\n}\n","import findIndex from \"./findIndex\"\n\n/**\n * Searches for an element satisfying the predicate in the given array-like object and returns it if\n * the search is successful. Returns <code>undefined</code> otherwise.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"surname\": \"Doe\", \"age\": 12},\n *     {\"name\": \"John\", \"surname\": \"Doe\", \"age\": 40},\n *     {\"name\": \"Mario\", \"surname\": \"Rossi\", \"age\": 18},\n *     {\"name\": \"Paolo\", \"surname\": \"Bianchi\", \"age\": 40}\n * ];\n *\n * _.find(persons, _.hasKeyValue(\"age\", 40)) // => {\"name\": \"John\", \"surname\": \"Doe\", \"age\": 40}\n * _.find(persons, _.hasKeyValue(\"age\", 41)) // => undefined\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.findWhere|findWhere}\n * @see {@link module:lamb.findIndex|findIndex}, {@link module:lamb.findIndexWhere|findIndexWhere}\n * @since 0.7.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} predicate\n * @returns {*}\n */\nexport default function find (arrayLike, predicate) {\n    var idx = findIndex(arrayLike, predicate);\n\n    return idx === -1 ? void 0 : arrayLike[idx];\n}\n","import {_curry2} from \"@privates/currying\";\nimport findIndex from \"./findIndex\";\n\n/**\n * A curried version of {@link module:lamb.findIndex|findIndex} that uses the given predicate\n * to build a function expecting the array-like object to search.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var findEvenIdx = _.findIndexWhere(isEven);\n *\n * findEvenIdx([1, 3, 4, 5, 7]) // => 2\n * findEvenIdx([1, 3, 5, 7]) // => -1\n *\n * @memberof module:lamb\n * @category Array\n * @function findIndexWhere\n * @see {@link module:lamb.findIndex|findIndex}\n * @see {@link module:lamb.find|find}, {@link module:lamb.findWhere|findWhere}\n * @since 0.41.0\n * @param {ListIteratorCallback} predicate\n * @returns {Function}\n */\nexport default _curry2(findIndex, true);\n","import {_curry2} from \"@privates/currying\";\nimport find from \"./find\";\n\n/**\n * A curried version of {@link module:lamb.find|find} expecting the array-like object\n * to search.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var findEven = _.findWhere(isEven);\n *\n * findEven([1, 3, 4, 5, 7]) // => 4\n * findEven([1, 3, 5, 7]) // => undefined\n *\n * @memberof module:lamb\n * @category Array\n * @function findWhere\n * @see {@link module:lamb.find|find}\n * @see {@link module:lamb.findIndex|findIndex}, {@link module:lamb.findIndexWhere|findIndexWhere}\n * @since 0.41.0\n * @param {ListIteratorCallback} predicate\n * @returns {Function}\n */\nexport default _curry2(find, true);\n","import _makeReducer from \"@privates/array/_makeReducer\";\n\n/**\n * Same as {@link module:lamb.reduce|reduce}, but starts the fold operation from the last\n * element instead.<br/>\n * Note that unlike the native array method this function doesn't skip unassigned or deleted indexes.\n * @memberof module:lamb\n * @category Array\n * @function reduceRight\n * @see {@link module:lamb.reduce|reduce}\n * @see {@link module:lamb.reduceWith|reduceWith}, {@link module:lamb.reduceRightWith|reduceRightWith}\n * @since 0.1.0\n * @param {ArrayLike} arrayLike\n * @param {AccumulatorCallback} accumulator\n * @param {*} [initialValue]\n * @returns {*}\n */\nexport default _makeReducer(-1);\n","import {_makePartial3} from \"@privates/partial\";\nimport reduceRight from \"./reduceRight\";\n\n/**\n * A partial application of {@link module:lamb.reduce|reduceRight} that uses the\n * provided <code>accumulator</code> and the optional <code>initialValue</code> to\n * build a function expecting the array-like object to act upon.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.reduceRightWith(_.sum)(arr) // => 15\n * _.reduceRightWith(_.subtract)(arr) // => -5\n * _.reduceRightWith(_.subtract, 0)(arr) // => -15\n *\n * @memberof module:lamb\n * @category Array\n * @function reduceRightWith\n * @see {@link module:lamb.reduceWith|reduceWith}\n * @see {@link module:lamb.reduce|reduce}, {@link module:lamb.reduce|reduceRight}\n * @since 0.27.0\n * @param {AccumulatorCallback} accumulator\n * @param {*} [initialValue]\n * @returns {Function}\n */\nexport default _makePartial3(reduceRight, true);\n","import {_makePartial3} from \"@privates/partial\";\nimport reduce from \"./reduce\";\n\n/**\n * A partial application of {@link module:lamb.reduce|reduce} that uses the\n * provided <code>accumulator</code> and the optional <code>initialValue</code> to\n * build a function expecting the array-like object to act upon.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n *\n * _.reduceWith(_.sum)(arr) // => 15\n * _.reduceWith(_.subtract)(arr) // => -13\n * _.reduceWith(_.subtract, 0)(arr) // => -15\n *\n * @memberof module:lamb\n * @category Array\n * @function reduceWith\n * @see {@link module:lamb.reduceRightWith|reduceRightWith}\n * @see {@link module:lamb.reduce|reduce}, {@link module:lamb.reduce|reduceRight}\n * @since 0.27.0\n * @param {AccumulatorCallback} accumulator\n * @param {*} [initialValue]\n * @returns {Function}\n */\nexport default _makePartial3(reduce, true);\n","import _toArrayLength from \"@privates/array/_toArrayLength\";\n\n/**\n * Reverses a copy of the given array-like object.\n * @example\n * var arr = [1, 2, 3];\n *\n * _.reverse(arr) // => [3, 2, 1];\n *\n * // `arr` still is [1, 2, 3]\n *\n * @memberof module:lamb\n * @category Array\n * @since 0.19.0\n * @param {ArrayLike} arrayLike\n * @returns {Array}\n */\nexport default function reverse (arrayLike) {\n    var len = _toArrayLength(arrayLike.length);\n    var result = Array(len);\n\n    for (var i = 0, ofs = len - 1; i < len; i++) {\n        result[i] = arrayLike[ofs - i];\n    }\n\n    return result;\n}\n","import {_makePartial3} from \"@privates/partial\";\nimport slice from \"./slice\";\n\n/**\n * Given the <code>start</code> and <code>end</code> bounds, builds a partial application\n * of {@link module:lamb.slice|slice} expecting the array-like object to slice.<br/>\n * See also {@link module:lamb.dropFrom|dropFrom} and {@link module:lamb.drop|drop} if you want a\n * slice to the end of the array-like.\n * @example\n * var arr = [1, 2, 3, 4, 5];\n * var s = \"hello\";\n * var dropFirstAndLast = _.sliceAt(1, -1);\n *\n * dropFirstAndLast(arr) // => [2, 3, 4]\n * dropFirstAndLast(s) // => [\"e\", \"l\", \"l\"]\n *\n * @memberof module:lamb\n * @category Array\n * @function sliceAt\n * @see {@link module:lamb.slice|slice}\n * @see {@link module:lamb.dropFrom|dropFrom}, {@link module:lamb.drop|drop}\n * @since 0.48.0\n * @param {Number} start - Index at which to begin extraction.\n * @param {Number} end - Index at which to end extraction. Extracts up to but not including end.\n * @returns {Function}\n */\nexport default _makePartial3(slice);\n","import _makeArrayChecker from \"@privates/array/_makeArrayChecker\";\n\n/**\n * Checks if at least one element in an array-like object satisfies the given predicate.<br/>\n * The function will stop calling the predicate as soon as it returns a <em>truthy</em> value.<br/>\n * Note that unlike the native\n * [Array.prototype.some]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some},\n * this function won't skip deleted or unassigned indexes.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"age\": 12, active: false},\n *     {\"name\": \"John\", \"age\": 40, active: false},\n *     {\"name\": \"Mario\", \"age\": 17, active: false},\n *     {\"name\": \"Paolo\", \"age\": 15, active: false}\n * ];\n * var isAdult = _.keySatisfies(_.isGTE(18), \"age\");\n * var isActive = _.hasKeyValue(\"active\", true);\n *\n * _.someIn(persons, isAdult) // => true\n * _.someIn(persons, isActive) // => false\n *\n * @example <caption>Showing the difference with <code>Array.prototype.some</code>:</caption>\n * var arr = new Array(5);\n * arr[3] = 99;\n *\n * arr.some(_.isUndefined) // => false\n * _.someIn(arr, _.isUndefined) // => true\n *\n * @memberof module:lamb\n * @category Array\n * @function someIn\n * @see {@link module:lamb.some|some}\n * @see {@link module:lamb.every|every}, {@link module:lamb.everyIn|everyIn}\n * @since 0.39.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} predicate\n * @returns {Boolean}\n */\nexport default _makeArrayChecker(false);\n","import {_curry2} from \"@privates/currying\";\nimport someIn from \"./someIn\";\n\n/**\n * A curried version of {@link module:lamb.someIn|someIn} that uses the given predicate to\n * build a function waiting for the array-like to act upon.\n * @example\n * var data = [1, 3, 5, 6, 7, 8];\n * var isEven = function (n) { return n % 2 === 0; };\n * var containsEvens = _.some(isEven);\n * var containsStrings = _.some(_.isType(\"String\"));\n *\n * containsEvens(data) // => true\n * containsStrings(data) // => false\n *\n * @memberof module:lamb\n * @category Array\n * @function some\n * @see {@link module:lamb.someIn|someIn}\n * @see {@link module:lamb.every|every}, {@link module:lamb.everyIn|everyIn}\n * @since 0.39.0\n * @param {ListIteratorCallback} predicate\n * @returns {Function}\n */\nexport default _curry2(someIn, true);\n","/**\n * Builds a function that returns a constant value.\n * It's actually the simplest form of the K combinator or Kestrel.\n * @example\n * var truth = _.always(true);\n *\n * truth() // => true\n * truth(false) // => true\n * truth(1, 2) // => true\n *\n * // the value being returned is actually the\n * // very same value passed to the function\n * var foo = {bar: \"baz\"};\n * var alwaysFoo = _.always(foo);\n *\n * alwaysFoo() === foo // => true\n *\n * @memberof module:lamb\n * @category Function\n * @see [SKI combinator calculus]{@link https://en.wikipedia.org/wiki/SKI_combinator_calculus}\n * @since 0.1.0\n * @param {*} value\n * @returns {Function}\n */\nexport default function always (value) {\n    return function () {\n        return value;\n    };\n}\n","/**\n * Applies the given function to a list of arguments.\n * @example\n * _.application(_.sum, [3, 4]) // => 7\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.apply|apply}, {@link module:lamb.applyTo|applyTo}\n * @since 0.47.0\n * @param {Function} fn\n * @param {ArrayLike} args\n * @returns {*}\n */\nexport default function application (fn, args) {\n    return fn.apply(this, Object(args));\n}\n","import {_curry2} from \"@privates/currying\";\nimport application from \"./application\";\n\n/**\n * A left-curried version of {@link module:lamb.application|application}. Expects the function\n * to apply and builds a function waiting for the arguments array.\n * @example\n * var arrayMax = _.apply(Math.max);\n *\n * arrayMax([4, 5, 2, 6, 1]) // => 6\n *\n * @memberof module:lamb\n * @category Function\n * @function apply\n * @see {@link module:lamb.application|application}, {@link module:lamb.applyTo|applyTo}\n * @since 0.1.0\n * @param {Function} fn\n * @returns {Function}\n */\nexport default _curry2(application);\n","import {_curry2} from \"@privates/currying\";\nimport application from \"./application\";\n\n/**\n * A right-curried version of {@link module:lamb.application|application}. Expects an array-like\n * object to use as arguments and builds a function waiting for the target of the application.\n * @example\n * var data = [3, 4];\n * var applyToData = _.applyTo(data);\n *\n * applyToData(_.sum) // => 7\n * applyToData(_.multiply) // => 12\n *\n * @memberof module:lamb\n * @category Function\n * @function applyTo\n * @see {@link module:lamb.application|application}, {@link module:lamb.apply|apply}\n * @since 0.47.0\n * @param {ArrayLike} args\n * @returns {Function}\n */\nexport default _curry2(application, true);\n","import {_asPartial} from \"@privates/partial\";\n\n/**\n * Decorates the received function so that it can be called with\n * placeholders to build a partial application of it.<br/>\n * The difference with {@link module:lamb.partial|partial} is that, as long as\n * you call the generated function with placeholders, another partial application\n * of the original function will be built.<br/>\n * The final application will happen when one of the generated functions is\n * invoked without placeholders, using the parameters collected so far. <br/>\n * This function comes in handy when you need to build different specialized\n * functions starting from a basic one, but it's also useful when dealing with\n * optional parameters as you can decide to apply the function even if its arity\n * hasn't been entirely consumed.\n * @example <caption>Explaining the function's behaviour:</caption>\n * var f = _.asPartial(function (a, b, c) {\n *     return a + b + c;\n * });\n *\n * f(4, 3, 2) // => 9\n * f(4, _, 2)(3) // => 9\n * f(_, 3, _)(4, _)(2) // => 9\n *\n * @example <caption>Exploiting optional parameters:</caption>\n * var f = _.asPartial(function (a, b, c) {\n *     return a + b + (c || 0);\n * });\n *\n * var addFive = f(5, _);\n * addFive(2) // => 7\n *\n * var addNine = addFive(4, _);\n * addNine(11) // => 20\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.partial|partial}, {@link module:lamb.partialRight|partialRight}\n * @see {@link module:lamb.curry|curry}, {@link module:lamb.curryRight|curryRight}\n * @see {@link module:lamb.curryable|curryable}, {@link module:lamb.curryableRight|curryableRight}\n * @see {@link module:lamb.@@lamb/placeholder|@@lamb/placeholder}\n * @since 0.36.0\n * @param {Function} fn\n * @returns {Function}\n */\nexport default function asPartial (fn) {\n    return _asPartial(fn, []);\n}\n","import list from \"@array_basics/list\";\nimport map from \"@array_basics/map\";\nimport applyTo from \"@function/applyTo\";\n\n/**\n * Accepts a series of functions and builds a new function. The functions in the series\n * will then be applied, in order, with the values received by the function built with\n * <code>collect</code>.<br/>\n * The collected results will be returned in an array.\n * @example\n * var user = {\n *     id: \"jdoe\",\n *     name: \"John\",\n *     surname: \"Doe\",\n *     scores: [2, 4, 7]\n * };\n * var getIDAndLastScore = _.collect(_.getKey(\"id\"), _.getPath(\"scores.-1\"));\n *\n * getIDAndLastScore(user) // => [\"jdoe\", 7]\n *\n * @example\n * var minAndMax = _.collect(Math.min, Math.max);\n *\n * minAndMax(3, 1, -2, 5, 4, -1) // => [-2, 5]\n *\n * @memberof module:lamb\n * @category Function\n * @since 0.35.0\n * @param {...Function} fn\n * @returns {Function}\n */\nexport default function collect () {\n    var functions = list.apply(null, arguments);\n\n    return function () {\n        return map(functions, applyTo(arguments));\n    };\n}\n","import {_curry} from \"@privates/currying\";\n\n/**\n * Transforms the evaluation of the given function in the evaluation of a sequence of functions\n * expecting only one argument. Each function of the sequence is a partial application of the\n * original one, which will be applied when the specified (or derived) arity is consumed.<br/>\n * Currying will start from the leftmost argument: use {@link module:lamb.curryRight|curryRight}\n * for right currying.\n * @example\n * var makeWithKeys = _.curry(_.make);\n * var makePerson = makeWithKeys([\"name\", \"surname\"]);\n *\n * makePerson([\"John\", \"Doe\"]) // => {name: \"John\", surname: \"Doe\"};\n * makePerson([\"Mario\", \"Rossi\"]) // => {name: \"Mario\", surname: \"Rossi\"};\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.curryRight|curryRight}\n * @see {@link module:lamb.curryable|curryable}, {@link module:lamb.curryableRight|curryableRight}\n * @see {@link module:lamb.partial|partial}, {@link module:lamb.partialRight|partialRight}\n * @see {@link module:lamb.asPartial|asPartial}\n * @since 0.1.0\n * @param {Function} fn\n * @param {Number} [arity=fn.length]\n * @returns {Function}\n */\nexport default function curry (fn, arity) {\n    return _curry(fn, arity, false);\n}\n","import {_curry} from \"@privates/currying\";\n\n/**\n * Same as {@link module:lamb.curry|curry}, but currying starts from the rightmost argument.\n * @example\n * var makeWithValues = _.curryRight(_.make);\n * var makeJohnDoe = makeWithValues([\"John\", \"Doe\"]);\n *\n * makeJohnDoe([\"name\", \"surname\"]) // => {name: \"John\", surname: \"Doe\"};\n * makeJohnDoe([\"firstName\", \"lastName\"]) // => {firstName: \"John\", lastName: \"Doe\"};\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.curry|curry}\n * @see {@link module:lamb.curryable|curryable}, {@link module:lamb.curryableRight|curryableRight}\n * @see {@link module:lamb.partial|partial}, {@link module:lamb.partialRight|partialRight}\n * @see {@link module:lamb.asPartial|asPartial}\n * @since 0.9.0\n * @param {Function} fn\n * @param {Number} [arity=fn.length]\n * @returns {Function}\n */\nexport default function curryRight (fn, arity) {\n    return _curry(fn, arity, true);\n}\n","import {_curry} from \"@privates/currying\";\n\n/**\n * Builds an auto-curried function. The resulting function can be called multiple times with\n * any number of arguments, and the original function will be applied only when the specified\n * (or derived) arity is consumed.<br/>\n * Currying will start from the leftmost argument: use {@link module:lamb.curryableRight|curryableRight}\n * for right currying.\n * @example\n * var collectFourElements = _.curryable(_.list, 4);\n *\n * collectFourElements(2)(3)(4)(5) // => [2, 3, 4, 5]\n * collectFourElements(2)(3, 4)(5) // => [2, 3, 4, 5]\n * collectFourElements(2, 3, 4, 5) // => [2, 3, 4, 5]\n * collectFourElements(2, 3)(4, 5) // => [2, 3, 4, 5]\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.curryableRight|curryableRight}\n * @see {@link module:lamb.curry|curry}, {@link module:lamb.curryRight|curryRight}\n * @see {@link module:lamb.partial|partial}, {@link module:lamb.partialRight|partialRight}\n * @see {@link module:lamb.asPartial|asPartial}\n * @since 0.6.0\n * @param {Function} fn\n * @param {Number} [arity=fn.length]\n * @returns {Function}\n */\nexport default function curryable (fn, arity) {\n    return _curry(fn, arity, false, true);\n}\n","import {_curry} from \"@privates/currying\";\n\n/**\n * Same as {@link module:lamb.curryable|curryable}, but currying starts from the rightmost argument.\n * @example\n * var collectFourElements = _.curryableRight(_.list, 4);\n *\n * collectFourElements(2)(3)(4)(5) // => [5, 4, 3, 2]\n * collectFourElements(2)(3, 4)(5) // => [5, 4, 3, 2]\n * collectFourElements(2, 3, 4, 5) // => [5, 4, 3, 2]\n * collectFourElements(2, 3)(4, 5) // => [5, 4, 3, 2]\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.curryable|curryable}\n * @see {@link module:lamb.curry|curry}, {@link module:lamb.curryRight|curryRight}\n * @see {@link module:lamb.partial|partial}, {@link module:lamb.partialRight|partialRight}\n * @see {@link module:lamb.asPartial|asPartial}\n * @since 0.9.0\n * @param {Function} fn\n * @param {Number} [arity=fn.length]\n * @returns {Function}\n */\nexport default function curryableRight (fn, arity) {\n    return _curry(fn, arity, true, true);\n}\n","/**\n * Returns a function that will execute the given function only if it stops being called for the\n * specified timespan.<br/>\n * See also {@link module:lamb.throttle|throttle} for a different behaviour where the first call\n * happens immediately.\n * @example <caption>A common use case of <code>debounce</code> in a browser environment:</caption>\n * var updateLayout = function () {\n *     // some heavy DOM operations here\n * };\n *\n * window.addEventListener(\"resize\", _.debounce(updateLayout, 200), false);\n *\n * // The resize event is fired repeteadly until the user stops resizing the\n * // window, while the `updateLayout` function is called only once: 200 ms\n * // after he stopped.\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.throttle|throttle}\n * @since 0.1.0\n * @param {Function} fn\n * @param {Number} timespan - Expressed in milliseconds\n * @returns {Function}\n */\nexport default function debounce (fn, timespan) {\n    var timeoutID;\n\n    return function () {\n        var args = arguments;\n        var debounced = function () {\n            timeoutID = null;\n            fn.apply(this, args);\n        }.bind(this);\n\n        clearTimeout(timeoutID);\n        timeoutID = setTimeout(debounced, timespan);\n    };\n}\n","import list from \"@array_basics/list\";\n\n\n/**\n * Returns a function that applies the original function with the arguments in reverse order.\n * @example\n * _.list(1, 2, 3) // => [1, 2, 3]\n * _.flip(_.list)(1, 2, 3) // => [3, 2, 1]\n *\n * @memberof module:lamb\n * @category Function\n * @since 0.1.0\n * @param {Function} fn\n * @returns {Function}\n */\nexport default function flip (fn) {\n    return function () {\n        var args = list.apply(null, arguments).reverse();\n\n        return fn.apply(this, args);\n    };\n}\n","import _toNaturalIndex from \"@privates/array/_toNaturalIndex\";\n\n/**\n * Builds a function that returns the argument received at the given index.<br/>\n * As with {@link module:lamb.getAt|getAt} negative indexes are allowed.<br/>\n * The resulting function will return <code>undefined</code> if no arguments are\n * passed or if the index is out of bounds.\n * @example\n * var getFirstArg = getArgAt(0);\n * var getLastArg = getArgAt(-1);\n *\n * getFirstArg(1, 2, 3) // => 1\n * getLastArg(1, 2, 3) // => 3\n *\n * getArgAt()(1, 2, 3) // => undefined\n * getArgAt(6)(1, 2, 3) // => undefined\n * getArgAt(1)() // => undefined\n *\n * @memberof module:lamb\n * @category Function\n * @since 0.17.0\n * @param {Number} idx\n * @returns {Function}\n */\nexport default function getArgAt (idx) {\n    return function () {\n        return arguments[_toNaturalIndex(idx, arguments.length)];\n    };\n}\n","import partial from \"@core/partial\";\nimport {_invoker} from \"@privates/object\";\nimport _argsTail from \"@privates/args/_argsTail\";\n\n/**\n * Builds a function that will invoke the given method name on any received object and\n * return the result. If no method with such name is found the function will return\n * <code>undefined</code>.<br/>\n * Along with the method name it's possible to supply some arguments that will be bound to the\n * method call. Further arguments can also be passed when the function is actually called, and\n * they will be concatenated to the bound ones.<br/>\n * Returning <code>undefined</code> is a behaviour meant to quickly create a case for\n * {@link module:lamb.adapter|adapter} without the need to check for the existence of the\n * desired method.<br/>\n * See also {@link module:lamb.generic|generic} to create functions out of object methods.\n * @example <caption>Basic polymorphism with <code>invoker</code>:</caption>\n * var polySlice = _.invoker(\"slice\");\n *\n * polySlice([1, 2, 3, 4, 5], 1, 3) // => [2, 3]\n * polySlice(\"Hello world\", 1, 3) // => \"el\"\n *\n * @example <caption>With bound arguments:</caption>\n * var substrFrom2 = _.invoker(\"substr\", 2);\n * substrFrom2(\"Hello world\") // => \"llo world\"\n * substrFrom2(\"Hello world\", 5) // => \"llo w\"\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.invokerOn|invokerOn}\n * @since 0.1.0\n * @param {String} methodName\n * @param {...*} [boundArg]\n * @returns {Function}\n */\nexport default function invoker (methodName) {\n    return partial(_invoker, [_argsTail.apply(null, arguments), methodName]);\n}\n","import partial from \"@core/partial\";\nimport {_invoker} from \"@privates/object\";\nimport {_} from \"@privates/placeholders\";\n\n/**\n * Accepts an object and builds a function expecting a method name, and optionally arguments,\n * to call on such object.\n * Like {@link module:lamb.invoker|invoker}, if no method with the given name is found the\n * function will return <code>undefined</code>.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var arr = [1, 2, 3, 4, 5];\n * var invokerOnArr = _.invokerOn(arr);\n *\n * invokerOnArr(\"filter\", isEven) // => [2, 4]\n * invokerOnArr(\"slice\", 1, 3) // => [2, 3]\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.invoker|invoker}\n * @since 0.15.0\n * @param {Object} target\n * @returns {Function}\n */\nexport default function invokerOn (target) {\n    return partial(_invoker, [[], _, target]);\n}\n","import apply from \"@function/apply\";\nimport list from \"@array_basics/list\";\nimport compose from \"@core/compose\";\nimport mapWith from \"@array_basics/mapWith\";\n\n/**\n * Builds a function that allows to map over the received arguments before applying them\n * to the original one.\n * @example\n * var sumArray = _.reduceWith(_.sum);\n * var sumArgs = _.compose(sumArray, _.list);\n *\n * sumArgs(1, 2, 3, 4, 5) // => 15\n *\n * var square = _.partial(Math.pow, [_, 2]);\n * var sumSquares = _.mapArgs(sumArgs, square);\n *\n * sumSquares(1, 2, 3, 4, 5) // => 55\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.tapArgs|tapArgs}\n * @since 0.3.0\n * @param {Function} fn\n * @param {ListIteratorCallback} mapper\n * @returns {Function}\n */\nexport default function mapArgs (fn, mapper) {\n    return compose(apply(fn), mapWith(mapper), list);\n}\n","import compose from \"@core/compose\";\nimport flip from \"./flip\";\n\n/**\n * Creates a pipeline of functions, where each function consumes the result of the previous one.\n * @example\n * var square = _.partial(Math.pow, [_, 2]);\n * var getMaxAndSquare = _.pipe(Math.max, square);\n *\n * getMaxAndSquare(3, 5) // => 25\n *\n * @memberof module:lamb\n * @category Function\n * @function pipe\n * @see {@link module:lamb.compose|compose}\n * @since 0.1.0\n * @param {...Function} fn\n * @returns {Function}\n */\nexport default flip(compose);\n","/**\n * Builds a function that allows to \"tap\" into the arguments of the original one.\n * This allows to extract simple values from complex ones, transform arguments or simply intercept them.\n * If a \"tapper\" isn't found the argument is passed as it is.\n * @example\n * var someObject = {count: 5};\n * var someArrayData = [2, 3, 123, 5, 6, 7, 54, 65, 76, 0];\n * var getDataAmount = _.tapArgs(_.sum, [_.getKey(\"count\"), _.getKey(\"length\")]);\n *\n * getDataAmount(someObject, someArrayData); // => 15\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.mapArgs|mapArgs}\n * @since 0.3.0\n * @param {Function} fn\n * @param {Function[]} tappers\n * @returns {Function}\n */\nexport default function tapArgs (fn, tappers) {\n    return function () {\n        var len = arguments.length;\n        var tappersLen = tappers.length;\n        var args = [];\n\n        for (var i = 0; i < len; i++) {\n            args.push(i < tappersLen ? tappers[i](arguments[i]) : arguments[i]);\n        }\n\n        return fn.apply(this, args);\n    };\n}\n","/**\n * Returns a function that will invoke the passed function at most once in the given timespan.<br/>\n * The first call in this case happens as soon as the function is invoked; see also\n * {@link module:lamb.debounce|debounce} for a different behaviour where the first call is delayed.\n * @example\n * var log = _.throttle(console.log.bind(console), 5000);\n *\n * log(\"Hi\"); // console logs \"Hi\"\n * log(\"Hi again\"); // nothing happens\n * // after five seconds\n * log(\"Hello world\"); // console logs \"Hello world\"\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.debounce|debounce}\n * @since 0.1.0\n * @param {Function} fn\n * @param {Number} timespan - Expressed in milliseconds.\n * @returns {Function}\n */\nexport default function throttle (fn, timespan) {\n    var result;\n    var lastCall = 0;\n\n    return function () {\n        var now = Date.now();\n\n        if (now - lastCall >= timespan) {\n            lastCall = now;\n            result = fn.apply(this, arguments);\n        }\n\n        return result;\n    };\n}\n","/**\n * Builds a function that passes only one argument to the given function.<br/>\n * It's simply a shortcut for a common use case of {@link module:lamb.aritize|aritize},\n * exposed for convenience.\n * @example\n * var weights = [\"2 Kg\", \"10 Kg\", \"1 Kg\", \"7 Kg\"];\n *\n * _.map(weights, _.unary(parseInt)) // => [2, 10, 1, 7]\n *\n * @memberof module:lamb\n * @category Function\n * @see {@link module:lamb.aritize|aritize}\n * @see {@link module:lamb.binary|binary}\n * @since 0.10.0\n * @param {Function} fn\n * @returns {Function}\n */\nexport default function unary (fn) {\n    return function (a) {\n        return fn.call(this, a);\n    };\n}\n","/**\n * Builds a \"grouping function\" for an array-like object.\n * @private\n * @param {Function} makeValue\n * @returns {Function}\n */\nexport default function _groupWith (makeValue) {\n    return function (arrayLike, iteratee) {\n        var result = {};\n        var len = arrayLike.length;\n\n        for (var i = 0, element, key; i < len; i++) {\n            element = arrayLike[i];\n            key = iteratee(element, i, arrayLike);\n            result[key] = makeValue(result[key], element);\n        }\n\n        return result;\n    };\n}\n","import _groupWith from \"@privates/array/_groupWith\";\n\n/**\n * Transforms an array-like object in a lookup table with the keys generated by the provided\n * <code>iteratee</code>, having as values the count of matches for the key.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"age\": 12},\n *     {\"name\": \"John\", \"age\": 40},\n *     {\"name\": \"Mario\", \"age\": 17},\n *     {\"name\": \"Paolo\", \"age\": 15}\n * ];\n * var getAgeStatus = function (person) { return person.age >= 18 ? \"adult\" : \"minor\"; };\n *\n * _.count(persons, getAgeStatus) // => {\"adult\": 1, \"minor\": 3}\n *\n * @memberof module:lamb\n * @category Array\n * @function count\n * @see {@link module:lamb.countBy|countBy}\n * @see {@link module:lamb.group|group}, {@link module:lamb.groupBy|groupBy}\n * @see {@link module:lamb.index|index}, {@link module:lamb.indexBy|indexBy}\n * @since 0.21.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} iteratee\n * @returns {Object}\n */\nexport default _groupWith(function (a) {\n    return a ? ++a : 1;\n});\n","import {_curry2} from \"@privates/currying\";\nimport count from \"./count\";\n\n/**\n * A curried version of {@link module:lamb.count|count} that uses the provided iteratee to\n * build a function expecting the array-like object to act upon.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"city\": \"New York\"},\n *     {\"name\": \"John\", \"city\": \"New York\"},\n *     {\"name\": \"Mario\", \"city\": \"Rome\"},\n *     {\"name\": \"Paolo\"}\n * ];\n * var getCityOrUnknown = _.adapter(_.getKey(\"city\"), _.always(\"Unknown\"));\n * var countByCity = _.countBy(getCityOrUnknown);\n *\n * countByCity(persons) // => {\"New York\": 2, \"Rome\": 1, \"Unknown\": 1}\n *\n * @memberof module:lamb\n * @category Array\n * @function countBy\n * @see {@link module:lamb.count|count}\n * @see {@link module:lamb.group|group}, {@link module:lamb.groupBy|groupBy}\n * @see {@link module:lamb.index|index}, {@link module:lamb.indexBy|indexBy}\n * @since 0.21.0\n * @param {ListIteratorCallback} iteratee\n * @returns {Function}\n */\nexport default _curry2(count, true);\n","import _groupWith from \"@privates/array/_groupWith\";\n\n/**\n * Transforms an array-like object into a lookup table using the provided iteratee as a grouping\n * criterion to generate keys and values.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"city\": \"New York\"},\n *     {\"name\": \"John\", \"city\": \"New York\"},\n *     {\"name\": \"Mario\", \"city\": \"Rome\"},\n *     {\"name\": \"Paolo\"}\n * ];\n * var getCity = _.getKey(\"city\");\n * var personsByCity = _.group(persons, getCity);\n *\n * // \"personsByCity\" holds:\n * // {\n * //     \"New York\": [\n * //         {\"name\": \"Jane\", \"city\": \"New York\"},\n * //         {\"name\": \"John\", \"city\": \"New York\"}\n * //     ],\n * //     \"Rome\": [\n * //         {\"name\": \"Mario\", \"city\": \"Rome\"}\n * //     ],\n * //     \"undefined\": [\n * //         {\"name\": \"Paolo\"}\n * //     ]\n * // }\n *\n * @example <caption>Adding a custom value for missing keys:</caption>\n *\n * var getCityOrUnknown = _.adapter(getCity, _.always(\"Unknown\"));\n *\n * var personsByCity = _.group(persons, getCityOrUnknown);\n *\n * // \"personsByCity\" holds:\n * // {\n * //     \"New York\": [\n * //         {\"name\": \"Jane\", \"city\": \"New York\"},\n * //         {\"name\": \"John\", \"city\": \"New York\"}\n * //     ],\n * //     \"Rome\": [\n * //         {\"name\": \"Mario\", \"city\": \"Rome\"}\n * //     ],\n * //     \"Unknown\": [\n * //         {\"name\": \"Paolo\"}\n * //     ]\n * // }\n *\n * @memberof module:lamb\n * @category Array\n * @function group\n * @see {@link module:lamb.groupBy|groupBy}\n * @see {@link module:lamb.count|count}, {@link module:lamb.countBy|countBy}\n * @see {@link module:lamb.index|index}, {@link module:lamb.indexBy|indexBy}\n * @since 0.7.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} iteratee\n * @returns {Object}\n */\nexport default _groupWith(function (a, b) {\n    if (!a) {\n        return [b];\n    }\n\n    a[a.length] = b;\n\n    return a;\n});\n","import {_curry2} from \"@privates/currying\";\nimport group from \"./group\";\n\n/**\n * A curried version of {@link module:lamb.group|group} that uses the provided iteratee\n * to build a function expecting the array-like object to act upon.\n * @example\n * var persons = [\n *     {\"name\": \"Jane\", \"age\": 12},\n *     {\"name\": \"John\", \"age\": 40},\n *     {\"name\": \"Mario\", \"age\": 18},\n *     {\"name\": \"Paolo\", \"age\": 15}\n * ];\n *\n * var getAgeStatus = function (person) { return person.age > 20 ? \"over 20\" : \"under 20\"; };\n * var groupByAgeStatus = _.groupBy(getAgeStatus);\n *\n * var personsByAgeStatus = groupByAgeStatus(persons);\n *\n * // \"personsByAgeStatus\" holds:\n * // {\n * //     \"under 20\": [\n * //         {\"name\": \"Jane\", \"age\": 12},\n * //         {\"name\": \"Mario\", \"age\": 18},\n * //         {\"name\": \"Paolo\", \"age\": 15}\n * //     ],\n * //     \"over 20\": [\n * //         {\"name\": \"John\", \"age\": 40}\n * //     ]\n * // }\n *\n * @memberof module:lamb\n * @category Array\n * @function groupBy\n * @see {@link module:lamb.group|group}\n * @see {@link module:lamb.count|count}, {@link module:lamb.countBy|countBy}\n * @see {@link module:lamb.index|index}, {@link module:lamb.indexBy|indexBy}\n * @since 0.7.0\n * @param {ListIteratorCallback} iteratee\n * @returns {Function}\n */\nexport default _curry2(group, true);\n","import _groupWith from \"@privates/array/_groupWith\";\n\n/**\n * Similar to {@link module:lamb.group|group}, but the generated lookup table will have\n * only one element of the original array-like object for each value.<br/>\n * Should be used only when you're sure that your <code>iteratee</code> won't produce\n * duplicate keys, otherwise only the last evaluated element will be in the result.\n * @example\n * var users = [\n *     {id: 1, name: \"John\"},\n *     {id: 2, name: \"Jane\"},\n *     {id: 3, name: \"Mario\"},\n *     {id: 4, name: \"John\"}\n * ];\n *\n * var indexedUsers = _.index(users, _.getKey(\"id\"));\n *\n * // \"indexedUsers\" holds:\n * // {\n * //     \"1\": {id: 1, name: \"John\"},\n * //     \"2\": {id: 2, name: \"Jane\"},\n * //     \"3\": {id: 3, name: \"Mario\"},\n * //     \"4\": {id: 4, name: \"John\"}\n * // }\n *\n * @example <caption>Result of an <code>iteratee</code> producing a duplicate key:</caption>\n * var users = [\n *     {id: 1, name: \"John\"},\n *     {id: 2, name: \"Jane\"},\n *     {id: 3, name: \"Mario\"},\n *     {id: 4, name: \"John\"}\n * ];\n *\n * var indexedUsers = _.index(users, _.getKey(\"name\"));\n *\n * // \"indexedUsers\" holds:\n * // {\n * //     \"John\": {\"id\": 4, \"name\": \"John\"},\n * //     \"Jane\": {\"id\": 2, \"name\": \"Jane\"},\n * //     \"Mario\": {\"id\": 3, \"name\": \"Mario\"}\n * // }\n *\n * @memberof module:lamb\n * @category Array\n * @function index\n * @see {@link module:lamb.indexBy|indexBy}\n * @see {@link module:lamb.count|count}, {@link module:lamb.countBy|countBy}\n * @see {@link module:lamb.group|group}, {@link module:lamb.groupBy|groupBy}\n * @since 0.21.0\n * @param {ArrayLike} arrayLike\n * @param {ListIteratorCallback} iteratee\n * @returns {Object}\n */\nexport default _groupWith(function (a, b) {\n    return b;\n});\n","import {_curry2} from \"@privates/currying\";\nimport index from \"./index\";\n\n/**\n * A curried version of {@link module:lamb.index|index} that uses the provided iteratee\n * to build a function expecting the array-like object to act upon.\n * @example\n * var users = [\n *     {id: 1, name: \"John\"},\n *     {id: 2, name: \"Jane\"},\n *     {id: 3, name: \"Mario\"}\n * ];\n * var indexByID = _.indexBy(_.getKey(\"id\"));\n *\n * var indexedUsers = indexByID(users);\n *\n * // \"indexedUsers\" holds:\n * // {\n * //     \"1\": {id: 1, name: \"John\"},\n * //     \"2\": {id: 2, name: \"Jane\"},\n * //     \"3\": {id: 3, name: \"Mario\"}\n * // }\n *\n * @memberof module:lamb\n * @category Array\n * @function indexBy\n * @see {@link module:lamb.index|index}\n * @see {@link module:lamb.count|count}, {@link module:lamb.countBy|countBy}\n * @see {@link module:lamb.group|group}, {@link module:lamb.groupBy|groupBy}\n * @since 0.21.0\n * @param {ListIteratorCallback} iteratee\n * @returns {Function}\n */\nexport default _curry2(index, true);\n","import isUndefined from \"@type/isUndefined\";\nimport list from \"@array_basics/list\";\n\n/**\n * Accepts a series of functions and builds a function that applies the received\n * arguments to each one and returns the first non-<code>undefined</code> value.<br/>\n * Meant to work in sinergy with {@link module:lamb.case|case} and\n * {@link module:lamb.invoker|invoker}, can be useful as a strategy pattern for functions,\n * to mimic conditional logic or pattern matching, and also to build polymorphic functions.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var filterString = _.compose(_.invoker(\"join\", \"\"), _.filter);\n * var filterAdapter = _.adapter(\n *     _.invoker(\"filter\"),\n *     _.case(_.isType(\"String\"), filterString)\n * );\n *\n * filterAdapter([1, 2, 3, 4, 5, 6], isEven) // => [2, 4, 6]\n * filterAdapter(\"123456\", isEven) // => \"246\"\n * filterAdapter({}, isEven) // => undefined\n *\n * // obviously it's composable\n * var filterWithDefault = _.adapter(filterAdapter, _.always(\"Not implemented\"));\n *\n * filterWithDefault([1, 2, 3, 4, 5, 6], isEven) // => [2, 4, 6]\n * filterWithDefault(\"123456\", isEven) // => \"246\"\n * filterWithDefault({}, isEven) // => \"Not implemented\"\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.case|case}\n * @see {@link module:lamb.invoker|invoker}\n * @since 0.6.0\n * @param {...Function} fn\n * @returns {Function}\n */\nexport default function adapter () {\n    var functions = list.apply(null, arguments);\n\n    return function () {\n        var len = functions.length;\n        var result;\n\n        for (var i = 0; i < len; i++) {\n            result = functions[i].apply(this, arguments);\n\n            if (!isUndefined(result)) {\n                break;\n            }\n        }\n\n        return result;\n    };\n}\n","import list from \"@array_basics/list\";\n\n/**\n * Accepts a series of predicates and builds a new one that returns true if they are all satisfied\n * by the same arguments. The functions in the series will be applied one at a time until a\n * <code>false</code> value is produced, which is returned immediately.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var isPositiveEven = _.allOf(isEven, _.isGT(0));\n *\n * isPositiveEven(-2) // => false\n * isPositiveEven(11) // => false\n * isPositiveEven(6) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.anyOf|anyOf}\n * @since 0.1.0\n * @param {...Function} predicate\n * @returns {Function}\n */\nexport default function allOf () {\n    var predicates = list.apply(null, arguments);\n\n    return function () {\n        for (var i = 0, len = predicates.length; i < len; i++) {\n            if (!predicates[i].apply(this, arguments)) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n}\n","import list from \"@array_basics/list\";\n\n/**\n * Accepts a series of predicates and builds a new one that returns true if at least one of them is\n * satisfied by the received arguments. The functions in the series will be applied one at a time\n * until a <code>true</code> value is produced, which is returned immediately.\n * @example\n * var users = [\n *     {id: 1, name: \"John\", group: \"guest\"},\n *     {id: 2, name: \"Jane\", group: \"root\"},\n *     {id: 3, name: \"Mario\", group: \"admin\"}\n * ];\n * var isInGroup = _.partial(_.hasKeyValue, [\"group\"]);\n * var isSuperUser = _.anyOf(isInGroup(\"admin\"), isInGroup(\"root\"));\n *\n * isSuperUser(users[0]) // => false\n * isSuperUser(users[1]) // => true\n * isSuperUser(users[2]) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.allOf|allOf}\n * @since 0.1.0\n * @param {...Function} predicate\n * @returns {Function}\n */\nexport default function anyOf () {\n    var predicates = list.apply(null, arguments);\n\n    return function () {\n        for (var i = 0, len = predicates.length; i < len; i++) {\n            if (predicates[i].apply(this, arguments)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n","import areSVZ from \"./areSVZ\";\n\n/**\n * Verifies that the two supplied values are the same value using the \"SameValue\" comparison.<br/>\n * Note that this doesn't behave as the strict equality operator, but rather as a shim of ES6's\n * [Object.is]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is}.\n * Differences are that <code>0</code> and <code>-0</code> aren't the same value and, finally,\n * <code>NaN</code> is equal to itself.<br/>\n * See also {@link module:lamb.is|is} for a curried version building a predicate and\n * {@link module:lamb.areSVZ|areSVZ} and {@link module:lamb.isSVZ|isSVZ} to perform a \"SameValueZero\"\n * comparison.\n * @example\n * var testObject = {};\n *\n * _.areSame({}, testObject) // => false\n * _.areSame(testObject, testObject) // => true\n * _.areSame(\"foo\", \"foo\") // => true\n * _.areSame(0, -0) // => false\n * _.areSame(0 / 0, NaN) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.is|is}\n * @see {@link module:lamb.areSVZ|areSVZ}, {@link module:lamb.isSVZ|isSVZ}\n * @see [SameValue comparison]{@link https://www.ecma-international.org/ecma-262/7.0/#sec-samevalue}\n * @see [SameValueZero comparison]{@link https://www.ecma-international.org/ecma-262/7.0/#sec-samevaluezero}\n * @since 0.50.0\n * @param {*} a\n * @param {*} b\n * @returns {Boolean}\n */\nexport default function areSame (a, b) {\n    return a === 0 && b === 0 ? 1 / a === 1 / b : areSVZ(a, b);\n}\n","/**\n * Builds a case for {@link module:lamb.adapter|adapter}.<br/>\n * The function will apply the received arguments to <code>fn</code> if the predicate is satisfied\n * with the same arguments, otherwise will return <code>undefined</code>.<br/>\n * See also {@link module:lamb.condition|condition} to build a condition with two branching functions.\n * @example\n * var halveIfNumber = _.case(_.isType(\"Number\"), _.divideBy(2));\n *\n * halveIfNumber(2) // => 1\n * halveIfNumber(\"2\") // => undefined\n *\n * @memberof module:lamb\n * @category Logic\n * @function case\n * @see {@link module:lamb.adapter|adapter}\n * @see {@link module:lamb.condition|condition}\n * @since 0.51.0\n * @param {Function} predicate\n * @param {Function} fn\n * @returns {Function}\n */\nexport default function (predicate, fn) {\n    return function () {\n        return predicate.apply(this, arguments) ? fn.apply(this, arguments) : void 0;\n    };\n}\n","/**\n * Builds a function that will apply the received arguments to <code>trueFn</code>,\n * if the predicate is satisfied with the same arguments, or to <code>falseFn</code> otherwise.<br/>\n * Although you can use other <code>condition</code>s as <code>trueFn</code> or <code>falseFn</code>,\n * it's probably better to use {@link module:lamb.adapter|adapter} to build more complex behaviours.<br/>\n * See also {@link module:lamb.unless|unless} and {@link module:lamb.when|when} as they are\n * shortcuts to common use cases.\n * @example\n * var isEven = function (n) { return n % 2 === 0};\n * var halveEvenAndDoubleOdd = _.condition(isEven, _.divideBy(2), _.multiplyBy(2));\n *\n * halveEvenAndDoubleOdd(5) // => 10\n * halveEvenAndDoubleOdd(6) // => 3\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.unless|unless}\n * @see {@link module:lamb.when|when}\n * @since 0.2.0\n * @param {Function} predicate\n * @param {Function} trueFn\n * @param {Function} falseFn\n * @returns {Function}\n */\nexport default function condition (predicate, trueFn, falseFn) {\n    return function () {\n        return (predicate.apply(this, arguments) ? trueFn : falseFn).apply(this, arguments);\n    };\n}\n","/**\n * Verifies that the first given value is greater than the second.<br/>\n * Wraps the native <code>&gt;</code> operator within a function.\n * @example\n * var pastDate = new Date(2010, 2, 12);\n * var today = new Date();\n *\n * _.gt(today, pastDate) // => true\n * _.gt(pastDate, today) // => false\n * _.gt(3, 4) // => false\n * _.gt(3, 3) // => false\n * _.gt(3, 2) // => true\n * _.gt(0, -0) // => false\n * _.gt(-0, 0) // => false\n * _.gt(\"a\", \"A\") // => true\n * _.gt(\"b\", \"a\") // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.gte|gte}\n * @see {@link module:lamb.lt|lt}, {@link module:lamb.lte|lte}\n * @see {@link module:lamb.isGT|isGT}, {@link module:lamb.isGTE|isGTE}\n * @see {@link module:lamb.isLT|isLT}, {@link module:lamb.isLTE|isLTE}\n * @since 0.50.0\n * @param {Number|String|Date|Boolean} a\n * @param {Number|String|Date|Boolean} b\n * @returns {Boolean}\n */\nexport default function gt (a, b) {\n    return a > b;\n}\n","/**\n * Verifies that the first given value is greater than or equal to the second.\n * Regarding equality, beware that this is simply a wrapper for the native\n * <code>&gt;=</code> operator, so <code>-0 === 0</code>.\n * @example\n * _.gte(3, 4) // => false\n * _.gte(3, 3) // => true\n * _.gte(3, 2) // => true\n * _.gte(0, -0) // => true\n * _.gte(-0, 0) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.gt|gt}\n * @see {@link module:lamb.lt|lt}, {@link module:lamb.lte|lte}\n * @see {@link module:lamb.isGT|isGT}, {@link module:lamb.isGTE|isGTE}\n * @see {@link module:lamb.isLT|isLT}, {@link module:lamb.isLTE|isLTE}\n * @since 0.50.0\n * @param {Number|String|Date|Boolean} a\n * @param {Number|String|Date|Boolean} b\n * @returns {Boolean}\n */\nexport default function gte (a, b) {\n    return a >= b;\n}\n","import {_curry2} from \"@privates/currying\";\nimport areSame from \"./areSame\";\n\n/**\n * A curried version of {@link module:lamb.areSame|areSame}.<br/>\n * Accepts a value and builds a predicate that checks whether the value\n * and the one received by the predicate are the same using the \"SameValue\"\n * comparison.<br/>\n * See also {@link module:lamb.areSVZ|areSVZ} and {@link module:lamb.isSVZ|isSVZ}\n * to perform a \"SameValueZero\" comparison.\n * @example\n * var john = {name: \"John\", surname: \"Doe\"};\n * var isJohn = _.is(john);\n * var isNegativeZero = _.is(-0);\n * var isReallyNaN = _.is(NaN);\n *\n * isJohn(john) // => true\n * isJohn({name: \"John\", surname: \"Doe\"}) // => false\n *\n * isNegativeZero(0) // => false\n * isNegativeZero(-0) // => true\n *\n * isNaN(NaN) // => true\n * isNaN(\"foo\") // => true\n *\n * isReallyNaN(NaN) // => true\n * isReallyNaN(\"foo\") // => false\n *\n * @memberof module:lamb\n * @category Logic\n * @function is\n * @see {@link module:lamb.areSame|areSame}\n * @see {@link module:lamb.areSVZ|areSVZ}, {@link module:lamb.isSVZ|isSVZ}\n * @see [SameValue comparison]{@link https://www.ecma-international.org/ecma-262/7.0/#sec-samevalue}\n * @see [SameValueZero comparison]{@link https://www.ecma-international.org/ecma-262/7.0/#sec-samevaluezero}\n * @since 0.1.0\n * @param {*} value\n * @returns {Function}\n */\nexport default _curry2(areSame);\n","import {_curry2} from \"@privates/currying\";\nimport gt from \"./gt\";\n\n/**\n * A right curried version of {@link module:lamb.gt|gt}.<br/>\n * Accepts a value and builds a predicate that checks whether the value\n * is greater than the one received by the predicate.\n * @example\n * var isGreaterThan5 = _.isGT(5);\n *\n * isGreaterThan5(3) // => false\n * isGreaterThan5(5) // => false\n * isGreaterThan5(7) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @function isGT\n * @see {@link module:lamb.isGTE|isGTE}\n * @see {@link module:lamb.isLT|isLT}, {@link module:lamb.isLTE|isLTE}\n * @see {@link module:lamb.gt|gt}, {@link module:lamb.gte|gte}\n * @see {@link module:lamb.lt|lt}, {@link module:lamb.lte|lte}\n * @since 0.1.0\n * @param {Number|String|Date|Boolean} value\n * @returns {Function}\n */\nexport default _curry2(gt, true);\n","import {_curry2} from \"@privates/currying\";\nimport gte from \"./gte\";\n\n/**\n * A right curried version of {@link module:lamb.gte|gte}.<br/>\n * Accepts a value and builds a predicate that checks whether the value\n * is greater than or equal to the one received by the predicate.\n * @example\n * var isPositiveOrZero = _.isGTE(0);\n *\n * isPositiveOrZero(-3) // => false\n * isPositiveOrZero(-0) // => true\n * isPositiveOrZero(0) // => true\n * isPositiveOrZero(5) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @function isGTE\n * @see {@link module:lamb.isGT|isGT}\n * @see {@link module:lamb.isLT|isLT}, {@link module:lamb.isLTE|isLTE}\n * @see {@link module:lamb.gt|gt}, {@link module:lamb.gte|gte}\n * @see {@link module:lamb.lt|lt}, {@link module:lamb.lte|lte}\n * @since 0.1.0\n * @param {Number|String|Date|Boolean} value\n * @returns {Function}\n */\nexport default _curry2(gte, true);\n","/**\n * Verifies that the first given value is less than the second.<br/>\n * Wraps the native <code>&lt;</code> operator within a function.\n * @example\n * var pastDate = new Date(2010, 2, 12);\n * var today = new Date();\n *\n * _.lt(today, pastDate) // => false\n * _.lt(pastDate, today) // => true\n * _.lt(3, 4) // => true\n * _.lt(3, 3) // => false\n * _.lt(3, 2) // => false\n * _.lt(0, -0) // => false\n * _.lt(-0, 0) // => false\n * _.lt(\"a\", \"A\") // => false\n * _.lt(\"a\", \"b\") // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.lte|lte}\n * @see {@link module:lamb.gt|gt}, {@link module:lamb.gte|gte}\n * @see {@link module:lamb.isLT|isLT}, {@link module:lamb.isLTE|isLTE}\n * @see {@link module:lamb.isGT|isGT}, {@link module:lamb.isGTE|isGTE}\n * @since 0.50.0\n * @param {Number|String|Date|Boolean} a\n * @param {Number|String|Date|Boolean} b\n * @returns {Boolean}\n */\nexport default function lt (a, b) {\n    return a < b;\n}\n","import {_curry2} from \"@privates/currying\";\nimport lt from \"./lt\";\n\n/**\n * A right curried version of {@link module:lamb.lt|lt}.<br/>\n * Accepts a value and builds a predicate that checks whether the value\n * is less than the one received by the predicate.\n * @example\n * var isLessThan5 = _.isLT(5);\n *\n * isLessThan5(7) // => false\n * isLessThan5(5) // => false\n * isLessThan5(3) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @function isLT\n * @see {@link module:lamb.isLTE|isLTE}\n * @see {@link module:lamb.isGT|isGT}, {@link module:lamb.isGTE|isGTE}\n * @see {@link module:lamb.lt|lt}, {@link module:lamb.lte|lte}\n * @see {@link module:lamb.gt|gt}, {@link module:lamb.gte|gte}\n * @since 0.1.0\n * @param {Number|String|Date|Boolean} value\n * @returns {Function}\n */\nexport default _curry2(lt, true);\n","/**\n * Verifies that the first given value is less than or equal to the second.\n * Regarding equality, beware that this is simply a wrapper for the native\n * <code>&lt;=</code> operator, so <code>-0 === 0</code>.\n * @example\n * _.lte(3, 4) // => true\n * _.lte(3, 3) // => true\n * _.lte(3, 2) // => false\n * _.lte(0, -0) // => true\n * _.lte(-0, 0) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.lt|lt}\n * @see {@link module:lamb.gt|gt}, {@link module:lamb.gte|gte}\n * @see {@link module:lamb.isLT|isLT}, {@link module:lamb.isLTE|isLTE}\n * @see {@link module:lamb.isGT|isGT}, {@link module:lamb.isGTE|isGTE}\n * @since 0.50.0\n * @param {Number|String|Date|Boolean} a\n * @param {Number|String|Date|Boolean} b\n * @returns {Boolean}\n */\nexport default function lte (a, b) {\n    return a <= b;\n}\n","import {_curry2} from \"@privates/currying\";\nimport lte from \"./lte\";\n\n/**\n * A right curried version of {@link module:lamb.lte|lte}.<br/>\n * Accepts a value and builds a predicate that checks whether the value\n * is less than or equal to the one received by the predicate.\n * @example\n * var isNegativeOrZero = _.isLTE(0);\n *\n * isNegativeOrZero(5) // => false\n * isNegativeOrZero(-0) // => true\n * isNegativeOrZero(0) // => true\n * isNegativeOrZero(-3) // => true\n *\n * @memberof module:lamb\n * @category Logic\n * @function isLTE\n * @see {@link module:lamb.isLT|isLT}\n * @see {@link module:lamb.isGT|isGT}, {@link module:lamb.isGTE|isGTE}\n * @see {@link module:lamb.lt|lt}, {@link module:lamb.lte|lte}\n * @see {@link module:lamb.gt|gt}, {@link module:lamb.gte|gte}\n * @since 0.1.0\n * @param {Number|String|Date|Boolean} value\n * @returns {Function}\n */\nexport default _curry2(lte, true);\n","import {_curry2} from \"@privates/currying\";\nimport areSVZ from \"./areSVZ\";\n\n/**\n * A curried version of {@link module:lamb.areSVZ|areSVZ}.<br/>\n * Accepts a value and builds a predicate that checks whether the value\n * and the one received by the predicate are the same using the \"SameValueZero\"\n * comparison.<br/>\n * See also {@link module:lamb.areSame|areSame} and {@link module:lamb.is|is}\n * to perform a \"SameValue\" comparison.\n * @example\n * var john = {name: \"John\", surname: \"Doe\"};\n * var isJohn = _.isSVZ(john);\n * var isZero = _.isSVZ(0);\n * var isReallyNaN = _.isSVZ(NaN);\n *\n * isJohn(john) // => true\n * isJohn({name: \"John\", surname: \"Doe\"}) // => false\n *\n * isZero(0) // => true\n * isZero(-0) // => true\n *\n * isNaN(NaN) // => true\n * isNaN(\"foo\") // => true\n *\n * isReallyNaN(NaN) // => true\n * isReallyNaN(\"foo\") // => false\n *\n * @memberof module:lamb\n * @category Logic\n * @function isSVZ\n * @see {@link module:lamb.areSVZ|areSVZ}\n * @see {@link module:lamb.areSame|areSame}, {@link module:lamb.is|is}\n * @see [SameValue comparison]{@link https://www.ecma-international.org/ecma-262/7.0/#sec-samevalue}\n * @see [SameValueZero comparison]{@link https://www.ecma-international.org/ecma-262/7.0/#sec-samevaluezero}\n * @since 0.1.0\n * @param {*} value\n * @returns {Function}\n */\nexport default _curry2(areSVZ);\n","/**\n * Builds a unary function that will check its argument against the given predicate.\n * If the predicate isn't satisfied, the provided <code>fn</code> function will be\n * applied to the same value. The received argument is returned as it is otherwise.<br/>\n * See {@link module:lamb.when|when} for the opposite behaviour.<br/>\n * It's a shortcut for a common use case of {@link module:lamb.condition|condition},\n * where its <code>trueFn</code> parameter is the [identity function]{@link module:lamb.identity}.\n * @example\n * var isEven = function (n) { return n % 2 === 0};\n * var halveUnlessIsEven = _.unless(isEven, _.divideBy(2));\n *\n * halveUnlessIsEven(5) // => 2.5\n * halveUnlessIsEven(6) // => 6\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.condition|condition}\n * @see {@link module:lamb.when|when}\n * @since 0.42.0\n * @param {Function} predicate\n * @param {Function} fn\n * @returns {Function}\n */\nexport default function unless (predicate, fn) {\n    return function (value) {\n        return predicate.call(this, value) ? value : fn.call(this, value);\n    };\n}\n","/**\n * Builds a unary function that will check its argument against the given predicate.\n * If the predicate is satisfied, the provided <code>fn</code> function will be\n * applied to the same value. The received argument is returned as it is otherwise.<br/>\n * See {@link module:lamb.unless|unless} for the opposite behaviour.<br/>\n * It's a shortcut for a common use case of {@link module:lamb.condition|condition},\n * where its <code>falseFn</code> parameter is the [identity function]{@link module:lamb.identity}.\n * @example\n * var isEven = function (n) { return n % 2 === 0; };\n * var halveIfEven = _.when(isEven, _.divideBy(2));\n *\n * halveIfEven(5) // => 5\n * halveIfEven(6) // => 3\n *\n * @memberof module:lamb\n * @category Logic\n * @see {@link module:lamb.condition|condition}\n * @see {@link module:lamb.unless|unless}\n * @since 0.42.0\n * @param {Function} predicate\n * @param {Function} fn\n * @returns {Function}\n */\nexport default function when (predicate, fn) {\n    return function (value) {\n        return predicate.call(this, value) ? fn.call(this, value) : value;\n    };\n}\n","/**\n * Sums two numbers.\n * @example\n * _.sum(4, 5) // => 9\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.add|add}\n * @since 0.50.0\n * @param {Number} a\n * @param {Number} b\n * @returns {Number}\n */\nexport default function sum (a, b) {\n    return a + b;\n}\n","import {_curry2} from \"@privates/currying\";\nimport sum from \"./sum\";\n\n/**\n * A curried version of {@link module:lamb.sum|sum}.\n * @example\n * var add5 = _.add(5);\n *\n * _.add5(4) // => 9\n * _.add5(-2) // => 3\n *\n * @memberof module:lamb\n * @category Math\n * @function add\n * @see {@link module:lamb.sum|sum}\n * @since 0.1.0\n * @param {Number} a\n * @returns {Function}\n */\nexport default _curry2(sum, true);\n","import {_makePartial3} from \"@privates/partial\";\nimport clamp from \"./clamp\";\n\n/**\n * A curried version of {@link module:lamb.clamp|clamp}, expecting a <code>min</code>\n * and a <code>max</code> value, that builds a function waiting for the number to clamp.\n * @example\n * _.clampWithin(0, 10)(-5) // => 0\n * _.clampWithin(0, 10)(5) // => 5\n * _.clampWithin(0, 10)(15) // => 10\n * _.clampWithin(0, 10)(0) // => 0\n * _.clampWithin(0, 10)(10) // => 10\n * _.is(_.clampWithin(0, 10)(-0), -0) // => true\n * _.clampWithin(20, 15)(10) // => NaN\n *\n * @memberof module:lamb\n * @category Math\n * @function clampWithin\n * @see {@link module:lamb.clamp|clamp}\n * @since 0.47.0\n * @param {Number} min\n * @param {Number} max\n * @returns {Function}\n */\nexport default _makePartial3(clamp);\n","/**\n * Subtracts two numbers.\n * @example\n * _.subtract(5, 3) // => 2\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.deduct|deduct}\n * @since 0.1.0\n * @param {Number} a\n * @param {Number} b\n * @returns {Number}\n */\nexport default function subtract (a, b) {\n    return a - b;\n}\n","import {_curry2} from \"@privates/currying\";\nimport subtract from \"./subtract\";\n\n/**\n * A curried version of {@link module:lamb.subtract|subtract} that expects the\n * subtrahend to build a function waiting for the minuend.\n * @example\n * var deduct5 = _.deduct(5);\n *\n * deduct5(12) // => 7\n * deduct5(3) // => -2\n *\n * @memberof module:lamb\n * @category Math\n * @function deduct\n * @see {@link module:lamb.subtract|subtract}\n * @since 0.50.0\n * @param {Number} a\n * @returns {Function}\n */\nexport default _curry2(subtract, true);\n","/**\n * Divides two numbers.\n * @example\n * _.divide(5, 2) // => 2.5\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.divideBy|divideBy}\n * @since 0.1.0\n * @param {Number} a\n * @param {Number} b\n * @returns {Number}\n */\nexport default function divide (a, b) {\n    return a / b;\n}\n","import {_curry2} from \"@privates/currying\";\nimport divide from \"./divide\";\n\n/**\n * A curried version of {@link module:lamb.divide|divide} that expects a divisor to\n * build a function waiting for the dividend.\n * @example\n * var halve = divideBy(2);\n *\n * halve(10) // => 5\n * halve(5) // => 2.5\n *\n * @memberof module:lamb\n * @category Math\n * @function divideBy\n * @see {@link module:lamb.divide|divide}\n * @since 0.50.0\n * @param {Number} a\n * @returns {Function}\n */\nexport default _curry2(divide, true);\n","/**\n * Generates a sequence of values of the desired length with the provided iteratee.\n * The values being iterated, and received by the iteratee, are the results generated so far.\n * @example\n * var fibonacci = function (n, idx, results) {\n *     return n + (results[idx - 1] || 0);\n * };\n *\n * _.generate(1, 10, fibonacci) // => [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.range|range}\n * @since 0.21.0\n * @param {*} start - The starting value\n * @param {Number} len - The desired length for the sequence\n * @param {ListIteratorCallback} iteratee\n * @returns {Array}\n */\nexport default function generate (start, len, iteratee) {\n    var result = [start];\n\n    for (var i = 0, limit = len - 1; i < limit; i++) {\n        result.push(iteratee(result[i], i, result));\n    }\n\n    return result;\n}\n","import type from \"@type/type\";\n\n/**\n * Verifies whether the received value is a finite number.<br/>\n * Behaves almost as a shim of ES6's [Number.isFinite]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite},\n * but with a difference: it will return <code>true</code> even for Number object's instances.\n * @example\n * _.isFinite(5) // => true\n * _.isFinite(new Number(5)) // => true\n * _.isFinite(Infinity) // => false\n * _.isFinite(-Infinity) // => false\n * _.isFinite(\"5\") // => false\n * _.isFinite(NaN) // => false\n * _.isFinite(null) // => false\n *\n * @memberof module:lamb\n * @category Math\n * @function isFinite\n * @since 0.46.0\n * @param {*} value\n * @returns {Boolean}\n */\nexport default function (value) {\n    return type(value) === \"Number\" && isFinite(value);\n}\n","import type from \"@type/type\";\n\n/**\n * Verifies whether the received value is a number and an integer.\n * Behaves almost as a shim of ES6's [Number.isInteger]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger},\n * but with a difference: it will return <code>true</code> even for Number object's instances.\n * @example\n * _.isInteger(5) // => true\n * _.isInteger(new Number(5)) // => true\n * _.isInteger(2.5) // => false\n * _.isInteger(Infinity) // => false\n * _.isInteger(-Infinity) // => false\n * _.isInteger(\"5\") // => false\n * _.isInteger(NaN) // => false\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.isSafeInteger|isSafeInteger}\n * @since 0.46.0\n * @param {*} value\n * @returns {Boolean}\n */\nexport default function isInteger (value) {\n    return type(value) === \"Number\" && value % 1 === 0;\n}\n","import isInteger from \"./isInteger\";\n\n/**\n * Verifies whether the received value is a \"safe integer\", meaning that is a number and that\n * can be exactly represented as an IEEE-754 double precision number.\n * The safe integers consist of all integers from -(2<sup>53</sup> - 1) inclusive to\n * 2<sup>53</sup> - 1 inclusive.<br/>\n * Behaves almost as a shim of ES6's [Number.isSafeInteger]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger},\n * but with a difference: it will return <code>true</code> even for Number object's instances.\n * @example\n * _.isSafeInteger(5) // => true\n * _.isSafeInteger(new Number(5)) // => true\n * _.isSafeInteger(Math.pow(2, 53) - 1) // => true\n * _.isSafeInteger(Math.pow(2, 53)) // => false\n * _.isSafeInteger(2e32) // => false\n * _.isSafeInteger(2.5) // => false\n * _.isSafeInteger(Infinity) // => false\n * _.isSafeInteger(-Infinity) // => false\n * _.isSafeInteger(\"5\") // => false\n * _.isSafeInteger(NaN) // => false\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.isInteger|isInteger}\n * @since 0.46.0\n * @param {*} value\n * @returns {Boolean}\n */\nexport default function isSafeInteger (value) {\n    return isInteger(value) && Math.abs(value) <= 9007199254740991;\n}\n","/**\n * Performs the modulo operation and should not be confused with the\n * {@link module:lamb.remainder|remainder}.\n * The function performs a floored division to calculate the result and not\n * a truncated one, hence the sign of the dividend is not kept, unlike the\n * {@link module:lamb.remainder|remainder}.\n * @example\n * _.modulo(5, 3) // => 2\n * _.remainder(5, 3) // => 2\n *\n * _.modulo(-5, 3) // => 1\n * _.remainder(-5, 3) // => -2\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.remainder|remainder}\n * @see [Modulo operation on Wikipedia]{@link http://en.wikipedia.org/wiki/Modulo_operation}\n * @since 0.1.0\n * @param {Number} a\n * @param {Number} b\n * @returns {Number}\n */\nexport default function modulo (a, b) {\n    return a - (b * Math.floor(a / b));\n}\n","/**\n * Multiplies two numbers.\n * @example\n * _.multiply(5, 3) // => 15\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.multiplyBy|multiplyBy}\n * @since 0.1.0\n * @param {Number} a\n * @param {Number} b\n * @returns {Number}\n */\nexport default function multiply (a, b) {\n    return a * b;\n}\n","import {_curry2} from \"@privates/currying\";\nimport multiply from \"./multiply\";\n\n/**\n * A curried version of {@link module:lamb.multiply|multiply}.\n * @example\n * var double = _.multiplyBy(2);\n *\n * double(5) // => 10\n *\n * @memberof module:lamb\n * @category Math\n * @function multiplyBy\n * @see {@link module:lamb.multiply|multiply}\n * @since 0.50.0\n * @param {Number} a\n * @returns {Function}\n */\nexport default _curry2(multiply, true);\n","/**\n * Generates a random integer between two given integers, both included.\n * Note that no safety measure is taken if the provided arguments aren't integers, so\n * you may end up with unexpected (not really) results.\n * For example <code>randomInt(0.1, 1.2)</code> could be <code>2</code>.\n * @example\n *\n * _.randomInt(1, 10) // => an integer >=1 && <= 10\n *\n * @memberof module:lamb\n * @category Math\n * @since 0.1.0\n * @param {Number} min\n * @param {Number} max\n * @returns {Number}\n */\nexport default function randomInt (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import {_forceToNumber} from \"@privates/number\";\n\n/**\n * Generates an arithmetic progression of numbers starting from <code>start</code> up to,\n * but not including, <code>limit</code>, using the given <code>step</code>.\n * @example\n * _.range(2, 10) // => [2, 3, 4, 5, 6, 7, 8, 9]\n * _.range(1, -10, -2) // => [1, -1, -3, -5, -7, -9]\n * _.range(0, 3, 1) // => [0, 1, 2]\n * _.range(-0, 3, 1) // => [-0, 1, 2]\n * _.range(1, -10, 2) // => []\n * _.range(3, 5, -1) // => []\n *\n * @example <caption>Behaviour if <code>step</code> happens to be zero:</caption>\n * _.range(2, 10, 0) // => [2]\n * _.range(2, -10, 0) // => [2]\n * _.range(2, 2, 0) // => []\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.generate|generate}\n * @since 0.1.0\n * @param {Number} start\n * @param {Number} limit\n * @param {Number} [step=1]\n * @returns {Number[]}\n */\nexport default function range (start, limit, step) {\n    start = _forceToNumber(start);\n    limit = _forceToNumber(limit);\n    step = arguments.length === 3 ? _forceToNumber(step) : 1;\n\n    if (step === 0) {\n        return limit === start ? [] : [start];\n    }\n\n    var len = Math.max(Math.ceil((limit - start) / step), 0);\n    var result = Array(len);\n\n    for (var i = 0, lastValue = start; i < len; i++) {\n        result[i] = lastValue;\n        lastValue += step;\n    }\n\n    return result;\n}\n","/**\n * Gets the remainder of the division of two numbers.\n * Not to be confused with the {@link module:lamb.modulo|modulo} as the remainder\n * keeps the sign of the dividend and may lead to some unexpected results.\n * @example\n * // example of wrong usage of the remainder\n * // (in this case the modulo operation should be used)\n * var isOdd = function (n) { return _.remainder(n, 2) === 1; };\n * isOdd(-3) // => false as -3 % 2 === -1\n *\n * @memberof module:lamb\n * @category Math\n * @see {@link module:lamb.modulo|modulo}\n * @see [Modulo operation on Wikipedia]{@link http://en.wikipedia.org/wiki/Modulo_operation}\n * @since 0.1.0\n * @param {Number} a\n * @param {Number} b\n * @returns {Number}\n */\nexport default function remainder (a, b) {\n    return a % b;\n}\n","import forEach from \"@array_basics/forEach\";\n\n/**\n * Builds an object from a list of key / value pairs like the one\n * returned by {@link module:lamb.pairs|pairs} or {@link module:lamb.ownPairs|ownPairs}.<br/>\n * In case of duplicate keys the last key / value pair is used.\n * @example\n * _.fromPairs([[\"a\", 1], [\"b\", 2], [\"c\", 3]]) // => {\"a\": 1, \"b\": 2, \"c\": 3}\n * _.fromPairs([[\"a\", 1], [\"b\", 2], [\"a\", 3]]) // => {\"a\": 3, \"b\": 2}\n * _.fromPairs([[1], [void 0, 2], [null, 3]]) // => {\"1\": undefined, \"undefined\": 2, \"null\": 3}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.ownPairs|ownPairs}, {@link module:lamb.pairs|pairs}\n * @since 0.8.0\n * @param {Array<Array<String, *>>} pairsList\n * @returns {Object}\n */\nexport default function fromPairs (pairsList) {\n    var result = {};\n\n    forEach(pairsList, function (pair) {\n        result[pair[0]] = pair[1];\n    });\n\n    return result;\n}\n","import {_immutable} from \"@privates/object\";\n\n/**\n * Makes an object immutable by recursively calling [Object.freeze]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze}\n * on its members.<br/>\n * Any attempt to extend or modify the object can throw a <code>TypeError</code> or fail silently,\n * depending on the environment and the [strict mode]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode} directive.\n * @example\n * var user = _.immutable({\n *     name: \"John\",\n *     surname: \"Doe\",\n *     login: {\n *         username: \"jdoe\",\n *         password: \"abc123\"\n *     },\n *     luckyNumbers: [13, 17]\n * });\n *\n * // All of these statements will fail and possibly\n * // throw a TypeError (see the function description)\n * user.name = \"Joe\";\n * delete user.name;\n * user.newProperty = [];\n * user.login.password = \"foo\";\n * user.luckyNumbers.push(-13);\n *\n * @memberof module:lamb\n * @category Object\n * @since 0.8.0\n * @param {Object} obj\n * @returns {Object}\n */\nexport default function immutable (obj) {\n    return _immutable(obj, []);\n}\n","import {_safeKeys, _unsafeKeyListFrom} from \"@privates/object\";\n\n/**\n * Retrieves the list of the own enumerable properties of an object.<br/>\n * Although [Object.keys]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys}\n * is already present in ECMAScript 5, its behaviour changed in the subsequent specifications\n * of the standard.<br/>\n * This function <em>shims</em> the ECMAScript 6 version, by forcing a conversion to\n * object for any value but <code>null</code> and <code>undefined</code>.\n * @example <caption>Showing the difference with {@link module:lamb.enumerables|enumerables}:</caption>\n * var baseFoo = Object.create({a: 1}, {b: {value: 2}});\n * var foo = Object.create(baseFoo, {\n *     c: {value: 3},\n *     d: {value: 4, enumerable: true}\n * });\n *\n * _.enumerables(foo) // => [\"d\", \"a\"]\n * _.keys(foo) // => [\"d\"]\n *\n * @memberof module:lamb\n * @category Object\n * @function keys\n * @see {@link module:lamb.enumerables|enumerables}\n * @since 0.25.1\n * @param {Object} obj\n * @returns {String[]}\n */\nexport default _unsafeKeyListFrom(_safeKeys);\n","/**\n * Builds an object from the two given lists, using the first one as keys and the last\n * one as values.<br/>\n * If the list of keys is longer than the values one, the keys will be created with\n * <code>undefined</code> values.<br/>\n * If more values than keys are supplied, the extra values will be ignored.\n * @example\n * _.make([\"a\", \"b\", \"c\"], [1, 2, 3]) // => {a: 1, b: 2, c: 3}\n * _.make([\"a\", \"b\", \"c\"], [1, 2]) // => {a: 1, b: 2, c: undefined}\n * _.make([\"a\", \"b\"], [1, 2, 3]) // => {a: 1, b: 2}\n * _.make([null, void 0, 2], [1, 2, 3]) // => {\"null\": 1, \"undefined\": 2, \"2\": 3}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.tear|tear}, {@link module:lamb.tearOwn|tearOwn} for the reverse operation\n * @since 0.8.0\n * @param {String[]} names\n * @param {ArrayLike} values\n * @returns {Object}\n */\nexport default function make (names, values) {\n    var result = {};\n    var valuesLen = values.length;\n\n    for (var i = 0, len = names.length; i < len; i++) {\n        result[names[i]] = i < valuesLen ? values[i] : void 0;\n    }\n\n    return result;\n}\n","import {_makeTypeErrorFor} from \"@privates/type\";\nimport isNil from \"@type/isNil\";\n\n/**\n * Creates a new object by applying the given function\n * to all enumerable properties of the source one.\n * @example\n * var weights = {\n *     john: \"72.5 Kg\",\n *     jane: \"52.3 Kg\"\n * };\n *\n * _.mapValues(weights, parseFloat) // => {john: 72.5, jane: 52.3}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.mapValuesWith|mapValuesWith}\n * @since 0.54.0\n * @param {Object} source\n * @param {ObjectIteratorCallback} fn\n * @returns {Object}\n */\nexport default function mapValues (source, fn) {\n    if (isNil(source)) {\n        throw _makeTypeErrorFor(source, \"object\");\n    }\n\n    var result = {};\n\n    for (var key in source) {\n        result[key] = fn(source[key], key, source);\n    }\n\n    return result;\n}\n","import {_curry2} from \"@privates/currying\";\nimport mapValues from \"./mapValues\";\n\n/**\n * A curried version of {@link module:lamb.mapValues|mapValues}.<br/>\n * Expects a mapping function to build a new function waiting for the\n * object to act upon.\n * @example\n * var incValues = _.mapValuesWith(_.add(1));\n * var results = {\n *     first: 10,\n *     second: 5,\n *     third: 3\n * };\n *\n * incValues(results) // => {first: 11, second: 6, third: 4}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.mapValues|mapValues}\n * @since 0.54.0\n * @function mapValuesWith\n * @param {Function} fn\n * @returns {Function}\n */\nexport default _curry2(mapValues, true);\n","import {_merge} from \"@privates/object\";\nimport partial from \"@core/partial\";\nimport enumerables from \"@object/enumerables\";\n\n/**\n * Merges the enumerable properties of the provided sources into a new object.<br/>\n * In case of key homonymy each source has precedence over the previous one.\n * @example\n * _.merge({a: 1}, {b: 3, c: 4}, {b: 5}) // => {a: 1, b: 5, c: 4}\n *\n * @example <caption>Array-like objects will be transformed to objects with numbers as keys:</caption>\n * _.merge([1, 2], {a: 2}) // => {\"0\": 1, \"1\": 2, a: 2}\n * _.merge(\"foo\", {a: 2}) // => {\"0\": \"f\", \"1\": \"o\", \"2\": \"o\", a: 2}\n *\n * @example <caption>Every other non-nil value will be treated as an empty object:</caption>\n * _.merge({a: 2}, 99, NaN) // => {a: 2}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.mergeOwn|mergeOwn} to merge own properties only\n * @since 0.10.0\n * @function merge\n * @param {...Object} source\n * @returns {Object}\n */\nexport default partial(_merge, [enumerables]);\n","import {_merge} from \"@privates/object\";\nimport partial from \"@core/partial\";\nimport keys from \"./keys\";\n\n/**\n * Same as {@link module:lamb.merge|merge}, but only the own properties of the\n * sources are taken into account.\n * @example <caption>Showing the difference with <code>merge</code>:</caption>\n * var baseFoo = Object.create({a: 1}, {b: {value: 2, enumerable: true}, z: {value: 5}});\n * var foo = Object.create(baseFoo, {\n *     c: {value: 3, enumerable: true}\n * });\n *\n * var bar = {d: 4};\n *\n * _.merge(foo, bar) // => {a: 1, b: 2, c: 3, d: 4}\n * _.mergeOwn(foo, bar) // => {c: 3, d: 4}\n *\n * @example <caption>Array-like objects will be transformed to objects with numbers as keys:</caption>\n * _.mergeOwn([1, 2], {a: 2}) // => {\"0\": 1, \"1\": 2, a: 2}\n * _.mergeOwn(\"foo\", {a: 2}) // => {\"0\": \"f\", \"1\": \"o\", \"2\": \"o\", a: 2}\n *\n * @example <caption>Every other non-nil value will be treated as an empty object:</caption>\n * _.mergeOwn({a: 2}, 99, NaN) // => {a: 2}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.merge|merge} to merge all enumerable properties\n * @since 0.12.0\n * @function mergeOwn\n * @param {...Object} source\n * @returns {Object}\n */\nexport default partial(_merge, [keys]);\n","import {_pairsFrom} from \"@privates/object\";\nimport keys from \"./keys\";\n\n/**\n * Same as {@link module:lamb.pairs|pairs}, but only the own enumerable properties of the object are\n * taken into account.<br/>\n * See also {@link module:lamb.fromPairs|fromPairs} for the reverse operation.\n * @example <caption>Showing the difference with <code>pairs</code>:</caption>\n * var baseFoo = Object.create({a: 1}, {b: {value: 2, enumerable: true}, z: {value: 5}});\n * var foo = Object.create(baseFoo, {\n *     c: {value: 3, enumerable: true}\n * });\n *\n * _.pairs(foo) // => [[\"c\", 3], [\"b\", 2], [\"a\", 1]]\n * _.ownPairs(foo) // => [[\"c\", 3]]\n *\n * @memberof module:lamb\n * @category Object\n * @function ownPairs\n * @see {@link module:lamb.pairs|pairs}\n * @see {@link module:lamb.fromPairs|fromPairs}\n * @since 0.12.0\n * @param {Object} obj\n * @returns {Array<Array<String, *>>}\n */\nexport default _pairsFrom(keys);\n","import {_valuesFrom} from \"@privates/object\";\nimport keys from \"./keys\";\n\n/**\n * Same as {@link module:lamb.values|values}, but only the own enumerable properties of the object are\n * taken into account.<br/>\n * @example <caption>Showing the difference with <code>values</code>:</caption>\n * var baseFoo = Object.create({a: 1}, {b: {value: 2, enumerable: true}, z: {value: 5}});\n * var foo = Object.create(baseFoo, {\n *     c: {value: 3, enumerable: true}\n * });\n *\n * _.values(foo) // => [3, 2, 1]\n * _.ownValues(foo) // => [3]\n *\n * @memberof module:lamb\n * @category Object\n * @function ownValues\n * @see {@link module:lamb.values|values}\n * @since 0.12.0\n * @param {Object} obj\n * @returns {Array}\n */\nexport default _valuesFrom(keys);\n","import {_pairsFrom} from \"@privates/object\";\nimport enumerables from \"./enumerables\";\n\n/**\n * Converts an object into an array of key / value pairs of its enumerable properties.<br/>\n * See also {@link module:lamb.ownPairs|ownPairs} for picking only the own enumerable\n * properties and {@link module:lamb.fromPairs|fromPairs} for the reverse operation.\n * @example\n * _.pairs({a: 1, b: 2, c: 3}) // => [[\"a\", 1], [\"b\", 2], [\"c\", 3]]\n *\n * @memberof module:lamb\n * @category Object\n * @function pairs\n * @see {@link module:lamb.ownPairs|ownPairs}\n * @see {@link module:lamb.fromPairs|fromPairs}\n * @since 0.8.0\n * @param {Object} obj\n * @returns {Array<Array<String, *>>}\n */\nexport default _pairsFrom(enumerables);\n","import isUndefined from \"@type/isUndefined\";\n\n/**\n * Verifies the existence of a property in an object.\n * @example\n * var user1 = {name: \"john\"};\n *\n * _.has(user1, \"name\") // => true\n * _.has(user1, \"surname\") // => false\n * _.has(user1, \"toString\") // => true\n *\n * var user2 = Object.create(null);\n *\n * // not inherited through the prototype chain\n * _.has(user2, \"toString\") // => false\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.hasKey|hasKey}\n * @see {@link module:lamb.hasOwn|hasOwn}, {@link module:lamb.hasOwnKey|hasOwnKey}\n * @see {@link module:lamb.pathExistsIn|pathExistsIn}, {@link module:lamb.pathExists|pathExists}\n * @since 0.1.0\n * @param {Object} obj\n * @param {String} key\n * @returns {Boolean}\n */\nexport default function has (obj, key) {\n    if (typeof obj !== \"object\" && !isUndefined(obj)) {\n        obj = Object(obj);\n    }\n\n    return key in obj;\n}\n","import has from \"@object_checking/has\";\n\n/**\n * Returns an object containing only the specified properties of the given object.<br/>\n * Non existent properties will be ignored.\n * @example\n * var user = {name: \"john\", surname: \"doe\", age: 30};\n *\n * _.pick(user, [\"name\", \"age\"]) // => {\"name\": \"john\", \"age\": 30};\n * _.pick(user, [\"name\", \"email\"]) // => {\"name\": \"john\"}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.pickIf|pickIf}, {@link module:lamb.pickKeys|pickKeys}\n * @see {@link module:lamb.skip|skip}, {@link module:lamb.skipIf|skipIf}\n * @since 0.1.0\n * @param {Object} source\n * @param {String[]} whitelist\n * @returns {Object}\n */\nexport default function pick (source, whitelist) {\n    var result = {};\n\n    for (var i = 0, len = whitelist.length, key; i < len; i++) {\n        key = whitelist[i];\n\n        if (has(source, key)) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n","import {_makeTypeErrorFor} from \"@privates/type\";\nimport isNil from \"@type/isNil\";\n\n/**\n * Builds a function expecting an object whose enumerable properties will be checked\n * against the given predicate.<br/>\n * The properties satisfying the predicate will be included in the resulting object.\n * @example\n * var user = {name: \"john\", surname: \"doe\", age: 30};\n * var pickIfIsString = _.pickIf(_.isType(\"String\"));\n *\n * pickIfIsString(user) // => {name: \"john\", surname: \"doe\"}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.pick|pick}, {@link module:lamb.pickKeys|pickKeys}\n * @see {@link module:lamb.skip|skip}, {@link module:lamb.skipKeys|skipKeys},\n * {@link module:lamb.skipIf|skipIf}\n * @since 0.1.0\n * @param {ObjectIteratorCallback} predicate\n * @returns {Function}\n */\nexport default function pickIf (predicate) {\n    return function (source) {\n        if (isNil(source)) {\n            throw _makeTypeErrorFor(source, \"object\");\n        }\n\n        var result = {};\n\n        for (var key in source) {\n            if (predicate(source[key], key, source)) {\n                result[key] = source[key];\n            }\n        }\n\n        return result;\n    };\n}\n","import {_curry2} from \"@privates/currying\";\nimport pick from \"./pick\";\n\n/**\n * A curried version of {@link module:lamb.pick|pick}, expecting a whitelist of keys to build\n * a function waiting for the object to act upon.\n * @example\n * var user = {id: 1, name: \"Jane\", surname: \"Doe\", active: false};\n * var getUserInfo = _.pickKeys([\"id\", \"active\"]);\n *\n * getUserInfo(user) // => {id: 1, active: false}\n *\n * @example <caption>A useful composition with <code>mapWith</code>:</caption>\n * var users = [\n *     {id: 1, name: \"Jane\", surname: \"Doe\", active: false},\n *     {id: 2, name: \"John\", surname: \"Doe\", active: true},\n *     {id: 3, name: \"Mario\", surname: \"Rossi\", active: true},\n *     {id: 4, name: \"Paolo\", surname: \"Bianchi\", active: false}\n * ];\n * var select = _.compose(_.mapWith, _.pickKeys);\n * var selectUserInfo = select([\"id\", \"active\"]);\n *\n * selectUserInfo(users) // =>\n * // [\n * //     {id: 1, active: false},\n * //     {id: 2, active: true},\n * //     {id: 3, active: true},\n * //     {id: 4, active: false}\n * // ]\n *\n * @memberof module:lamb\n * @category Object\n * @function pickKeys\n * @see {@link module:lamb.pick|pick}, {@link module:lamb.pickIf|pickIf}\n * @see {@link module:lamb.skip|skip}, {@link module:lamb.skipKeys|skipKeys},\n * {@link module:lamb.skipIf|skipIf}\n * @since 0.35.0\n * @param {String[]} whitelist\n * @returns {Function}\n */\nexport default _curry2(pick, true);\n","import enumerables from \"./enumerables\";\n\n/**\n * Creates a copy of the given object with its enumerable keys renamed as\n * indicated in the provided lookup table.\n * @example\n * var person = {\"firstName\": \"John\", \"lastName\": \"Doe\"};\n * var keysMap = {\"firstName\": \"name\", \"lastName\": \"surname\"};\n *\n * _.rename(person, keysMap) // => {\"name\": \"John\", \"surname\": \"Doe\"}\n *\n * @example <caption>It's safe using it to swap keys:</caption>\n * var keysMap = {\"firstName\": \"lastName\", \"lastName\": \"firstName\"};\n *\n * _.rename(person, keysMap) // => {\"lastName\": \"John\", \"firstName\": \"Doe\"}\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.renameKeys|renameKeys}, {@link module:lamb.renameWith|renameWith}\n * @since 0.26.0\n * @param {Object} source\n * @param {Object} keysMap\n * @returns {Object}\n */\nexport default function rename (source, keysMap) {\n    keysMap = Object(keysMap);\n    var result = {};\n    var oldKeys = enumerables(source);\n\n    for (var prop in keysMap) {\n        if (~oldKeys.indexOf(prop)) {\n            result[keysMap[prop]] = source[prop];\n        }\n    }\n\n    for (var i = 0, len = oldKeys.length, key; i < len; i++) {\n        key = oldKeys[i];\n\n        if (!(key in keysMap || key in result)) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n","import {_curry2} from \"@privates/currying\";\nimport rename from \"./rename\";\n\n/**\n * A curried version of {@link module:lamb.rename|rename} expecting a\n * <code>keysMap</code> to build a function waiting for the object to act upon.\n * @example\n * var persons = [\n *     {\"firstName\": \"John\", \"lastName\": \"Doe\"},\n *     {\"first_name\": \"Mario\", \"last_name\": \"Rossi\"},\n * ];\n * var normalizeKeys = _.renameKeys({\n *     \"firstName\": \"name\",\n *     \"first_name\": \"name\",\n *     \"lastName\": \"surname\",\n *     \"last_name\": \"surname\"\n * });\n *\n * _.map(persons, normalizeKeys) // =>\n * // [\n * //     {\"name\": \"John\", \"surname\": \"Doe\"},\n * //     {\"name\": \"Mario\", \"surname\": \"Rossi\"}\n * // ]\n *\n * @memberof module:lamb\n * @category Object\n * @function renameKeys\n * @see {@link module:lamb.rename|rename}, {@link module:lamb.renameWith|renameWith}\n * @since 0.26.0\n * @param {Object} keysMap\n * @returns {Function}\n */\nexport default _curry2(rename, true);\n","import rename from \"./rename\";\n\n/**\n * Uses the provided function as a <code>keysMap</code> generator and returns\n * a function expecting the object whose keys we want to {@link module:lamb.rename|rename}.\n * @example\n * var person = {\"NAME\": \"John\", \"SURNAME\": \"Doe\"};\n * var arrayToLower = _.mapWith(_.invoker(\"toLowerCase\"));\n * var makeLowerKeysMap = function (source) {\n *     var sourceKeys = _.keys(source);\n *\n *     return _.make(sourceKeys, arrayToLower(sourceKeys));\n * };\n * var lowerKeysFor = _.renameWith(makeLowerKeysMap);\n *\n * lowerKeysFor(person) // => {\"name\": \"John\", \"surname\": \"doe\"};\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.rename|rename}, {@link module:lamb.renameKeys|renameKeys}\n * @since 0.26.0\n * @param {Function} fn\n * @returns {Function}\n */\nexport default function renameWith (fn) {\n    return function (source) {\n        return rename(source, fn(source));\n    };\n}\n","import {_makeTypeErrorFor} from \"@privates/type\";\nimport isNil from \"@type/isNil\";\nimport make from \"./make\";\n\n/**\n * Returns a copy of the source object without the specified properties.\n * @example\n * var user = {name: \"john\", surname: \"doe\", age: 30};\n *\n * _.skip(user, [\"name\", \"age\"]) // => {surname: \"doe\"};\n * _.skip(user, [\"name\", \"email\"]) // => {surname: \"doe\", age: 30};\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.skipKeys|skipKeys}, {@link module:lamb.skipIf|skipIf}\n * @see {@link module:lamb.pick|pick}, {@link module:lamb.pickKeys|pickKeys},\n * {@link module:lamb.pickIf|pickIf}\n * @since 0.1.0\n * @param {Object} source\n * @param {String[]} blacklist\n * @returns {Object}\n */\nexport default function skip (source, blacklist) {\n    if (isNil(source)) {\n        throw _makeTypeErrorFor(source, \"object\");\n    }\n\n    var result = {};\n    var props = make(blacklist, []);\n\n    for (var key in source) {\n        if (!(key in props)) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n","import compose from \"@core/compose\";\nimport not from \"@logic/not\";\nimport pickIf from \"./pickIf\";\n\n/**\n * Builds a function expecting an object whose enumerable properties will be checked\n * against the given predicate.<br/>\n * The properties satisfying the predicate will be omitted in the resulting object.\n * @example\n * var user = {name: \"john\", surname: \"doe\", age: 30};\n * var skipIfIstring = _.skipIf(_.isType(\"String\"));\n *\n * skipIfIstring(user) // => {age: 30}\n *\n * @memberof module:lamb\n * @category Object\n * @function skipIf\n * @see {@link module:lamb.skip|skip}, {@link module:lamb.skipKeys|skipKeys}\n * @see {@link module:lamb.pick|pick}, {@link module:lamb.pickKeys|pickKeys},\n * {@link module:lamb.pickIf|pickIf}\n * @since 0.1.0\n * @param {ObjectIteratorCallback} predicate\n * @returns {Function}\n */\nexport default compose(pickIf, not);\n","import {_curry2} from \"@privates/currying\";\nimport skip from \"./skip\";\n\n/**\n * A curried version of {@link module:lamb.skip|skip}, expecting a blacklist of keys to build\n * a function waiting for the object to act upon.\n * @example\n * var user = {id: 1, name: \"Jane\", surname: \"Doe\", active: false};\n * var getUserInfo = _.skipKeys([\"name\", \"surname\"]);\n *\n * getUserInfo(user) // => {id: 1, active: false}\n *\n * @example <caption>A useful composition with <code>mapWith</code>:</caption>\n * var users = [\n *     {id: 1, name: \"Jane\", surname: \"Doe\", active: false},\n *     {id: 2, name: \"John\", surname: \"Doe\", active: true},\n *     {id: 3, name: \"Mario\", surname: \"Rossi\", active: true},\n *     {id: 4, name: \"Paolo\", surname: \"Bianchi\", active: false}\n * ];\n * var discard = _.compose(_.mapWith, _.skipKeys);\n * var discardNames = discard([\"name\", \"surname\"]);\n *\n * discardNames(users) // =>\n * // [\n * //     {id: 1, active: false},\n * //     {id: 2, active: true},\n * //     {id: 3, active: true},\n * //     {id: 4, active: false}\n * // ]\n *\n * @memberof module:lamb\n * @category Object\n * @function skipKeys\n * @see {@link module:lamb.skip|skip}, {@link module:lamb.skipIf|skipIf}\n * @see {@link module:lamb.pick|pick}, {@link module:lamb.pickKeys|pickKeys},\n * {@link module:lamb.pickIf|pickIf}\n * @since 0.35.0\n * @param {String[]} blacklist\n * @returns {Function}\n */\nexport default _curry2(skip, true);\n","import {_tearFrom} from \"@privates/object\";\nimport enumerables from \"./enumerables\";\n\n/**\n * Tears an object apart by transforming it in an array of two lists: one containing\n * its enumerable keys, the other containing the corresponding values.<br/>\n * Although this \"tearing apart\" may sound as a rather violent process, the source\n * object will be unharmed.\n * @example\n * _.tear({a: 1, b: 2, c: 3}) // => [[\"a\", \"b\", \"c\"], [1, 2, 3]]\n *\n * @memberof module:lamb\n * @category Object\n * @function tear\n * @see {@link module:lamb.tearOwn|tearOwn}\n * @see {@link module:lamb.make|make} for the reverse operation\n * @since 0.8.0\n * @param {Object} obj\n * @returns {Array<String[], Array>}\n */\nexport default _tearFrom(enumerables);\n","import {_tearFrom} from \"@privates/object\";\nimport keys from \"./keys\";\n\n/**\n * Same as {@link module:lamb.tear|tear}, but only the own properties of the object are\n * taken into account.\n * @example <caption>Showing the difference with <code>tear</code>:</caption>\n * var baseFoo = Object.create({a: 1}, {b: {value: 2, enumerable: true}, z: {value: 5}});\n * var foo = Object.create(baseFoo, {\n *     c: {value: 3, enumerable: true}\n * });\n *\n * _.tear(foo) // => [[\"c\", \"b\", \"a\"], [3, 2, 1]]\n * _.tearOwn(foo) // => [[\"c\"], [3]]\n *\n * @memberof module:lamb\n * @category Object\n * @function tearOwn\n * @see {@link module:lamb.tear|tear}\n * @see {@link module:lamb.make|make} for the reverse operation\n * @since 0.12.0\n * @param {Object} obj\n * @returns {Array<String[], Array>}\n */\nexport default _tearFrom(keys);\n","import {_valuesFrom} from \"@privates/object\";\nimport enumerables from \"./enumerables\";\n\n/**\n * Generates an array with the values of the enumerable properties of the given object.<br/>\n * See also {@link module:lamb.ownValues|ownValues} to pick only from the own properties of the object.\n * @example\n * var user = {name: \"john\", surname: \"doe\", age: 30};\n *\n * _.values(user) // => [\"john\", \"doe\", 30]\n *\n * @memberof module:lamb\n * @category Object\n * @function values\n * @see {@link module:lamb.ownValues|ownValues}\n * @since 0.1.0\n * @param {Object} obj\n * @returns {Array}\n */\nexport default _valuesFrom(enumerables);\n","import getPathIn from \"@accessors/getPathIn\";\nimport map from \"@array_basics/map\";\nimport partial from \"@core/partial\";\nimport {_} from \"@privates/placeholders\";\n\n/**\n * Builds a <code>checker</code> function meant to be used with\n * {@link module:lamb.validate|validate}.<br/>\n * Note that the function accepts multiple <code>keyPaths</code> as a means to\n * compare their values. In other words all the received <code>keyPaths</code> will be\n * passed as arguments to the <code>predicate</code> to run the test.<br/>\n * If you want to run the same single property check with multiple properties, you should build\n * multiple <code>checker</code>s and combine them with {@link module:lamb.validate|validate}.\n * @example\n * var user = {\n *     name: \"John\",\n *     surname: \"Doe\",\n *     login: {\n *         username: \"jdoe\",\n *         password: \"abc123\",\n *         passwordConfirm: \"abc123\"\n *     }\n * };\n * var pwdMatch = _.checker(\n *     _.is,\n *     \"Passwords don't match\",\n *     [\"login.password\", \"login.passwordConfirm\"]\n * );\n *\n * pwdMatch(user) // => []\n *\n * var newUser = _.setPathIn(user, \"login.passwordConfirm\", \"avc123\");\n *\n * pwdMatch(newUser) // => [\"Passwords don't match\", [\"login.password\", \"login.passwordConfirm\"]]\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.validate|validate}, {@link module:lamb.validateWith|validateWith}\n * @since 0.1.0\n * @param {Function} predicate - The predicate to test the object properties\n * @param {String} message - The error message\n * @param {String[]} keyPaths - The array of keys, or {@link module:lamb.getPathIn|paths}, to test.\n * @param {String} [pathSeparator=\".\"]\n * @returns {Function} A checker function which returns an error in the form\n * <code>[\"message\", [\"propertyA\", \"propertyB\"]]</code> or an empty array.\n */\nexport default function checker (predicate, message, keyPaths, pathSeparator) {\n    return function (obj) {\n        var getValues = partial(getPathIn, [obj, _, pathSeparator]);\n\n        return predicate.apply(obj, map(keyPaths, getValues)) ? [] : [message, keyPaths];\n    };\n}\n","import {_curry2} from \"@privates/currying\";\nimport has from \"./has\";\n\n/**\n * Curried version of {@link module:lamb.has|has}.<br/>\n * Returns a function expecting the object to check against the given key.\n * @example\n * var user1 = {name: \"john\"};\n * var user2 = {};\n * var hasName = _.hasKey(\"name\");\n *\n * hasName(user1) // => true\n * hasName(user2) // => false\n *\n * @memberof module:lamb\n * @category Object\n * @function hasKey\n * @see {@link module:lamb.has|has}\n * @see {@link module:lamb.hasOwn|hasOwn}, {@link module:lamb.hasOwnKey|hasOwnKey}\n * @see {@link module:lamb.pathExistsIn|pathExistsIn}, {@link module:lamb.pathExists|pathExists}\n * @since 0.1.0\n * @param {String} key\n * @returns {Function}\n */\nexport default _curry2(has, true);\n","import areSVZ from \"@logic/areSVZ\";\nimport isUndefined from \"@type/isUndefined\";\nimport has from \"./has\";\n\n/**\n * Builds a predicate expecting an object to check against the given key / value pair.<br/>\n * The value check is made with the [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}.\n * @example\n * var hasTheCorrectAnswer = _.hasKeyValue(\"answer\", 42);\n *\n * hasTheCorrectAnswer({answer: 2}) // false\n * hasTheCorrectAnswer({answer: 42}) // true\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.hasPathValue|hasPathValue}\n * @since 0.1.0\n * @param {String} key\n * @param {*} value\n * @returns {Function}\n */\nexport default function hasKeyValue (key, value) {\n    return function (obj) {\n        return isUndefined(value) ? has(obj, key) && obj[key] === value : areSVZ(value, obj[key]);\n    };\n}\n","import {_objectProto} from \"@src/utils\";\nimport generic from \"@core/generic\";\n\n/**\n * Verifies if an object has the specified property and that the property isn't inherited through\n * the prototype chain.<br/>\n * @example <caption>Comparison with <code>has</code>:</caption>\n * var user = {name: \"john\"};\n *\n * _.has(user, \"name\") // => true\n * _.has(user, \"surname\") // => false\n * _.has(user, \"toString\") // => true\n *\n * _.hasOwn(user, \"name\") // => true\n * _.hasOwn(user, \"surname\") // => false\n * _.hasOwn(user, \"toString\") // => false\n *\n * @memberof module:lamb\n * @category Object\n * @function hasOwn\n * @see {@link module:lamb.hasOwnKey|hasOwnKey}\n * @see {@link module:lamb.has|has}, {@link module:lamb.hasKey|hasKey}\n * @see {@link module:lamb.pathExistsIn|pathExistsIn}, {@link module:lamb.pathExists|pathExists}\n * @since 0.1.0\n * @param {Object} obj\n * @param {String} key\n * @returns {Boolean}\n */\nexport default generic(_objectProto.hasOwnProperty);\n","import {_curry2} from \"@privates/currying\";\nimport hasOwn from \"./hasOwn\";\n\n/**\n * Curried version of {@link module:lamb.hasOwn|hasOwn}.<br/>\n * Returns a function expecting the object to check against the given key.\n * @example\n * var user = {name: \"john\"};\n * var hasOwnName = _.hasOwnKey(\"name\");\n * var hasOwnToString = _.hasOwnToString(\"toString\");\n *\n * hasOwnName(user) // => true\n * hasOwnToString(user) // => false\n *\n * @memberof module:lamb\n * @category Object\n * @function hasOwnKey\n * @see {@link module:lamb.hasOwn|hasOwn}\n * @see {@link module:lamb.has|has}, {@link module:lamb.hasKey|hasKey}\n * @see {@link module:lamb.pathExistsIn|pathExistsIn}, {@link module:lamb.pathExists|pathExists}\n * @since 0.1.0\n * @param {String} key\n * @returns {Function}\n */\nexport default _curry2(hasOwn, true);\n","import areSVZ from \"@logic/areSVZ\";\nimport {_getPathInfo} from \"@privates/object\";\nimport {_toPathParts} from \"@privates/string\";\n\n/**\n * Builds a predicate to check if the given path exists in an object and holds the desired value.<br/>\n * The value check is made with the [\"SameValueZero\" comparison]{@link module:lamb.areSVZ|areSVZ}.<br/>\n * Note that the function will check even non-enumerable properties.\n * @example\n * var user = {\n *     name: \"John\",\n *     surname: \"Doe\",\n *     personal: {\n *         age: 25,\n *         gender: \"M\"\n *     },\n *     scores: [\n *         {id: 1, value: 10, passed: false},\n *         {id: 2, value: 20, passed: false},\n *         {id: 3, value: 30, passed: true}\n *     ]\n * };\n *\n * var isMale = _.hasPathValue(\"personal.gender\", \"M\");\n * var hasPassedFirstTest = _.hasPathValue(\"scores.0.passed\", true);\n * var hasPassedLastTest = _.hasPathValue(\"scores.-1.passed\", true);\n *\n * isMale(user) // => true\n * hasPassedFirstTest(user) // => false\n * hasPassedLastTest(user) // => true\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.hasKeyValue|hasKeyValue}\n * @since 0.41.0\n * @param {String} path\n * @param {*} value\n * @param {String} [separator=\".\"]\n * @returns {Function}\n */\nexport default function hasPathValue (path, value, separator) {\n    return function (obj) {\n        var pathInfo = _getPathInfo(obj, _toPathParts(path, separator), true);\n\n        return pathInfo.isValid && areSVZ(pathInfo.target, value);\n    };\n}\n","/**\n * Builds a predicate to check if the given key satisfies the desired condition\n * on an object.\n * @example\n * var users = [\n *     {name: \"John\", age: 25},\n *     {name: \"Jane\", age: 15},\n * ];\n * var isAdult = _.keySatisfies(_.isGTE(18), \"age\");\n *\n * isAdult(users[0]) // => true\n * isAdult(users[1]) // => false\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.pathSatisfies|pathSatisfies}\n * @since 0.45.0\n * @param {Function} predicate\n * @param {String} key\n * @returns {Function}\n */\nexport default function keySatisfies (predicate, key) {\n    return function (obj) {\n        return predicate.call(this, obj[key]);\n    };\n}\n","import {_getPathInfo} from \"@privates/object\";\nimport {_toPathParts} from \"@privates/string\";\n\n/**\n * Checks if the provided path exists in the given object.<br/>\n * Note that the function will check even non-enumerable properties.\n * @example\n * var user = {\n *     name: \"John\",\n *     surname: \"Doe\",\n *     address: {\n *         city: \"New York\"\n *     },\n *     scores: [10, 20, 15]\n * };\n *\n * _.pathExistsIn(user, \"address.city\") // => true\n * _.pathExistsIn(user, \"address.country\") // => false\n * _.pathExistsIn(user, \"scores.1\") // => true\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.pathExists|pathExists}\n * @see {@link module:lamb.hasOwn|hasOwn}, {@link module:lamb.hasOwnKey|hasOwnKey}\n * @see {@link module:lamb.has|has}, {@link module:lamb.hasKey|hasKey}\n * @since 0.43.0\n * @param {Object} obj\n * @param {String} path\n * @param {String} [separator=\".\"]\n * @returns {Boolean}\n */\nexport default function pathExistsIn (obj, path, separator) {\n    return _getPathInfo(obj, _toPathParts(path, separator), true).isValid;\n}\n","import {_makePartial3} from \"@privates/partial\";\nimport pathExistsIn from \"./pathExistsIn\";\n\n/**\n * Builds a partial application of {@link module:lamb.pathExistsIn|pathExistsIn} using the given\n * path and the optional separator. The resulting function expects the object to check.<br/>\n * Note that the function will check even non-enumerable properties.\n * @example\n * var user = {\n *     name: \"John\",\n *     surname: \"Doe\",\n *     address: {\n *         city: \"New York\"\n *     },\n *     scores: [10, 20, 15]\n * };\n *\n * var hasCity = _.pathExists(\"address.city\");\n * var hasCountry = _.pathExists(\"address.country\");\n * var hasAtLeastThreeScores = _.pathExists(\"scores.2\");\n *\n * hasCity(user) // => true\n * hasCountry(user) // => false\n * hasAtLeastThreeScores(user) // => true\n *\n * @memberof module:lamb\n * @category Object\n * @function pathExists\n * @see {@link module:lamb.pathExistsIn|pathExistsIn}\n * @see {@link module:lamb.hasOwn|hasOwn}, {@link module:lamb.hasOwnKey|hasOwnKey}\n * @see {@link module:lamb.has|has}, {@link module:lamb.hasKey|hasKey}\n * @since 0.43.0\n * @param {String} path\n * @param {String} [separator=\".\"]\n * @returns {Function}\n */\nexport default _makePartial3(pathExistsIn);\n","import {_getPathInfo} from \"@privates/object\";\nimport {_toPathParts} from \"@privates/string\";\n\n/**\n * Builds a predicate that verifies if a condition is satisfied for the given\n * path in an object.<br/>\n * Like the other \"path functions\" you can use integers in the path, even\n * negative ones, to refer to array-like object indexes, but the priority will\n * be given to existing object keys.\n * @example\n * var user = {\n *     name: \"John\",\n *     performance: {\n *         scores: [1, 5, 10]\n *     }\n * };\n *\n * var gotAnHighScore = _.pathSatisfies(_.contains(10), \"performance.scores\");\n * var hadAGoodStart = _.pathSatisfies(_.isGT(6), \"performance.scores.0\");\n *\n * gotAnHighScore(user) // => true\n * hadAGoodStart(user) // => false\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.keySatisfies|keySatisfies}\n * @since 0.45.0\n * @param {Function} predicate\n * @param {String} path\n * @param {String} [separator=\".\"]\n * @returns {Function}\n */\nexport default function pathSatisfies (predicate, path, separator) {\n    return function (obj) {\n        var pathInfo = _getPathInfo(obj, _toPathParts(path, separator), true);\n\n        return predicate.call(this, pathInfo.target);\n    };\n}\n","import reduce from \"@array_basics/reduce\";\n\n/**\n * Validates an object with the given list of {@link module:lamb.checker|checker} functions.\n * @example\n * var hasContent = function (s) { return s.trim().length > 0; };\n * var userCheckers = [\n *     _.checker(hasContent, \"Name is required\", [\"name\"]),\n *     _.checker(hasContent, \"Surname is required\", [\"surname\"]),\n *     _.checker(_.isGTE(18), \"Must be at least 18 years old\", [\"age\"])\n * ];\n *\n * var user1 = {name: \"john\", surname: \"doe\", age: 30};\n * var user2 = {name: \"jane\", surname: \"\", age: 15};\n *\n * _.validate(user1, userCheckers) // => []\n * _.validate(user2, userCheckers) // =>\n * // [\n * //     [\"Surname is required\", [\"surname\"]],\n * //     [\"Must be at least 18 years old\", [\"age\"]]\n * // ]\n *\n * @memberof module:lamb\n * @category Object\n * @see {@link module:lamb.validateWith|validateWith}\n * @see {@link module:lamb.checker|checker}\n * @since 0.1.0\n * @param {Object} obj\n * @param {Function[]} checkers\n * @returns {Array<Array<String, String[]>>} An array of errors in the form returned by\n * {@link module:lamb.checker|checker}, or an empty array.\n */\nexport default function validate (obj, checkers) {\n    return reduce(checkers, function (errors, _checker) {\n        var result = _checker(obj);\n\n        result.length && errors.push(result);\n\n        return errors;\n    }, []);\n}\n","import {_curry2} from \"@privates/currying\";\nimport validate from \"./validate\";\n\n/**\n * A curried version of {@link module:lamb.validate|validate} accepting a list of\n * {@link module:lamb.checker|checkers} and returning a function expecting the object to validate.\n * @example\n * var hasContent = function (s) { return s.trim().length > 0; };\n * var userCheckers = [\n *     _.checker(hasContent, \"Name is required\", [\"name\"]),\n *     _.checker(hasContent, \"Surname is required\", [\"surname\"]),\n *     _.checker(_.isGTE(18), \"Must be at least 18 years old\", [\"age\"])\n * ];\n * var validateUser = _.validateWith(userCheckers);\n *\n * var user1 = {name: \"john\", surname: \"doe\", age: 30};\n * var user2 = {name: \"jane\", surname: \"\", age: 15};\n *\n * validateUser(user1) // => []\n * validateUser(user2) // =>\n * // [\n * //     [\"Surname is required\", [\"surname\"]],\n * //     [\"Must be at least 18 years old\", [\"age\"]]\n * // ]\n *\n * @memberof module:lamb\n * @category Object\n * @function validateWith\n * @see {@link module:lamb.validate|validate}\n * @see {@link module:lamb.checker|checker}\n * @since 0.1.0\n * @param {Function[]} checkers\n * @returns {Function}\n */\nexport default _curry2(validate, true);\n","/**\n * Accepts a list of sorting criteria with at least one element\n * and builds a function that compares two values with such criteria.\n * @private\n * @param {Sorter[]} criteria\n * @returns {Function}\n */\nexport default function _compareWith (criteria) {\n    return function (a, b) {\n        var len = criteria.length;\n        var criterion = criteria[0];\n        var result = criterion.compare(a.value, b.value);\n\n        for (var i = 1; result === 0 && i < len; i++) {\n            criterion = criteria[i];\n            result = criterion.compare(a.value, b.value);\n        }\n\n        if (result === 0) {\n            result = a.index - b.index;\n        }\n\n        return criterion.isDescending ? -result : result;\n    };\n}\n","import areSVZ from \"@logic/areSVZ\";\n\n/**\n * The default comparer for sorting functions.<br/>\n * If the given values are of different types they\n * will be both converted to strings.<br/>\n * Uses the SameValueZero comparison.\n * @private\n * @param {*} a\n * @param {*} b\n * @returns {Number} -1 | 0 | 1\n */\nexport default function _comparer (a, b) {\n    var result = 0;\n\n    if (typeof a !== typeof b) {\n        a = String(a);\n        b = String(b);\n    }\n\n    /* eslint-disable no-self-compare */\n\n    if (!areSVZ(a, b)) {\n        if (a > b || a !== a) {\n            result = 1;\n        } else if (a < b || b !== b) {\n            result = -1;\n        }\n    }\n\n    /* eslint-enable no-self-compare */\n\n    return result;\n}\n","import map from \"@array_basics/map\";\nimport identity from \"@core/identity\";\nimport _comparer from \"./comparison/_comparer\";\n\n/**\n * Builds a list of sorting criteria from a list of sorter functions. Returns a list containing\n * a single default sorting criterion if the sorter list is empty.\n * @private\n * @param {Function[]} sorters\n * @returns {Sorter[]}\n */\nexport function _makeCriteria (sorters) {\n    return sorters.length ? map(sorters, _makeCriterion) : [_sorter()];\n}\n\n/**\n * Converts a sorting function to a sorting criterion if necessary.\n * @private\n * @param {Function} criterion\n * @returns {Sorter}\n */\nfunction _makeCriterion (criterion) {\n    return criterion && typeof criterion.compare === \"function\" ? criterion : _sorter(criterion);\n}\n\n/**\n * Builds a sorting criterion. If the comparer function is missing, the default\n * comparer will be used instead.\n * @private\n * @param {Function} reader\n * @param {Boolean} isDescending\n * @param {Function} [comparer]\n * @returns {Sorter}\n */\nexport function _sorter (reader, isDescending, comparer) {\n    if (typeof reader !== \"function\" || reader === identity) {\n        reader = null;\n    }\n\n    if (typeof comparer !== \"function\") {\n        comparer = _comparer;\n    }\n\n    return {\n        isDescending: isDescending === true,\n        compare: function (a, b) {\n            if (reader) {\n                a = reader(a);\n                b = reader(b);\n            }\n\n            return comparer(a, b);\n        }\n    };\n}\n","import _argsTail from \"@privates/args/_argsTail\";\nimport _toArrayLength from \"@privates/array/_toArrayLength\";\nimport _compareWith from \"@privates/comparison/_compareWith\";\nimport {_makeCriteria} from \"@privates/sorting\";\n\n/**\n * Returns a [stably]{@link https://en.wikipedia.org/wiki/Sorting_algorithm#Stability} sorted\n * copy of an array-like object using the given criteria.<br/>\n * Sorting criteria are built using Lamb's {@link module:lamb.sorter|sorter} function, but you\n * can also pass simple \"reader\" functions and default ascending sorters will be built for you.<br/>\n * A \"reader\" is a function that evaluates the array element and supplies the value to be used\n * in the comparison.<br/>\n * Please note that if the arguments received by the default comparer aren't of the same type,\n * they will be compared as strings.\n *\n * @example <caption>Stable sort:</caption>\n * var persons = [\n *     {\"name\": \"John\", \"surname\" :\"Doe\"},\n *     {\"name\": \"Mario\", \"surname\": \"Rossi\"},\n *     {\"name\": \"John\", \"surname\" :\"Moe\"},\n *     {\"name\": \"Jane\", \"surname\": \"Foe\"}\n * ];\n *\n * var personsByName = _.sort(persons, _.getKey(\"name\"));\n *\n * // personsByName holds:\n * // [\n * //     {\"name\": \"Jane\", \"surname\": \"Foe\"},\n * //     {\"name\": \"John\", \"surname\" :\"Doe\"},\n * //     {\"name\": \"John\", \"surname\" :\"Moe\"},\n * //     {\"name\": \"Mario\", \"surname\": \"Rossi\"}\n * // ]\n *\n * @example <caption>Stable multi-sort:</caption>\n * var personsByNameAscSurnameDesc = _.sort(\n *     persons,\n *     _.getKey(\"name\"),\n *     _.sorterDesc(_.getKey(\"surname\"))\n * );\n *\n * // personsByNameAscSurnameDesc holds:\n * // [\n * //     {\"name\": \"Jane\", \"surname\": \"Foe\"},\n * //     {\"name\": \"John\", \"surname\" :\"Moe\"},\n * //     {\"name\": \"John\", \"surname\" :\"Doe\"},\n * //     {\"name\": \"Mario\", \"surname\": \"Rossi\"}\n * // ]\n *\n * @example <caption>Using custom comparers:</caption>\n * var localeSorter = new Intl.Collator(\"it\");\n * var chars = [\"a\", \"è\", \"à\", \"é\", \"c\", \"b\", \"e\"];\n *\n * _.sort(chars, localeSorter) // => [\"a\", \"à\", \"b\", \"c\", \"e\", \"é\", \"è\"]\n *\n * var localeSorterDesc = _.sorterDesc(_.identity, localeSorter.compare);\n *\n * _.sort(chars, localeSorterDesc) // => [\"è\", \"é\", \"e\", \"c\", \"b\", \"à\", \"a\"]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.sortWith|sortWith}\n * @see {@link module:lamb.sorter|sorter}, {@link module:lamb.sorterDesc|sorterDesc}\n * @since 0.15.0\n * @param {ArrayLike} arrayLike\n * @param {...(Sorter|Function)} [sorter={@link module:lamb.sorter|sorter()}]\n * @returns {Array}\n */\nexport default function sort (arrayLike) {\n    var criteria = _makeCriteria(_argsTail.apply(null, arguments));\n    var len = _toArrayLength(arrayLike.length);\n    var result = Array(len);\n\n    for (var i = 0; i < len; i++) {\n        result[i] = {value: arrayLike[i], index: i};\n    }\n\n    result.sort(_compareWith(criteria));\n\n    for (i = 0; i < len; i++) {\n        result[i] = result[i].value;\n    }\n\n    return result;\n}\n","import list from \"@array_basics/list\";\nimport sort from \"./sort\";\n\n/**\n * Builds a partial application of {@link module:lamb.sort|sort} using the provided criteria.\n * The returned function expects the array-like object to sort.\n * As usual, sorting criteria are built using Lamb's {@link module:lamb.sorter|sorter} function,\n * but you can also pass simple \"reader\" functions and default ascending sorters will be built.<br/>\n * A \"reader\" is a function that evaluates the array element and supplies the value to be used in\n * the comparison.<br/>\n * See {@link module:lamb.sort|sort} for more examples.\n *\n * @example\n * var sortAsNumbers = _.sortWith(parseFloat);\n * var weights = [\"2 Kg\", \"10 Kg\", \"1 Kg\", \"7 Kg\"];\n *\n * sortAsNumbers(weights) // => [\"1 Kg\", \"2 Kg\", \"7 Kg\", \"10 Kg\"]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.sort|sort}\n * @see {@link module:lamb.sorter|sorter}, {@link module:lamb.sorterDesc|sorterDesc}\n * @since 0.15.0\n * @param {...(Sorter|Function)} [sorter={@link module:lamb.sorter|sorter()}]\n * @returns {Function}\n */\nexport default function sortWith () {\n    var sorters = list.apply(null, arguments);\n\n    return function (arrayLike) {\n        return sort.apply(null, [arrayLike].concat(sorters));\n    };\n}\n","/**\n * Establishes at which index an element should be inserted in a sorted array to respect\n * the array order. Needs the comparer used to sort the array.\n * @private\n * @param {Array} array\n * @param {*} element\n * @param {Function} comparer\n * @param {Number} start\n * @param {Number} end\n * @returns {Number}\n */\nexport default function _getInsertionIndex (array, element, comparer, start, end) {\n    if (array.length === 0) {\n        return 0;\n    }\n\n    var pivot = (start + end) >> 1;\n    var result = comparer(\n        {value: element, index: pivot},\n        {value: array[pivot], index: pivot}\n    );\n\n    if (end - start <= 1) {\n        return result < 0 ? pivot : pivot + 1;\n    } else if (result < 0) {\n        return _getInsertionIndex(array, element, comparer, start, pivot);\n    } else if (result === 0) {\n        return pivot + 1;\n    } else {\n        return _getInsertionIndex(array, element, comparer, pivot, end);\n    }\n}\n","import _getInsertionIndex from \"@privates/array/_getInsertionIndex\";\nimport _compareWith from \"@privates/comparison/_compareWith\";\nimport {_makeCriteria} from \"@privates/sorting\";\nimport slice from \"@array_basics/slice\";\n\n/**\n * Inserts an element in a copy of a sorted array respecting the sort order.\n * @example <caption>With simple values:</caption>\n * _.sortedInsert([], 1) // => [1]\n * _.sortedInsert([2, 4, 6], 5) // => [2, 4, 5, 6]\n * _.sortedInsert([4, 2, 1], 3, _.sorterDesc()) // => [4, 3, 2, 1]\n *\n * @example <caption>With complex values:</caption>\n * var persons = [\n *     {\"name\": \"jane\", \"surname\": \"doe\"},\n *     {\"name\": \"John\", \"surname\": \"Doe\"},\n *     {\"name\": \"Mario\", \"surname\": \"Rossi\"}\n * ];\n *\n * var getLowerCaseName = _.compose(\n *     _.invoker(\"toLowerCase\"),\n *     _.getKey(\"name\")\n * );\n *\n * var result = _.sortedInsert(\n *     persons,\n *     {\"name\": \"marco\", \"surname\": \"Rossi\"},\n *     getLowerCaseName\n * );\n *\n * // `result` holds:\n * // [\n * //     {\"name\": \"jane\", \"surname\": \"doe\"},\n * //     {\"name\": \"John\", \"surname\": \"Doe\"},\n * //     {\"name\": \"marco\", \"surname\": \"Rossi\"},\n * //     {\"name\": \"Mario\", \"surname\": \"Rossi\"}\n * // ]\n *\n * @memberof module:lamb\n * @category Array\n * @see {@link module:lamb.sort|sort}, {@link module:lamb.sortWith|sortWith}\n * @see {@link module:lamb.sorter|sorter}, {@link module:lamb.sorterDesc|sorterDesc}\n * @see {@link module:lamb.insert|insert}, {@link module:lamb.insertAt|insertAt} to insert the element\n * at a specific index\n * @since 0.27.0\n * @param {ArrayLike} arrayLike\n * @param {*} element\n * @param {...(Sorter|Function)} [sorter={@link module:lamb.sorter|sorter()}] - The sorting criteria\n * used to sort the array.\n * @returns {Array}\n */\nexport default function sortedInsert (arrayLike, element) {\n    var result = slice(arrayLike, 0, arrayLike.length);\n\n    if (arguments.length === 1) {\n        return result;\n    }\n\n    var len = arguments.length - 2;\n    var sorters = Array(len);\n\n    for (var i = 0; i < len; i++) {\n        sorters[i] = arguments[i + 2];\n    }\n\n    var criteria = _makeCriteria(sorters);\n    var idx = _getInsertionIndex(result, element, _compareWith(criteria), 0, result.length);\n\n    result.splice(idx, 0, element);\n\n    return result;\n}\n","import partial from \"@core/partial\";\nimport {_sorter} from \"@privates/sorting\";\nimport {_} from \"@privates/placeholders\";\n\n/**\n * Creates an ascending sort criterion with the provided <code>reader</code> and\n * <code>comparer</code>.<br/>\n * See {@link module:lamb.sort|sort} for various examples.\n *\n * @memberof module:lamb\n * @category Array\n * @function sorter\n * @see {@link module:lamb.sortedInsert|sortedInsert}\n * @see {@link module:lamb.sort|sort}, {@link module:lamb.sortWith|sortWith}\n * @see {@link module:lamb.sorterDesc|sorterDesc}\n * @since 0.1.0\n * @param {Function} [reader={@link module:lamb.identity|identity}] A function meant to generate a\n * simple value from a complex one. The function should evaluate the array element and supply the\n * value to be passed to the comparer.\n * @param {Function} [comparer] An optional custom comparer function.\n * @returns {Sorter}\n */\nexport default partial(_sorter, [_, false, _]);\n","import partial from \"@core/partial\";\nimport {_sorter} from \"@privates/sorting\";\nimport {_} from \"@privates/placeholders\";\n\n/**\n * Creates a descending sort criterion with the provided <code>reader</code> and\n * <code>comparer</code>.<br/>\n * See {@link module:lamb.sort|sort} for various examples.\n *\n * @memberof module:lamb\n * @category Array\n * @function sorterDesc\n * @see {@link module:lamb.sortedInsert|sortedInsert}\n * @see {@link module:lamb.sort|sort}, {@link module:lamb.sortWith|sortWith}\n * @see {@link module:lamb.sorter|sorter}\n * @since 0.15.0\n * @param {Function} [reader={@link module:lamb.identity|identity}] A function meant to generate a\n * simple value from a complex one. The function should evaluate the array element and supply the\n * value to be passed to the comparer.\n * @param {Function} [comparer] An optional custom comparer function.\n * @returns {Sorter}\n */\nexport default partial(_sorter, [_, true, _]);\n","import {_getPadding} from \"@privates/string\";\n\n/**\n * Pads a string to the desired length with the given char starting from the beginning of the string.\n * @example\n * _.padLeft(\"foo\", \"-\", 0) // => \"foo\"\n * _.padLeft(\"foo\", \"-\", -1) // => \"foo\"\n * _.padLeft(\"foo\", \"-\", 5) // => \"--foo\"\n * _.padLeft(\"foo\", \"-\", 3) // => \"foo\"\n * _.padLeft(\"foo\", \"ab\", 7) // => \"aaaafoo\"\n * _.padLeft(\"foo\", \"\", 5) // => \"foo\"\n * _.padLeft(\"\", \"-\", 5) // => \"-----\"\n *\n * @memberof module:lamb\n * @category String\n * @see {@link module:lamb.padRight|padRight}\n * @since 0.1.0\n * @param {String} source\n * @param {String} char - The padding char. If a string is passed only the first char is used.\n * @param {Number} len\n * @returns {String}\n */\nexport default function padLeft (source, char, len) {\n    return _getPadding(source, char, len) + source;\n}\n","import {_getPadding} from \"@privates/string\";\n\n/**\n * Pads a string to the desired length with the given char starting from the end of the string.\n * @example\n * _.padRight(\"foo\", \"-\", 0) // => \"foo\"\n * _.padRight(\"foo\", \"-\", -1) // => \"foo\"\n * _.padRight(\"foo\", \"-\", 5) // => \"foo--\"\n * _.padRight(\"foo\", \"-\", 3) // => \"foo\"\n * _.padRight(\"foo\", \"ab\", 7) // => \"fooaaaa\"\n * _.padRight(\"foo\", \"\", 5) // => \"foo\"\n * _.padRight(\"\", \"-\", 5) // => \"-----\"\n *\n * @memberof module:lamb\n * @category String\n * @see {@link module:lamb.padLeft|padLeft}\n * @since 0.1.0\n * @param {String} source\n * @param {String} char - The padding char. If a string is passed only the first char is used.\n * @param {Number} len\n * @returns {String}\n */\nexport default function padRight (source, char, len) {\n    return source + _getPadding(source, char, len);\n}\n","import isNil from \"@type/isNil\";\nimport {_makeTypeErrorFor} from \"@privates/type\";\nimport {_repeat} from \"@privates/string\";\n\n/**\n * Builds a new string by repeating the source string the desired amount of times.<br/>\n * Note that unlike the current ES6 proposal for\n * [String.prototype.repeat]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat},\n * this function doesn't throw a RangeError if <code>times</code> is negative,\n * but returns an empty string instead.\n * @example\n * _.repeat(\"Hello\", -1) // => \"\"\n * _.repeat(\"Hello\", 1) // => \"Hello\"\n * _.repeat(\"Hello\", 3) // => \"HelloHelloHello\"\n *\n * @memberof module:lamb\n * @category String\n * @since 0.1.0\n * @param {String} source\n * @param {Number} times\n * @returns {String}\n */\nexport default function repeat (source, times) {\n    if (isNil(source)) {\n        throw _makeTypeErrorFor(source, \"string\");\n    }\n\n    return _repeat(source, Math.floor(times));\n}\n","import {_search} from \"@privates/string\";\n\n/**\n * Builds a predicate expecting a string to test against the given regular expression pattern.\n * @example\n * var hasNumbersOnly = _.testWith(/^\\d+$/);\n *\n * hasNumbersOnly(\"123\") // => true\n * hasNumbersOnly(\"123 Kg\") // => false\n *\n * @memberof module:lamb\n * @category String\n * @since 0.1.0\n * @param {RegExp} pattern\n * @returns {Function}\n */\nexport default function testWith (pattern) {\n    return function (s) {\n        return _search(s, pattern) !== -1;\n    };\n}\n","/**\n * Accepts a constructor and builds a predicate expecting an object,\n * which will be tested to verify whether the prototype of the constructor\n * is in its prototype chain.<br/>\n * Wraps in a convenient way the native\n * [instanceof]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof} operator.\n * @example\n * function SomeObjA () {}\n *\n * var a = new SomeObjA();\n * var sObj = new String(\"foo\");\n * var s = \"foo\";\n *\n * _.isInstanceOf(Object)(a) // => true\n * _.isInstanceOf(SomeObjA)(a) // => true\n *\n * _.isInstanceOf(Object)(sObj) // => true\n * _.isInstanceOf(String)(sObj) // => true\n *\n * _.isInstanceOf(Object)(s) // => false\n * _.isInstanceOf(String)(s) // => false\n *\n * @memberof module:lamb\n * @category Type\n * @see {@link module:lamb.isType|isType}\n * @since 0.47.0\n * @param {*} constructor\n * @returns {Function}\n */\nexport default function isInstanceOf (constructor) {\n    return function (obj) {\n        return obj instanceof constructor;\n    };\n}\n","import type from \"./type\";\n\n/**\n * Builds a predicate that expects a value to check against the specified type.\n * @example\n * var isString = _.isType(\"String\");\n *\n * isString(\"Hello\") // => true\n * isString(new String(\"Hi\")) // => true\n *\n * @memberof module:lamb\n * @category Type\n * @see {@link module:lamb.type|type}\n * @since 0.1.0\n * @param {String} typeName\n * @returns {Function}\n */\nexport default function isType (typeName) {\n    return function (value) {\n        return type(value) === typeName;\n    };\n}\n","// accessors\n\nimport getAt from \"@accessors/getAt\";\nimport getIn from \"@accessors/getIn\";\nimport getIndex from \"@accessors/getIndex\";\nimport getKey from \"@accessors/getKey\";\nimport getPath from \"@accessors/getPath\";\nimport getPathIn from \"@accessors/getPathIn\";\nimport head from \"@accessors/head\";\nimport last from \"@accessors/last\";\nimport setAt from \"@accessors/setAt\";\nimport setIn from \"@accessors/setIn\";\nimport setIndex from \"@accessors/setIndex\";\nimport setKey from \"@accessors/setKey\";\nimport setPath from \"@accessors/setPath\";\nimport setPathIn from \"@accessors/setPathIn\";\nimport updateAt from \"@accessors/updateAt\";\nimport updateIn from \"@accessors/updateIn\";\nimport updateIndex from \"@accessors/updateIndex\";\nimport updateKey from \"@accessors/updateKey\";\nimport updatePath from \"@accessors/updatePath\";\nimport updatePathIn from \"@accessors/updatePathIn\";\n\n// array\n\nimport append from \"@array/append\";\nimport appendTo from \"@array/appendTo\";\nimport difference from \"@array/difference\";\nimport drop from \"@array/drop\";\nimport dropFrom from \"@array/dropFrom\";\nimport dropWhile from \"@array/dropWhile\";\nimport flatMap from \"@array/flatMap\";\nimport flatMapWith from \"@array/flatMapWith\";\nimport flatten from \"@array/flatten\";\nimport init from \"@array/init\";\nimport insert from \"@array/insert\";\nimport insertAt from \"@array/insertAt\";\nimport intersection from \"@array/intersection\";\nimport partition from \"@array/partition\";\nimport partitionWith from \"@array/partitionWith\";\nimport pluck from \"@array/pluck\";\nimport pluckKey from \"@array/pluckKey\";\nimport pull from \"@array/pull\";\nimport pullFrom from \"@array/pullFrom\";\nimport shallowFlatten from \"@array/shallowFlatten\";\nimport tail from \"@array/tail\";\nimport take from \"@array/take\";\nimport takeFrom from \"@array/takeFrom\";\nimport takeWhile from \"@array/takeWhile\";\nimport transpose from \"@array/transpose\";\nimport union from \"@array/union\";\nimport unionBy from \"@array/unionBy\";\nimport uniques from \"@array/uniques\";\nimport uniquesBy from \"@array/uniquesBy\";\nimport zip from \"@array/zip\";\nimport zipWithIndex from \"@array/zipWithIndex\";\n\n// array_basics\n\nimport contains from \"@array_basics/contains\";\nimport every from \"@array_basics/every\";\nimport everyIn from \"@array_basics/everyIn\";\nimport filter from \"@array_basics/filter\";\nimport filterWith from \"@array_basics/filterWith\";\nimport find from \"@array_basics/find\";\nimport findIndex from \"@array_basics/findIndex\";\nimport findIndexWhere from \"@array_basics/findIndexWhere\";\nimport findWhere from \"@array_basics/findWhere\";\nimport forEach from \"@array_basics/forEach\";\nimport isIn from \"@array_basics/isIn\";\nimport list from \"@array_basics/list\";\nimport map from \"@array_basics/map\";\nimport mapWith from \"@array_basics/mapWith\";\nimport reduce from \"@array_basics/reduce\";\nimport reduceRight from \"@array_basics/reduceRight\";\nimport reduceRightWith from \"@array_basics/reduceRightWith\";\nimport reduceWith from \"@array_basics/reduceWith\";\nimport reverse from \"@array_basics/reverse\";\nimport slice from \"@array_basics/slice\";\nimport sliceAt from \"@array_basics/sliceAt\";\nimport some from \"@array_basics/some\";\nimport someIn from \"@array_basics/someIn\";\n\n// core\n\nimport always from \"@core/always\";\nimport compose from \"@core/compose\";\nimport generic from \"@core/generic\";\nimport identity from \"@core/identity\";\nimport partial from \"@core/partial\";\nimport partialRight from \"@core/partialRight\";\n\n// function\n\nimport application from \"@function/application\";\nimport apply from \"@function/apply\";\nimport applyTo from \"@function/applyTo\";\nimport aritize from \"@function/aritize\";\nimport asPartial from \"@function/asPartial\";\nimport binary from \"@function/binary\";\nimport collect from \"@function/collect\";\nimport curry from \"@function/curry\";\nimport curryRight from \"@function/curryRight\";\nimport curryable from \"@function/curryable\";\nimport curryableRight from \"@function/curryableRight\";\nimport debounce from \"@function/debounce\";\nimport flip from \"@function/flip\";\nimport getArgAt from \"@function/getArgAt\";\nimport invoker from \"@function/invoker\";\nimport invokerOn from \"@function/invokerOn\";\nimport mapArgs from \"@function/mapArgs\";\nimport pipe from \"@function/pipe\";\nimport tapArgs from \"@function/tapArgs\";\nimport throttle from \"@function/throttle\";\nimport unary from \"@function/unary\";\n\n// grouping\n\nimport count from \"@grouping/count\";\nimport countBy from \"@grouping/countBy\";\nimport group from \"@grouping/group\";\nimport groupBy from \"@grouping/groupBy\";\nimport index from \"@grouping/index\";\nimport indexBy from \"@grouping/indexBy\";\n\n// logic\n\nimport adapter from \"@logic/adapter\";\nimport allOf from \"@logic/allOf\";\nimport anyOf from \"@logic/anyOf\";\nimport areSVZ from \"@logic/areSVZ\";\nimport areSame from \"@logic/areSame\";\nimport case_ from \"@logic/case\";\nimport condition from \"@logic/condition\";\nimport gt from \"@logic/gt\";\nimport gte from \"@logic/gte\";\nimport is from \"@logic/is\";\nimport isGT from \"@logic/isGT\";\nimport isGTE from \"@logic/isGTE\";\nimport isLT from \"@logic/isLT\";\nimport isLTE from \"@logic/isLTE\";\nimport isSVZ from \"@logic/isSVZ\";\nimport lt from \"@logic/lt\";\nimport lte from \"@logic/lte\";\nimport not from \"@logic/not\";\nimport unless from \"@logic/unless\";\nimport when from \"@logic/when\";\n\n// math\n\nimport add from \"@math/add\";\nimport clamp from \"@math/clamp\";\nimport clampWithin from \"@math/clampWithin\";\nimport deduct from \"@math/deduct\";\nimport divide from \"@math/divide\";\nimport divideBy from \"@math/divideBy\";\nimport generate from \"@math/generate\";\nimport isFinite from \"@math/isFinite\";\nimport isInteger from \"@math/isInteger\";\nimport isSafeInteger from \"@math/isSafeInteger\";\nimport modulo from \"@math/modulo\";\nimport multiply from \"@math/multiply\";\nimport multiplyBy from \"@math/multiplyBy\";\nimport randomInt from \"@math/randomInt\";\nimport range from \"@math/range\";\nimport remainder from \"@math/remainder\";\nimport subtract from \"@math/subtract\";\nimport sum from \"@math/sum\";\n\n// object\n\nimport enumerables from \"@object/enumerables\";\nimport fromPairs from \"@object/fromPairs\";\nimport immutable from \"@object/immutable\";\nimport keys from \"@object/keys\";\nimport make from \"@object/make\";\nimport mapValues from \"@object/mapValues\";\nimport mapValuesWith from \"@object/mapValuesWith\";\nimport merge from \"@object/merge\";\nimport mergeOwn from \"@object/mergeOwn\";\nimport ownPairs from \"@object/ownPairs\";\nimport ownValues from \"@object/ownValues\";\nimport pairs from \"@object/pairs\";\nimport pick from \"@object/pick\";\nimport pickIf from \"@object/pickIf\";\nimport pickKeys from \"@object/pickKeys\";\nimport rename from \"@object/rename\";\nimport renameKeys from \"@object/renameKeys\";\nimport renameWith from \"@object/renameWith\";\nimport skip from \"@object/skip\";\nimport skipIf from \"@object/skipIf\";\nimport skipKeys from \"@object/skipKeys\";\nimport tear from \"@object/tear\";\nimport tearOwn from \"@object/tearOwn\";\nimport values from \"@object/values\";\n\n// object_checking\n\nimport checker from \"@object_checking/checker\";\nimport has from \"@object_checking/has\";\nimport hasKey from \"@object_checking/hasKey\";\nimport hasKeyValue from \"@object_checking/hasKeyValue\";\nimport hasOwn from \"@object_checking/hasOwn\";\nimport hasOwnKey from \"@object_checking/hasOwnKey\";\nimport hasPathValue from \"@object_checking/hasPathValue\";\nimport keySatisfies from \"@object_checking/keySatisfies\";\nimport pathExists from \"@object_checking/pathExists\";\nimport pathExistsIn from \"@object_checking/pathExistsIn\";\nimport pathSatisfies from \"@object_checking/pathSatisfies\";\nimport validate from \"@object_checking/validate\";\nimport validateWith from \"@object_checking/validateWith\";\n\n// sort\n\nimport sort from \"@sort/sort\";\nimport sortWith from \"@sort/sortWith\";\nimport sortedInsert from \"@sort/sortedInsert\";\nimport sorter from \"@sort/sorter\";\nimport sorterDesc from \"@sort/sorterDesc\";\n\n// string\n\nimport padLeft from \"@string/padLeft\";\nimport padRight from \"@string/padRight\";\nimport repeat from \"@string/repeat\";\nimport testWith from \"@string/testWith\";\n\n// type\n\nimport isInstanceOf from \"@type/isInstanceOf\";\nimport isNil from \"@type/isNil\";\nimport isNull from \"@type/isNull\";\nimport isType from \"@type/isType\";\nimport isUndefined from \"@type/isUndefined\";\nimport type from \"@type/type\";\n\n// lamb\nimport lamb from \"@src/lamb\";\n\n// accessors\n\nlamb.getAt = getAt;\nlamb.getIn = getIn;\nlamb.getIndex = getIndex;\nlamb.getKey = getKey;\nlamb.getPath = getPath;\nlamb.getPathIn = getPathIn;\nlamb.head = head;\nlamb.last = last;\nlamb.setAt = setAt;\nlamb.setIn = setIn;\nlamb.setIndex = setIndex;\nlamb.setKey = setKey;\nlamb.setPath = setPath;\nlamb.setPathIn = setPathIn;\nlamb.updateAt = updateAt;\nlamb.updateIn = updateIn;\nlamb.updateIndex = updateIndex;\nlamb.updateKey = updateKey;\nlamb.updatePath = updatePath;\nlamb.updatePathIn = updatePathIn;\n\n// array\n\nlamb.append = append;\nlamb.appendTo = appendTo;\nlamb.difference = difference;\nlamb.drop = drop;\nlamb.dropFrom = dropFrom;\nlamb.dropWhile = dropWhile;\nlamb.flatMap = flatMap;\nlamb.flatMapWith = flatMapWith;\nlamb.flatten = flatten;\nlamb.init = init;\nlamb.insert = insert;\nlamb.insertAt = insertAt;\nlamb.intersection = intersection;\nlamb.partition = partition;\nlamb.partitionWith = partitionWith;\nlamb.pluck = pluck;\nlamb.pluckKey = pluckKey;\nlamb.pull = pull;\nlamb.pullFrom = pullFrom;\nlamb.shallowFlatten = shallowFlatten;\nlamb.tail = tail;\nlamb.take = take;\nlamb.takeFrom = takeFrom;\nlamb.takeWhile = takeWhile;\nlamb.transpose = transpose;\nlamb.union = union;\nlamb.unionBy = unionBy;\nlamb.uniques = uniques;\nlamb.uniquesBy = uniquesBy;\nlamb.zip = zip;\nlamb.zipWithIndex = zipWithIndex;\n\n// array_basics\n\nlamb.contains = contains;\nlamb.every = every;\nlamb.everyIn = everyIn;\nlamb.filter = filter;\nlamb.filterWith = filterWith;\nlamb.find = find;\nlamb.findIndex = findIndex;\nlamb.findIndexWhere = findIndexWhere;\nlamb.findWhere = findWhere;\nlamb.forEach = forEach;\nlamb.isIn = isIn;\nlamb.list = list;\nlamb.map = map;\nlamb.mapWith = mapWith;\nlamb.reduce = reduce;\nlamb.reduceRight = reduceRight;\nlamb.reduceRightWith = reduceRightWith;\nlamb.reduceWith = reduceWith;\nlamb.reverse = reverse;\nlamb.slice = slice;\nlamb.sliceAt = sliceAt;\nlamb.some = some;\nlamb.someIn = someIn;\n\n// core\n\nlamb.always = always;\nlamb.compose = compose;\nlamb.generic = generic;\nlamb.identity = identity;\nlamb.partial = partial;\nlamb.partialRight = partialRight;\n\n// function\n\nlamb.application = application;\nlamb.apply = apply;\nlamb.applyTo = applyTo;\nlamb.aritize = aritize;\nlamb.asPartial = asPartial;\nlamb.binary = binary;\nlamb.collect = collect;\nlamb.curry = curry;\nlamb.curryRight = curryRight;\nlamb.curryable = curryable;\nlamb.curryableRight = curryableRight;\nlamb.debounce = debounce;\nlamb.flip = flip;\nlamb.getArgAt = getArgAt;\nlamb.invoker = invoker;\nlamb.invokerOn = invokerOn;\nlamb.mapArgs = mapArgs;\nlamb.pipe = pipe;\nlamb.tapArgs = tapArgs;\nlamb.throttle = throttle;\nlamb.unary = unary;\n\n// grouping\n\nlamb.count = count;\nlamb.countBy = countBy;\nlamb.group = group;\nlamb.groupBy = groupBy;\nlamb.index = index;\nlamb.indexBy = indexBy;\n\n// logic\n\nlamb.adapter = adapter;\nlamb.allOf = allOf;\nlamb.anyOf = anyOf;\nlamb.areSVZ = areSVZ;\nlamb.areSame = areSame;\nlamb.case = case_;\nlamb.condition = condition;\nlamb.gt = gt;\nlamb.gte = gte;\nlamb.is = is;\nlamb.isGT = isGT;\nlamb.isGTE = isGTE;\nlamb.isLT = isLT;\nlamb.isLTE = isLTE;\nlamb.isSVZ = isSVZ;\nlamb.lt = lt;\nlamb.lte = lte;\nlamb.not = not;\nlamb.unless = unless;\nlamb.when = when;\n\n// math\n\nlamb.add = add;\nlamb.clamp = clamp;\nlamb.clampWithin = clampWithin;\nlamb.deduct = deduct;\nlamb.divide = divide;\nlamb.divideBy = divideBy;\nlamb.generate = generate;\nlamb.isFinite = isFinite;\nlamb.isInteger = isInteger;\nlamb.isSafeInteger = isSafeInteger;\nlamb.modulo = modulo;\nlamb.multiply = multiply;\nlamb.multiplyBy = multiplyBy;\nlamb.randomInt = randomInt;\nlamb.range = range;\nlamb.remainder = remainder;\nlamb.subtract = subtract;\nlamb.sum = sum;\n\n// object\n\nlamb.enumerables = enumerables;\nlamb.fromPairs = fromPairs;\nlamb.immutable = immutable;\nlamb.keys = keys;\nlamb.make = make;\nlamb.mapValues = mapValues;\nlamb.mapValuesWith = mapValuesWith;\nlamb.merge = merge;\nlamb.mergeOwn = mergeOwn;\nlamb.ownPairs = ownPairs;\nlamb.ownValues = ownValues;\nlamb.pairs = pairs;\nlamb.pick = pick;\nlamb.pickIf = pickIf;\nlamb.pickKeys = pickKeys;\nlamb.rename = rename;\nlamb.renameKeys = renameKeys;\nlamb.renameWith = renameWith;\nlamb.skip = skip;\nlamb.skipIf = skipIf;\nlamb.skipKeys = skipKeys;\nlamb.tear = tear;\nlamb.tearOwn = tearOwn;\nlamb.values = values;\n\n// object_checking\n\nlamb.checker = checker;\nlamb.has = has;\nlamb.hasKey = hasKey;\nlamb.hasKeyValue = hasKeyValue;\nlamb.hasOwn = hasOwn;\nlamb.hasOwnKey = hasOwnKey;\nlamb.hasPathValue = hasPathValue;\nlamb.keySatisfies = keySatisfies;\nlamb.pathExists = pathExists;\nlamb.pathExistsIn = pathExistsIn;\nlamb.pathSatisfies = pathSatisfies;\nlamb.validate = validate;\nlamb.validateWith = validateWith;\n\n// sort\n\nlamb.sort = sort;\nlamb.sortWith = sortWith;\nlamb.sortedInsert = sortedInsert;\nlamb.sorter = sorter;\nlamb.sorterDesc = sorterDesc;\n\n// string\n\nlamb.padLeft = padLeft;\nlamb.padRight = padRight;\nlamb.repeat = repeat;\nlamb.testWith = testWith;\n\n// type\n\nlamb.isInstanceOf = isInstanceOf;\nlamb.isNil = isNil;\nlamb.isNull = isNull;\nlamb.isType = isType;\nlamb.isUndefined = isUndefined;\nlamb.type = type;\n\nexport default lamb;\n"],"names":["isFinite"],"mappings":"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IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,kBAAe,aAAa,CAAC,SAAS,CAAC,CAAC;;IC9BxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC;;ICjBxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;IChBzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,aAAa,CAAC,SAAS,CAAC,CAAC;;ICzBxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;IACnD,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IACvB,QAAQ,MAAM,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClD,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC;;ICrCD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,gBAAgB,CAAC,CAAC,CAAC,CAAC;;ICZnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE;IAC5C,IAAI,OAAO,YAAY;IACvB,QAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,C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DD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE;IACzD,IAAI,OAAO,YAAY,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;IAC7D,CAAC;;ICvBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE;IAClD,IAAI,OAAO,UAAU,SAAS,EAAE;IAChC,QAAQ,OAAO,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC1D,KAAK,CAAC;IACN,CAAC;;IC1BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,sBAAe,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;;ICnBpD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE;IACxD,IAAI,OAAO,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC;IACrC,QAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,QAAQ,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;;IC/BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,sBAAe,OAAO,CAAC,SAA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AAE,EAAE,EAAE,CAAC,CAAC;IAC1B,IAAI,IAAI,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;;IAE/B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IACtC,QAAQ,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC1B,QAAQ,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7D,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;ICxBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,wBAAe,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;IC9BxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE;IAC/C,IAAI,OAAO,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,CAAC;;IC9BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,kBAAe,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;ICjBlC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,mBAAe,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;;ICtBxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;IACrD,IAAI,OAAO,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,UAAU,OAAO,EAAE;IACzD,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACtC,KAAK,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;;ICtBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;ICtBvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,yBAAe,mBAAmB,CAAC,KAAK,CAAC,CAAC;;IChB1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;;IChBvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE;IAChD,IAAI,OAAO,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;;ICtBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;ICpBvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,SAAS,EAAE;IAC9C,IAAI,OAAO,UAAU,SAAS,EAAE;IAChC,QAAQ,OAAO,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,sBAAsB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;IACjF,KAAK,CAAC;IACN,CAAC;;ICvBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,SAAS,EAAE;IAC9C,IAAI,IAAI,MAAM,GAAG,gBAAgB,CAAC;IAClC,IAAI,IAAI,GAAG,GAAG,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;;IAE/C,IAAI,IAAI,GAAG,KAAK,CAAC,EAAE;IACnB,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK;;IAEL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,UAAU,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC9C,QAAQ,UAAU,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;;IAEzD,QAAQ,IAAI,UAAU,GAAG,MAAM,EAAE;IACjC,YAAY,MAAM,GAAG,UAAU,CAAC;IAChC,SAAS;IACT,KAAK;;IAEL,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;;IAE/B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACzC,QAAQ,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;;IAEpC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAClC,YAAY,EAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,SAAS;IACT,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;ICpDD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,OAAO,EAAE,QAAQ,EAAE;IAC3C,IAAI,OAAO,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;;ICzBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,OAAO,CAAC,QAAQ,CAAC,CAAC;;ICnBjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,cAAe,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;ICrBxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,uBAAe,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;ICdrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;ICrBtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,qBAAe,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;ICvBrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE;IACzD,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC;;IAEpB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC1D,QAAQ,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE;IACnD,YAAY,MAAM,GAAG,CAAC,CAAC;IACvB,YAAY,MAAM;IAClB,SAAS;IACT,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;IChCD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;IACpD,IAAI,IAAI,GAAG,GAAG,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;IAE9C,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC;;IC1BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,yBAAe,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;ICnBxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,oBAAe,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;ICpBnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,sBAAe,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;;ICdhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,0BAAe,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;;ICrBhD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,qBAAe,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;ICtB3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,OAAO,EAAE,SAAS,EAAE;IAC5C,IAAI,IAAI,GAAG,GAAG,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC/C,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;;IAE5B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IACjD,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACvC,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;ICvBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,kBAAe,aAAa,CAAC,KAAK,CAAC,CAAC;;ICxBpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,iBAAe,iBAAiB,CAAC,KAAK,CAAC,CAAC;;ICnCxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;ICxBrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,MAAM,EAAE,KAAK,EAAE;IACvC,IAAI,OAAO,YAAY;IACvB,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK,CAAC;IACN,CAAC;;IC5BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,WAAW,EAAE,EAAE,EAAE,IAAI,EAAE;IAC/C,IAAI,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC;;ICZD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,OAAO,CAAC,WAAW,CAAC,CAAC;;IChBpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,kBAAe,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;;ICnB1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,EAAE,EAAE;IACvC,IAAI,OAAO,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9B,CAAC;;IC1CD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,OAAO,IAAI;IACnC,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;IAEhD,IAAI,OAAO,YAAY;IACvB,QAAQ,OAAO,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAClD,KAAK,CAAC;IACN,CAAC;;ICnCD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA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;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,UAAU,CAAC,UAAU,CAAC,EAAE;IACvC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;;IC1BH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,kBAAe,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;;IC1BpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC1C,IAAI,IAAI,CAAC,CAAC,EAAE;IACZ,QAAQ,OAAO,CAAC,CAAC,CAAC,CAAC;IACnB,KAAK;;IAEL,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;IAEpB,IAAI,OAAO,CAAC,CAAC;IACb,CAAC,CAAC,CAAC;;ICjEH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,kBAAe,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;;ICvCpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC1C,IAAI,OAAO,CAAC,CAAC;IACb,CAAC,CAAC,CAAC;;ICpDH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,kBAAe,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;;IC9BpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,OAAO,IAAI;IACnC,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;IAEhD,IAAI,OAAO,YAAY;IACvB,QAAQ,IAAI,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;IACnC,QAAQ,IAAI,MAAM,CAAC;;IAEnB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IACtC,YAAY,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;IAEzD,YAAY,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;IACtC,gBAAgB,MAAM;IACtB,aAAa;IACb,SAAS;;IAET,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;IACN,CAAC;;ICnDD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA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;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,aAAe,OAAO,CAAC,OAAO,CAAC,CAAC;;ICpChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;;ICtBjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;IC1BlC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;IAClC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;;IC3BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;;ICzBjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;;ICrBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;ICvBlC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,OAAO,CAAC,MAAM,CAAC,CAAC;;ICvC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE;IAC/C,IAAI,OAAO,UAAU,KAAK,EAAE;IAC5B,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC1E,KAAK,CAAC;IACN,CAAC;;IC3BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IAC7C,IAAI,OAAO,UAAU,KAAK,EAAE;IAC5B,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAC1E,KAAK,CAAC;IACN,CAAC;;IC3BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;;ICZD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,cAAe,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;IChBlC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,sBAAe,aAAa,CAAC,KAAK,CAAC,CAAC;;ICxBpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE;IACxC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;;ICZD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,iBAAe,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;ICpBvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE;IACtC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;;ICZD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,mBAAe,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;ICpBrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE;IACxD,IAAI,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;;IAEzB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;IACrD,QAAQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IACpD,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;ICzBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,mBAAQ,EAAE,KAAK,EAAE;IAChC,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;;ICtBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,KAAK,EAAE;IAC1C,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,QAAQ,IAAI,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;;ICtBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,aAAa,EAAE,KAAK,EAAE;IAC9C,IAAI,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,gBAAgB,CAAC;IACnE,CAAC;;IC9BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE;IACtC,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;;ICxBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE;IACxC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;;ICZD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,qBAAe,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;IClBvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE;IAC7C,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC7D,CAAC;;IChBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE;IACnD,IAAI,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;IAClC,IAAI,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;IAClC,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;IAE7D,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE;IACpB,QAAQ,OAAO,KAAK,KAAK,KAAK,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAC9C,KAAK;;IAEL,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7D,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;;IAE5B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IACrD,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAC9B,QAAQ,SAAS,IAAI,IAAI,CAAC;IAC1B,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;IC7CD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE;IACzC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;;ICnBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,SAAS,EAAE;IAC9C,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;;IAEpB,IAAI,OAAO,CAAC,SAAS,EAAE,UAAU,IAAI,EAAE;IACvC,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,KAAK,CAAC,CAAC;;IAEP,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;ICxBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,GAAG,EAAE;IACxC,IAAI,OAAO,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC;;IChCD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,kBAAkB,CAAC,SAAS,CAAC,CAAC;;IC3B7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IAC7C,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;IACpB,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;;IAElC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IACtD,QAAQ,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC9D,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;IC1BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE;IAC/C,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IACvB,QAAQ,MAAM,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClD,KAAK;;IAEL,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;;IAEpB,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;IAC5B,QAAQ,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;IACnD,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;IC/BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,wBAAe,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;ICrBxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,OAAO,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;;ICrB9C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,mBAAe,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;;IC9BvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,mBAAe,UAAU,CAAC,IAAI,CAAC,CAAC;;ICtBhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,oBAAe,WAAW,CAAC,IAAI,CAAC,CAAC;;ICpBjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,gBAAe,UAAU,CAAC,WAAW,CAAC,CAAC;;ICjBvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACvC,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;IACtD,QAAQ,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,KAAK;;IAEL,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC;IACtB,CAAC;;IC9BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE;IACjD,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;;IAEpB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC/D,QAAQ,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;IAE3B,QAAQ,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;IAC9B,YAAY,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IACtC,SAAS;IACT,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;IC7BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,MAAM,EAAE,SAAS,EAAE;IAC3C,IAAI,OAAO,UAAU,MAAM,EAAE;IAC7B,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IAC3B,YAAY,MAAM,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACtD,SAAS;;IAET,QAAQ,IAAI,MAAM,GAAG,EAAE,CAAC;;IAExB,QAAQ,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;IAChC,YAAY,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE;IACrD,gBAAgB,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1C,aAAa;IACb,SAAS;;IAET,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;IACN,CAAC;;ICnCD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,mBAAe,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;ICtCnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;IACjD,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;IACpB,IAAI,IAAI,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;;IAEtC,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,EAAE;IAC9B,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;IACpC,YAAY,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IACjD,SAAS;IACT,KAAK;;IAEL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC7D,QAAQ,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEzB,QAAQ,IAAI,EAAE,GAAG,IAAI,OAAO,IAAI,GAAG,IAAI,MAAM,CAAC,EAAE;IAChD,YAAY,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IACtC,SAAS;IACT,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;ICzCD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,qBAAe,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;IC9BrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,UAAU,EAAE,EAAE,EAAE;IACxC,IAAI,OAAO,UAAU,MAAM,EAAE;IAC7B,QAAQ,OAAO,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1C,KAAK,CAAC;IACN,CAAC;;ICxBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAe,SAAS,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE;IACjD,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IACvB,QAAQ,MAAM,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClD,KAAK;;IAEL,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;IACpB,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;;IAEpC,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;IAC5B,QAAQ,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE;IAC7B,YAAY,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IACtC,SAAS;IACT,KAAK;;IAEL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;ICjCD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,iBAAe,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;;ICrBpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,mBAAe,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;ICrCnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,eAAe,SAAS,CAAC,WAAW,CAAC,CAAC;;ICjBtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,kBAAe,SAAS,CAAC,IAAI,CAAC,CAAC;;ICrB/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,iBAAe,WAAW,CAAC,WAAW,CAAC,CAAC;;ICdxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA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"}